{
  "api/index.html": {
    "href": "api/index.html",
    "title": "OpenMod API Documentation | OpenMod Docs",
    "keywords": "OpenMod API Documentation Here you can browse the OpenMod API documentation."
  },
  "api/Microsoft.Extensions.Configuration.html": {
    "href": "api/Microsoft.Extensions.Configuration.html",
    "title": "Namespace Microsoft.Extensions.Configuration | OpenMod Docs",
    "keywords": "Namespace Microsoft.Extensions.Configuration Classes YamlConfigurationExtensions Extension methods for adding YamlConfigurationExtensions . Ex: supports variables."
  },
  "api/Microsoft.Extensions.Configuration.YamlConfigurationExtensions.html": {
    "href": "api/Microsoft.Extensions.Configuration.YamlConfigurationExtensions.html",
    "title": "Class YamlConfigurationExtensions | OpenMod Docs",
    "keywords": "Class YamlConfigurationExtensions Extension methods for adding YamlConfigurationExtensions . Ex: supports variables. Inheritance System.Object YamlConfigurationExtensions Namespace : Microsoft.Extensions.Configuration Assembly : OpenMod.Core.dll Syntax public static class YamlConfigurationExtensions : object Methods | Improve this Doc View Source AddYamlFileEx(IConfigurationBuilder, Action<YamlConfigurationSourceEx>) Adds a YAML configuration source to builder . Ex: supports variables. Declaration public static IConfigurationBuilder AddYamlFileEx(this IConfigurationBuilder builder, Action<YamlConfigurationSourceEx> configureSource) Parameters Type Name Description IConfigurationBuilder builder The to add to. Action < YamlConfigurationSourceEx > configureSource Configures the source. Returns Type Description IConfigurationBuilder The . | Improve this Doc View Source AddYamlFileEx(IConfigurationBuilder, Nullable<IFileProvider>, String, Nullable<IDictionary<String, String>>, Boolean, Boolean) Adds a YAML configuration source to builder . Ex: supports variables. Declaration public static IConfigurationBuilder AddYamlFileEx(this IConfigurationBuilder builder, IFileProvider? provider, string path, IDictionary<string, string>? variables, bool optional, bool reloadOnChange) Parameters Type Name Description IConfigurationBuilder builder The to add to. System.Nullable < IFileProvider > provider The to use to access the file. System.String path Path relative to the base path stored in of builder . System.Nullable < IDictionary < System.String , System.String >> variables Variables to replace. System.Boolean optional Whether the file is optional. System.Boolean reloadOnChange Whether the configuration should be reloaded if the file changes. Returns Type Description IConfigurationBuilder The . | Improve this Doc View Source AddYamlFileEx(IConfigurationBuilder, String) Adds the YAML configuration provider at path to builder . Ex: supports variables. Declaration public static IConfigurationBuilder AddYamlFileEx(this IConfigurationBuilder builder, string path) Parameters Type Name Description IConfigurationBuilder builder The to add to. System.String path Path relative to the base path stored in of builder . Returns Type Description IConfigurationBuilder The . | Improve this Doc View Source AddYamlFileEx(IConfigurationBuilder, String, IDictionary<String, String>, Boolean, Boolean) Adds the YAML configuration provider at path to builder . Ex: supports variables. Declaration public static IConfigurationBuilder AddYamlFileEx(this IConfigurationBuilder builder, string path, IDictionary<string, string> variables, bool optional, bool reloadOnChange) Parameters Type Name Description IConfigurationBuilder builder The to add to. System.String path Path relative to the base path stored in of builder . IDictionary < System.String , System.String > variables Variables to replace. System.Boolean optional Whether the file is optional. System.Boolean reloadOnChange Whether the configuration should be reloaded if the file changes. Returns Type Description IConfigurationBuilder The . | Improve this Doc View Source AddYamlFileEx(IConfigurationBuilder, String, Boolean) Adds the YAML configuration provider at path to builder . Ex: supports variables. Declaration public static IConfigurationBuilder AddYamlFileEx(this IConfigurationBuilder builder, string path, bool optional) Parameters Type Name Description IConfigurationBuilder builder The to add to. System.String path Path relative to the base path stored in of builder . System.Boolean optional Whether the file is optional. Returns Type Description IConfigurationBuilder The . | Improve this Doc View Source AddYamlFileEx(IConfigurationBuilder, String, Boolean, Boolean) Adds the YAML configuration provider at path to builder . Ex: supports variables. Declaration public static IConfigurationBuilder AddYamlFileEx(this IConfigurationBuilder builder, string path, bool optional, bool reloadOnChange) Parameters Type Name Description IConfigurationBuilder builder The to add to. System.String path Path relative to the base path stored in of builder . System.Boolean optional Whether the file is optional. System.Boolean reloadOnChange Whether the configuration should be reloaded if the file changes. Returns Type Description IConfigurationBuilder The ."
  },
  "api/OpenMod.Analyzers.html": {
    "href": "api/OpenMod.Analyzers.html",
    "title": "Namespace OpenMod.Analyzers | OpenMod Docs",
    "keywords": "Namespace OpenMod.Analyzers Classes InternalUsageDiagnosticAnalyzer"
  },
  "api/OpenMod.Analyzers.InternalUsageDiagnosticAnalyzer.html": {
    "href": "api/OpenMod.Analyzers.InternalUsageDiagnosticAnalyzer.html",
    "title": "Class InternalUsageDiagnosticAnalyzer | OpenMod Docs",
    "keywords": "Class InternalUsageDiagnosticAnalyzer Inheritance System.Object InternalUsageDiagnosticAnalyzer Namespace : OpenMod.Analyzers Assembly : OpenMod.Analyzers.dll Syntax public class InternalUsageDiagnosticAnalyzer : DiagnosticAnalyzer Fields | Improve this Doc View Source Category Declaration protected const string Category = null Field Value Type Description System.String | Improve this Doc View Source DefaultTitle Declaration protected const string DefaultTitle = null Field Value Type Description System.String | Improve this Doc View Source Id Declaration public const string Id = null Field Value Type Description System.String | Improve this Doc View Source MessageFormat Declaration public const string MessageFormat = null Field Value Type Description System.String Properties | Improve this Doc View Source SupportedDiagnostics Declaration public override ImmutableArray<DiagnosticDescriptor> SupportedDiagnostics { get; } Property Value Type Description ImmutableArray < DiagnosticDescriptor > Methods | Improve this Doc View Source Initialize(AnalysisContext) Declaration public override void Initialize(AnalysisContext context) Parameters Type Name Description AnalysisContext context Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.html": {
    "href": "api/OpenMod.API.Commands.html",
    "title": "Namespace OpenMod.API.Commands | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Commands Classes UserFriendlyException Represents exceptions of which the message should be shown to the command actor. Interfaces ICommand Represents a command. ICommandActor Represents an actor that can execute commands. ICommandContext Represents a command context. ICommandContextBuilder The service for creating command contexts. ICommandExecutor The service for executing commands. ICommandParameterResolveProvider A provider for resolving command parameters. ICommandParameterResolver The service for resolving command parameters. ICommandParameters Represents the parameters of a command. ICommandPermissionBuilder The service for building command permissions. In other words; this service determines what permission a command requires. ICommandRegistration Represents a registered command. ICommandSource Represents a command source that provides commands. ICommandStore The service for getting commands. ICurrentCommandContextAccessor The service for getting the current command context."
  },
  "api/OpenMod.API.Commands.ICommand.html": {
    "href": "api/OpenMod.API.Commands.ICommand.html",
    "title": "Interface ICommand | OpenMod Docs",
    "keywords": "Interface ICommand Represents a command. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommand Methods | Improve this Doc View Source ExecuteAsync() Executes the command. Declaration Task ExecuteAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandActor.html": {
    "href": "api/OpenMod.API.Commands.ICommandActor.html",
    "title": "Interface ICommandActor | OpenMod Docs",
    "keywords": "Interface ICommandActor Represents an actor that can execute commands. Inherited Members IPermissionActor.Id IPermissionActor.Type IPermissionActor.DisplayName IPermissionActor.FullActorName Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandActor : IPermissionActor Methods | Improve this Doc View Source PrintMessageAsync(String) Prints a message to the actor. Declaration Task PrintMessageAsync(string message) Parameters Type Name Description System.String message The message to print. Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, Color) Prints a colored message to the actor. Declaration Task PrintMessageAsync(string message, Color color) Parameters Type Name Description System.String message The message to print. Color color The color of the message. Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandContext.html": {
    "href": "api/OpenMod.API.Commands.ICommandContext.html",
    "title": "Interface ICommandContext | OpenMod Docs",
    "keywords": "Interface ICommandContext Represents a command context. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandContext : IAsyncDisposable Properties | Improve this Doc View Source Actor Gets the actor executing command. Declaration ICommandActor Actor { get; } Property Value Type Description ICommandActor | Improve this Doc View Source ChildContext Gets the child command context. Declaration ICommandContext ChildContext { get; } Property Value Type Description ICommandContext | Improve this Doc View Source CommandAlias Gets the alias or name used to execute the command. Declaration string CommandAlias { get; } Property Value Type Description System.String | Improve this Doc View Source CommandPrefix Gets the prefix used to call the command. Useful for sending command usage messages. Child commands will include their parents. Declaration string CommandPrefix { get; } Property Value Type Description System.String Examples If the command was executed using \"/mycommand\", it will be \"/\", when it was executed using \"!mycommand\", it will be \"!\". If the command was a ChildrenCommand \"sub\", \"/mycommand sub\" will return \"/mycommand\" as prefix. | Improve this Doc View Source CommandRegistration Gets the command registration. Returns null if the command was not found. Declaration ICommandRegistration CommandRegistration { get; } Property Value Type Description ICommandRegistration | Improve this Doc View Source Data Gets the data for the context. Can be used by plugins for passing arbritrary data to the command context. Declaration Dictionary<string, object> Data { get; } Property Value Type Description Dictionary < System.String , System.Object > | Improve this Doc View Source Exception Gets the exception thrown by the command if one was thrown; otherwise, null . Declaration Exception? Exception { get; set; } Property Value Type Description System.Nullable < Exception > | Improve this Doc View Source Parameters Gets the parameters of the command. Declaration ICommandParameters Parameters { get; } Property Value Type Description ICommandParameters | Improve this Doc View Source ParentContext Gets the parent command context. Declaration ICommandContext ParentContext { get; } Property Value Type Description ICommandContext Examples If the command was entered as \"/mycommand sub\", this will return the parent context with parameters \"sub\". | Improve this Doc View Source RootContext Gets the root context. Declaration ICommandContext RootContext { get; } Property Value Type Description ICommandContext | Improve this Doc View Source ServiceProvider Gets the service provider for the command context. Declaration IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider Extension Methods CommandContextExtensions.GetCommandLine(ICommandContext, Boolean) DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandContextBuilder.html": {
    "href": "api/OpenMod.API.Commands.ICommandContextBuilder.html",
    "title": "Interface ICommandContextBuilder | OpenMod Docs",
    "keywords": "Interface ICommandContextBuilder The service for creating command contexts. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandContextBuilder Methods | Improve this Doc View Source CreateContext(ICommandActor, String[], String, IReadOnlyCollection<ICommandRegistration>) Creates a command context. Declaration ICommandContext CreateContext(ICommandActor actor, string[] args, string prefix, IReadOnlyCollection<ICommandRegistration> commandRegistrations) Parameters Type Name Description ICommandActor actor The command actor. System.String [] args The arguments for the command. System.String prefix The prefix for the command. Can be empty. IReadOnlyCollection < ICommandRegistration > commandRegistrations The command registrations used for looking up commands and their child commands. See GetCommandsAsync() . Returns Type Description ICommandContext The created command context. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandExecutor.html": {
    "href": "api/OpenMod.API.Commands.ICommandExecutor.html",
    "title": "Interface ICommandExecutor | OpenMod Docs",
    "keywords": "Interface ICommandExecutor The service for executing commands. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandExecutor Methods | Improve this Doc View Source ExecuteAsync(ICommandActor, String[], String) Executes a command. Declaration Task<ICommandContext> ExecuteAsync(ICommandActor actor, string[] args, string prefix) Parameters Type Name Description ICommandActor actor The command actor. System.String [] args The command args. System.String prefix The command prefix. Can be empty. Returns Type Description Task < ICommandContext > The created command context. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandParameterResolveProvider.html": {
    "href": "api/OpenMod.API.Commands.ICommandParameterResolveProvider.html",
    "title": "Interface ICommandParameterResolveProvider | OpenMod Docs",
    "keywords": "Interface ICommandParameterResolveProvider A provider for resolving command parameters. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandParameterResolveProvider Methods | Improve this Doc View Source ResolveAsync(Type, String) Resolves an object of the given type from the input. Declaration Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source Supports(Type) Determines whether the given type is supported by this resolver. Declaration bool Supports(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandParameterResolver.html": {
    "href": "api/OpenMod.API.Commands.ICommandParameterResolver.html",
    "title": "Interface ICommandParameterResolver | OpenMod Docs",
    "keywords": "Interface ICommandParameterResolver The service for resolving command parameters. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandParameterResolver Methods | Improve this Doc View Source ResolveAsync(Type, String) Resolves an object of the given type from the input. Declaration Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandParameters.html": {
    "href": "api/OpenMod.API.Commands.ICommandParameters.html",
    "title": "Interface ICommandParameters | OpenMod Docs",
    "keywords": "Interface ICommandParameters Represents the parameters of a command. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandParameters : IReadOnlyCollection<string> Remarks When a command was entered as \"/mycommand test 5 b\", this class will handle and represent \"test\", \"5\" and \"b\". Properties | Improve this Doc View Source Item[Int32] Gets the n. command parameter starting from zero. Index must be less than Length and not negative. Declaration string this[int index] { get; } Parameters Type Name Description System.Int32 index The zero-based index of the parameter. Property Value Type Description System.String The n. command parameter as string. See Also System.ArgumentOutOfRangeException | Improve this Doc View Source Length Gets the amount of parameters. Declaration int Length { get; } Property Value Type Description System.Int32 Examples If the command was entered as \"/mycommand test 5 b\", it would return \"3\". Methods | Improve this Doc View Source GetArgumentLine(Int32) Returns the joined arguments starting from the given position. Declaration string GetArgumentLine(int startPosition) Parameters Type Name Description System.Int32 startPosition The zero based position to start from. Returns Type Description System.String he joined arguments starting from the given position Examples If the command was entered as \"/mycommand dosomething a bla c\" it would return \"a bla c\" if startPosition was 1. | Improve this Doc View Source GetArgumentLine(Int32, Int32) Returns the joined arguments starting at the given position. Declaration string GetArgumentLine(int startPosition, int endPosition) Parameters Type Name Description System.Int32 startPosition The zero based position to start from. System.Int32 endPosition The end position. Returns Type Description System.String he joined arguments starting from the given position Examples If the command was entered as \"/mycommand dosomething a bla c\" it would return \"a bla\" if startPosition was 1 and endPosition was 2. | Improve this Doc View Source GetAsync(Int32, Type) Declaration Task<object> GetAsync(int index, Type type) Parameters Type Name Description System.Int32 index Type type The type to parse the parameter as. Returns Type Description Task < System.Object > | Improve this Doc View Source GetAsync(Int32, Type, Nullable<Object>) Declaration Task<object?> GetAsync(int index, Type type, object? defaultValue) Parameters Type Name Description System.Int32 index Type type The type to parse the parameters as. System.Nullable < System.Object > defaultValue The default return value. Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source GetAsync<T>(Int32) Gets the parameter value at the given index. The value will parsed to the given type. Types like IPlayer , IOnlinePlayer , etc. are supported. Declaration Task<T> GetAsync<T>(int index) Parameters Type Name Description System.Int32 index The zero-based parameter index. Returns Type Description Task <T> The parsed parameter value. Type Parameters Name Description T The type to parse the parameter as. Examples Assume the command was entered as \"/mycommand test 5 b\". Get<string>(0) would be equal to \"test\" (string). Get<int>(1) would be equal to 5 (int). Get<string>(1) would be equal to \"5\" (string). Get<string>(2) would be equal to \"b\" (string). | Improve this Doc View Source GetAsync<T>(Int32, T) Declaration Task<T> GetAsync<T>(int index, T defaultValue) Parameters Type Name Description System.Int32 index T defaultValue The default return value. Returns Type Description Task <T> the parsed parameter value if the given index was valid and the parameter could be parsed to the given type; otherwise defaultValue . Type Parameters Name Description T | Improve this Doc View Source ToArray() Gets the parameters as string array. Declaration string[] ToArray() Returns Type Description System.String [] the parameters as string array. | Improve this Doc View Source ToList() Gets the parameters as string list. Declaration List<string> ToList() Returns Type Description List < System.String > the parameters as string list. | Improve this Doc View Source TryGet(Int32, Type, out Nullable<Object>) Declaration bool TryGet(int index, Type type, out object? value) Parameters Type Name Description System.Int32 index Type type The type to parse the parameters as. System.Nullable < System.Object > value The parsed parameter value. Returns Type Description System.Boolean | Improve this Doc View Source TryGet<T>(Int32, out T) Tries to get and parse a parameter. See GetAsync<T>(Int32) . Declaration bool TryGet<T>(int index, out T value) Parameters Type Name Description System.Int32 index T value The parsed parameter value. Returns Type Description System.Boolean true if the given index was valid and the parameter could be parsed to the given type; otherwise false . Type Parameters Name Description T Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandPermissionBuilder.html": {
    "href": "api/OpenMod.API.Commands.ICommandPermissionBuilder.html",
    "title": "Interface ICommandPermissionBuilder | OpenMod Docs",
    "keywords": "Interface ICommandPermissionBuilder The service for building command permissions. In other words; this service determines what permission a command requires. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandPermissionBuilder Methods | Improve this Doc View Source GetPermission(ICommandRegistration) Gets the permission required to use the given command. Declaration string GetPermission(ICommandRegistration command) Parameters Type Name Description ICommandRegistration command The command to get the permission for. Returns Type Description System.String The permission required to use the command. | Improve this Doc View Source GetPermission(ICommandRegistration, IReadOnlyCollection<ICommandRegistration>) Gets the permission required to use the given command. Declaration string GetPermission(ICommandRegistration command, IReadOnlyCollection<ICommandRegistration> commands) Parameters Type Name Description ICommandRegistration command The command to get the permission for. IReadOnlyCollection < ICommandRegistration > commands The available commands used for determining child command permissions. Returns Type Description System.String The permission required to use the command. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandRegistration.html": {
    "href": "api/OpenMod.API.Commands.ICommandRegistration.html",
    "title": "Interface ICommandRegistration | OpenMod Docs",
    "keywords": "Interface ICommandRegistration Represents a registered command. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandRegistration Properties | Improve this Doc View Source Aliases Gets the aliases of the command, which are often shorter versions of the primary name. Declaration IReadOnlyCollection<string>? Aliases { get; } Property Value Type Description System.Nullable < IReadOnlyCollection < System.String >> Examples If the aliases are \"h\" and \"he\", the command can be executed using \"/h\" or \"/he\". | Improve this Doc View Source Component Gets the owner component of the command. Declaration IOpenModComponent Component { get; } Property Value Type Description IOpenModComponent | Improve this Doc View Source Description Gets the description of the command. Declaration string? Description { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Id Gets the unique ID of the command. Declaration string Id { get; } Property Value Type Description System.String | Improve this Doc View Source IsEnabled True if the command is enabled; otherwise, false . Declaration bool IsEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Gets the primary name of the command, which will be used to execute it. The primary name overrides any Aliases of other commands by default. Declaration string Name { get; } Property Value Type Description System.String Examples If the name is \"heal\", the command will be usually be called using \"/heal\" (or just \"heal\" in console) | Improve this Doc View Source ParentId Gets the ID of the parent command. Returns if the command does not have a parent command. Declaration string? ParentId { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source PermissionRegistrations The permission registrations for this command. Declaration IReadOnlyCollection<IPermissionRegistration>? PermissionRegistrations { get; } Property Value Type Description System.Nullable < IReadOnlyCollection < IPermissionRegistration >> | Improve this Doc View Source Priority Gets the priority for this command. Used in case of conflicting commands for determining which command to execute. The command with higher priority will be preferred. Declaration Priority Priority { get; } Property Value Type Description Priority | Improve this Doc View Source Syntax Gets the command syntax will be shown to the actor when the command was not used correctly. An output for the above example could be \"/heal [player] <amount>\". The syntax should not contain Child Command usage. Declaration string? Syntax { get; } Property Value Type Description System.Nullable < System.String > Remarks [...] means optional argument and <...> means required argument, so in this case \"player\" is an optional argument while \"amount\" is a required one. Examples \"[player] <amount>\" Methods | Improve this Doc View Source Instantiate(IServiceProvider) Instantiates a new command instance for execution. Declaration ICommand Instantiate(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider The service provider of the command scope. Returns Type Description ICommand | Improve this Doc View Source SupportsActor(ICommandActor) Checks if the given actor can use this command. Declaration bool SupportsActor(ICommandActor actor) Parameters Type Name Description ICommandActor actor The actor to check. Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandSource.html": {
    "href": "api/OpenMod.API.Commands.ICommandSource.html",
    "title": "Interface ICommandSource | OpenMod Docs",
    "keywords": "Interface ICommandSource Represents a command source that provides commands. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandSource Methods | Improve this Doc View Source GetCommandsAsync() Gets the commands from the command source. Declaration Task<IReadOnlyCollection<ICommandRegistration>> GetCommandsAsync() Returns Type Description Task < IReadOnlyCollection < ICommandRegistration >> Commands of this provider. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICommandStore.html": {
    "href": "api/OpenMod.API.Commands.ICommandStore.html",
    "title": "Interface ICommandStore | OpenMod Docs",
    "keywords": "Interface ICommandStore The service for getting commands. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICommandStore Methods | Improve this Doc View Source GetCommandsAsync() Gets the commands of all registered ICommandSource s. Declaration Task<IReadOnlyCollection<ICommandRegistration>> GetCommandsAsync() Returns Type Description Task < IReadOnlyCollection < ICommandRegistration >> | Improve this Doc View Source InvalidateAsync() Refreshes the cache. Must be used if a command source has added or removed commands. Declaration Task InvalidateAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.ICurrentCommandContextAccessor.html": {
    "href": "api/OpenMod.API.Commands.ICurrentCommandContextAccessor.html",
    "title": "Interface ICurrentCommandContextAccessor | OpenMod Docs",
    "keywords": "Interface ICurrentCommandContextAccessor The service for getting the current command context. Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public interface ICurrentCommandContextAccessor Properties | Improve this Doc View Source Context Gets or sets the command context processed by the current thread. Returns null if the current thread does not handle a command currently. Declaration ICommandContext Context { get; set; } Property Value Type Description ICommandContext Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Commands.UserFriendlyException.html": {
    "href": "api/OpenMod.API.Commands.UserFriendlyException.html",
    "title": "Class UserFriendlyException | OpenMod Docs",
    "keywords": "Class UserFriendlyException Represents exceptions of which the message should be shown to the command actor. Inheritance System.Object UserFriendlyException CommandIndexOutOfRangeException CommandNotFoundException CommandParameterParseException CommandWrongUsageException NotEnoughPermissionException NotEnoughBalanceException Namespace : OpenMod.API.Commands Assembly : OpenMod.API.dll Syntax public class UserFriendlyException : Exception Constructors | Improve this Doc View Source UserFriendlyException(String) Declaration public UserFriendlyException(string message) Parameters Type Name Description System.String message Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Eventing.EventCallback.html": {
    "href": "api/OpenMod.API.Eventing.EventCallback.html",
    "title": "Delegate EventCallback | OpenMod Docs",
    "keywords": "Delegate EventCallback The callback for event notifications. Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public delegate Task EventCallback(IServiceProvider serviceProvider, object? sender, IEvent event); Parameters Type Name Description IServiceProvider serviceProvider The service provider object. System.Nullable < System.Object > sender The event sender. IEvent event The event instance. Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Eventing.EventCallback-1.html": {
    "href": "api/OpenMod.API.Eventing.EventCallback-1.html",
    "title": "Delegate EventCallback<TEvent> | OpenMod Docs",
    "keywords": "Delegate EventCallback<TEvent> The type safe callback for event notifications. Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public delegate Task EventCallback<in TEvent>(IServiceProvider serviceProvider, object? sender, TEvent event) where TEvent : IEvent; Parameters Type Name Description IServiceProvider serviceProvider The service provider object. System.Nullable < System.Object > sender The event sender. TEvent event The event instance. Returns Type Description Task Type Parameters Name Description TEvent The event type. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Eventing.EventExecutedCallback.html": {
    "href": "api/OpenMod.API.Eventing.EventExecutedCallback.html",
    "title": "Delegate EventExecutedCallback | OpenMod Docs",
    "keywords": "Delegate EventExecutedCallback The callback called after an event has been emitted and all listeners have been notified. Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public delegate Task EventExecutedCallback(IEvent event); Parameters Type Name Description IEvent event Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Eventing.EventListenerPriority.html": {
    "href": "api/OpenMod.API.Eventing.EventListenerPriority.html",
    "title": "Enum EventListenerPriority | OpenMod Docs",
    "keywords": "Enum EventListenerPriority Represents the priority of an event listener. The invocation order is based on from lowest to highest. Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public enum EventListenerPriority : int Fields Name Description High The high priority. Highest The highest priority. Low The low priority. Lowest The lowest priority. Lowest priority event listeners are executed first. Monitor The monitor priority. Monitor priority event listeners are called last and must not change event state. They can also not cancel or uncancel events. Normal The normal priority. This is the default value if no priority is set."
  },
  "api/OpenMod.API.Eventing.html": {
    "href": "api/OpenMod.API.Eventing.html",
    "title": "Namespace OpenMod.API.Eventing | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Eventing Interfaces ICancellableEvent Represents a cancellable event. IEvent Represents a event. IEventBus The service for managing events and event subscriptions. IEventListener Listens for an events. IEventListener<TEvent> IEventListenerOptions Enums EventListenerPriority Represents the priority of an event listener. The invocation order is based on from lowest to highest. Delegates EventCallback The callback for event notifications. EventCallback<TEvent> The type safe callback for event notifications. EventExecutedCallback The callback called after an event has been emitted and all listeners have been notified."
  },
  "api/OpenMod.API.Eventing.ICancellableEvent.html": {
    "href": "api/OpenMod.API.Eventing.ICancellableEvent.html",
    "title": "Interface ICancellableEvent | OpenMod Docs",
    "keywords": "Interface ICancellableEvent Represents a cancellable event. Inherited Members IEvent.Arguments IEvent.Data Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public interface ICancellableEvent : IEvent Properties | Improve this Doc View Source IsCancelled Gets or sets if the event action should be cancelled. Declaration bool IsCancelled { get; set; } Property Value Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Eventing.IEvent.html": {
    "href": "api/OpenMod.API.Eventing.IEvent.html",
    "title": "Interface IEvent | OpenMod Docs",
    "keywords": "Interface IEvent Represents a event. Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public interface IEvent Properties | Improve this Doc View Source Arguments The arguments of the event. Based on the properties of the event object. Declaration Dictionary<string, object> Arguments { get; } Property Value Type Description Dictionary < System.String , System.Object > | Improve this Doc View Source Data Arbitrary additonal event data that can be set and used by plugins. Declaration Dictionary<string, object> Data { get; } Property Value Type Description Dictionary < System.String , System.Object > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Eventing.IEventBus.html": {
    "href": "api/OpenMod.API.Eventing.IEventBus.html",
    "title": "Interface IEventBus | OpenMod Docs",
    "keywords": "Interface IEventBus The service for managing events and event subscriptions. Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public interface IEventBus Methods | Improve this Doc View Source EmitAsync(IOpenModComponent, Nullable<Object>, IEvent, EventExecutedCallback) Emits an event. Declaration Task EmitAsync(IOpenModComponent component, object? sender, IEvent event, EventExecutedCallback callback = null) Parameters Type Name Description IOpenModComponent component The component emitting the event. System.Nullable < System.Object > sender The object emitting the event. IEvent event The event object. EventExecutedCallback callback The optional event callback. See EventExecutedCallback . Returns Type Description Task | Improve this Doc View Source Subscribe(IOpenModComponent, Assembly) Finds and registers all IEventListener s. Declaration IDisposable Subscribe(IOpenModComponent component, Assembly assembly) Parameters Type Name Description IOpenModComponent component The component registering the event listeners. Assembly assembly The assembly to search for event listeners in. Returns Type Description IDisposable A disposable that unsubscribes the event listeners when disposed. | Improve this Doc View Source Subscribe(IOpenModComponent, String, EventCallback) Subscribes a component to an event. Declaration IDisposable Subscribe(IOpenModComponent component, string eventName, EventCallback callback) Parameters Type Name Description IOpenModComponent component The component. System.String eventName The event to subscribe to. EventCallback callback The action to execute. See EventCallback Returns Type Description IDisposable A disposable that unsubscribes the callback when disposed. | Improve this Doc View Source Subscribe(IOpenModComponent, String, EventCallback, IEventListenerOptions) Subscribes a component to an event. Declaration IDisposable Subscribe(IOpenModComponent component, string eventName, EventCallback callback, IEventListenerOptions options) Parameters Type Name Description IOpenModComponent component The component. System.String eventName The event to subscribe to. EventCallback callback The action to execute. See EventCallback IEventListenerOptions options The extended options for this event subscription. Returns Type Description IDisposable A disposable that unsubscribes the callback when disposed. | Improve this Doc View Source Subscribe(IOpenModComponent, Type, EventCallback) Declaration IDisposable Subscribe(IOpenModComponent component, Type eventType, EventCallback callback) Parameters Type Name Description IOpenModComponent component The component. Type eventType The event to subscribe to. EventCallback callback The action to execute after all listeners were notified. Returns Type Description IDisposable A disposable that unsubscribes the callback when disposed. | Improve this Doc View Source Subscribe(IOpenModComponent, Type, EventCallback, IEventListenerOptions) Declaration IDisposable Subscribe(IOpenModComponent component, Type eventType, EventCallback callback, IEventListenerOptions options) Parameters Type Name Description IOpenModComponent component The component. Type eventType The event to subscribe to. EventCallback callback The action to execute after all listeners were notified. IEventListenerOptions options The extended options for this event subscription. Returns Type Description IDisposable A disposable that unsubscribes the callback when disposed. | Improve this Doc View Source Subscribe<TEvent>(IOpenModComponent, EventCallback<TEvent>) Declaration IDisposable Subscribe<TEvent>(IOpenModComponent component, EventCallback<TEvent> callback) where TEvent : IEvent Parameters Type Name Description IOpenModComponent component The component. EventCallback <TEvent> callback The action to execute after all listeners were notified. Returns Type Description IDisposable A disposable that unsubscribes the callback when disposed. Type Parameters Name Description TEvent The event to subscribe to. | Improve this Doc View Source Subscribe<TEvent>(IOpenModComponent, EventCallback<TEvent>, IEventListenerOptions) Declaration IDisposable Subscribe<TEvent>(IOpenModComponent component, EventCallback<TEvent> callback, IEventListenerOptions options) where TEvent : IEvent Parameters Type Name Description IOpenModComponent component The component. EventCallback <TEvent> callback The action to execute after all listeners were notified. IEventListenerOptions options The extended options for this event subscription. Returns Type Description IDisposable A disposable that unsubscribes the callback when disposed. Type Parameters Name Description TEvent The event to subscribe to. | Improve this Doc View Source Unsubscribe(IOpenModComponent) Unsubscribes a component from all events. Declaration void Unsubscribe(IOpenModComponent component) Parameters Type Name Description IOpenModComponent component The component owning the event listeners. | Improve this Doc View Source Unsubscribe(IOpenModComponent, String) Unsubscribes a component from an event. Declaration void Unsubscribe(IOpenModComponent component, string eventName) Parameters Type Name Description IOpenModComponent component The component unsubscribing. System.String eventName The event to unsubscribe from. | Improve this Doc View Source Unsubscribe(IOpenModComponent, Type) Unsubscribe a component from an event. Declaration void Unsubscribe(IOpenModComponent component, Type eventType) Parameters Type Name Description IOpenModComponent component The component unsubscribing. Type eventType The event to unsubscribe from. | Improve this Doc View Source Unsubscribe<TEvent>(IOpenModComponent) Unsubscribes a component from an event. Declaration void Unsubscribe<TEvent>(IOpenModComponent component) where TEvent : IEvent Parameters Type Name Description IOpenModComponent component The component unsubscribing. Type Parameters Name Description TEvent The event to unsubscribe from. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Eventing.IEventListener.html": {
    "href": "api/OpenMod.API.Eventing.IEventListener.html",
    "title": "Interface IEventListener | OpenMod Docs",
    "keywords": "Interface IEventListener Listens for an events. Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public interface IEventListener Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Eventing.IEventListener-1.html": {
    "href": "api/OpenMod.API.Eventing.IEventListener-1.html",
    "title": "Interface IEventListener<TEvent> | OpenMod Docs",
    "keywords": "Interface IEventListener<TEvent> Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public interface IEventListener<in TEvent> : IEventListener where TEvent : IEvent Type Parameters Name Description TEvent The event to listen to. Methods | Improve this Doc View Source HandleEventAsync(Nullable<Object>, TEvent) Called when the event has been emitted. Declaration Task HandleEventAsync(object? sender, TEvent event) Parameters Type Name Description System.Nullable < System.Object > sender The event sender. TEvent event The event object. Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Eventing.IEventListenerOptions.html": {
    "href": "api/OpenMod.API.Eventing.IEventListenerOptions.html",
    "title": "Interface IEventListenerOptions | OpenMod Docs",
    "keywords": "Interface IEventListenerOptions Namespace : OpenMod.API.Eventing Assembly : OpenMod.API.dll Syntax public interface IEventListenerOptions Properties | Improve this Doc View Source IgnoreCancelled Declaration bool IgnoreCancelled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Priority Declaration EventListenerPriority Priority { get; } Property Value Type Description EventListenerPriority Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.html": {
    "href": "api/OpenMod.API.html",
    "title": "Namespace OpenMod.API | OpenMod Docs",
    "keywords": "Namespace OpenMod.API Classes OpenModInternalAttribute RuntimeInitParameters Interfaces IHostInformation Provides information about the OpenMod host. IOpenModComponent Defines an OpenMod component. Components are either plugins or OpenMod assemblies. IOpenModHost Represents a game or anything else that hosts OpenMod. IRuntime The OpenMod runtime is responsible for initializing OpenMod. Enums RuntimeStatus"
  },
  "api/OpenMod.API.IHostInformation.html": {
    "href": "api/OpenMod.API.IHostInformation.html",
    "title": "Interface IHostInformation | OpenMod Docs",
    "keywords": "Interface IHostInformation Provides information about the OpenMod host. Namespace : OpenMod.API Assembly : OpenMod.API.dll Syntax public interface IHostInformation Properties | Improve this Doc View Source HostName Gets the name of the host implementation. Declaration string HostName { get; } Property Value Type Description System.String Examples OpenMod for Unturned | Improve this Doc View Source HostVersion Gets the version of the OpenMod host implementation. Declaration SemVersion HostVersion { get; } Property Value Type Description SemVersion Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Ioc.html": {
    "href": "api/OpenMod.API.Ioc.html",
    "title": "Namespace OpenMod.API.Ioc | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Ioc Classes PluginServiceImplementationAttribute Declares a service implementation for automatic plugin scope IoC registratrion. Service implementations using this attribute are automatically registered for any interface that implements the ServiceAttribute . ServiceAttribute Declares the interfaces as a service for automatic IoC registration. ServiceImplementationAttribute PluginServiceImplementationAttribute ServiceImplementationAttribute Declares a service implementation for automatic global IoC registratrion. Service implementations using this attribute are automatically registered for any interface that implements the ServiceAttribute . ServiceAttribute PluginServiceImplementationAttribute Interfaces IConfigurationConfigurator Configurator for the OpenMod configuration. IContainerConfigurator Configurator for the OpenMod IoC container. IOpenModServiceConfigurationContext The context used when the OpenMod container or configuration gets built. IOpenModStartup Utility class for common functions used during OpenMod startup. IServiceConfigurator Configurator for the OpenMod IoC container."
  },
  "api/OpenMod.API.Ioc.IConfigurationConfigurator.html": {
    "href": "api/OpenMod.API.Ioc.IConfigurationConfigurator.html",
    "title": "Interface IConfigurationConfigurator | OpenMod Docs",
    "keywords": "Interface IConfigurationConfigurator Configurator for the OpenMod configuration. Namespace : OpenMod.API.Ioc Assembly : OpenMod.API.dll Syntax public interface IConfigurationConfigurator Methods | Improve this Doc View Source ConfigureConfiguration(IOpenModServiceConfigurationContext, IConfigurationBuilder) Called when the OpenMod configuration gets built. Declaration void ConfigureConfiguration(IOpenModServiceConfigurationContext openModStartupContext, IConfigurationBuilder configurationBuilder) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext IConfigurationBuilder configurationBuilder Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Ioc.IContainerConfigurator.html": {
    "href": "api/OpenMod.API.Ioc.IContainerConfigurator.html",
    "title": "Interface IContainerConfigurator | OpenMod Docs",
    "keywords": "Interface IContainerConfigurator Configurator for the OpenMod IoC container. Namespace : OpenMod.API.Ioc Assembly : OpenMod.API.dll Syntax public interface IContainerConfigurator Methods | Improve this Doc View Source ConfigureContainer(IOpenModServiceConfigurationContext, ContainerBuilder) Called when the OpenMod root IoC container gets built. Declaration void ConfigureContainer(IOpenModServiceConfigurationContext openModStartupContext, ContainerBuilder containerBuilder) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext The startup context. ContainerBuilder containerBuilder The container builder. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Ioc.IOpenModServiceConfigurationContext.html": {
    "href": "api/OpenMod.API.Ioc.IOpenModServiceConfigurationContext.html",
    "title": "Interface IOpenModServiceConfigurationContext | OpenMod Docs",
    "keywords": "Interface IOpenModServiceConfigurationContext The context used when the OpenMod container or configuration gets built. Namespace : OpenMod.API.Ioc Assembly : OpenMod.API.dll Syntax public interface IOpenModServiceConfigurationContext Properties | Improve this Doc View Source Configuration The current OpenMod configuration. Declaration IConfigurationRoot Configuration { get; } Property Value Type Description IConfigurationRoot | Improve this Doc View Source DataStore Data store for startup. Declaration Dictionary<string, object> DataStore { get; } Property Value Type Description Dictionary < System.String , System.Object > | Improve this Doc View Source LoggerFactory The logger factory. Declaration ILoggerFactory LoggerFactory { get; } Property Value Type Description ILoggerFactory | Improve this Doc View Source OpenModStartup The OpenMod startup utility instance. Declaration IOpenModStartup OpenModStartup { get; } Property Value Type Description IOpenModStartup | Improve this Doc View Source Runtime The OpenMod runtime Declaration IRuntime Runtime { get; } Property Value Type Description IRuntime Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Ioc.IOpenModStartup.html": {
    "href": "api/OpenMod.API.Ioc.IOpenModStartup.html",
    "title": "Interface IOpenModStartup | OpenMod Docs",
    "keywords": "Interface IOpenModStartup Utility class for common functions used during OpenMod startup. Namespace : OpenMod.API.Ioc Assembly : OpenMod.API.dll Syntax public interface IOpenModStartup Properties | Improve this Doc View Source Context The service configuration context. Declaration IOpenModServiceConfigurationContext Context { get; } Property Value Type Description IOpenModServiceConfigurationContext Methods | Improve this Doc View Source RegisterIocAssemblyAndCopyResources(Assembly, String) Registers services using the [Service] and [ServiceImplementation] attributes from the given assembly. Also copies the embedded resources to the given assembly directory. Declaration void RegisterIocAssemblyAndCopyResources(Assembly assembly, string assemblyDir) Parameters Type Name Description Assembly assembly The assembly to register the services from. System.String assemblyDir The directory the embedded resources get copied to. | Improve this Doc View Source RegisterPluginAssembliesAsync(IPluginAssembliesSource) Registers plugin assemblies. Declaration Task<ICollection<Assembly>> RegisterPluginAssembliesAsync(IPluginAssembliesSource source) Parameters Type Name Description IPluginAssembliesSource source The plugin assemblies source. Returns Type Description Task < ICollection < Assembly >> The loaded plugin assemblies. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Ioc.IServiceConfigurator.html": {
    "href": "api/OpenMod.API.Ioc.IServiceConfigurator.html",
    "title": "Interface IServiceConfigurator | OpenMod Docs",
    "keywords": "Interface IServiceConfigurator Configurator for the OpenMod IoC container. Namespace : OpenMod.API.Ioc Assembly : OpenMod.API.dll Syntax public interface IServiceConfigurator Methods | Improve this Doc View Source ConfigureServices(IOpenModServiceConfigurationContext, IServiceCollection) Called when the OpenMod root IoC container gets built. Declaration void ConfigureServices(IOpenModServiceConfigurationContext openModStartupContext, IServiceCollection serviceCollection) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext The startup context. IServiceCollection serviceCollection The service collection. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Ioc.PluginServiceImplementationAttribute.html": {
    "href": "api/OpenMod.API.Ioc.PluginServiceImplementationAttribute.html",
    "title": "Class PluginServiceImplementationAttribute | OpenMod Docs",
    "keywords": "Class PluginServiceImplementationAttribute Declares a service implementation for automatic plugin scope IoC registratrion. Service implementations using this attribute are automatically registered for any interface that implements the ServiceAttribute . Inheritance System.Object PriorityAttribute ServiceImplementationAttribute PluginServiceImplementationAttribute Inherited Members ServiceImplementationAttribute.Lifetime PriorityAttribute.Priority Namespace : OpenMod.API.Ioc Assembly : OpenMod.API.dll Syntax public class PluginServiceImplementationAttribute : ServiceImplementationAttribute Extension Methods DisposeHelper.DisposeSyncOrAsync(Object) See Also ServiceAttribute ServiceImplementationAttribute"
  },
  "api/OpenMod.API.Ioc.ServiceAttribute.html": {
    "href": "api/OpenMod.API.Ioc.ServiceAttribute.html",
    "title": "Class ServiceAttribute | OpenMod Docs",
    "keywords": "Class ServiceAttribute Declares the interfaces as a service for automatic IoC registration. ServiceImplementationAttribute PluginServiceImplementationAttribute Inheritance System.Object ServiceAttribute Namespace : OpenMod.API.Ioc Assembly : OpenMod.API.dll Syntax public class ServiceAttribute : Attribute Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Ioc.ServiceImplementationAttribute.html": {
    "href": "api/OpenMod.API.Ioc.ServiceImplementationAttribute.html",
    "title": "Class ServiceImplementationAttribute | OpenMod Docs",
    "keywords": "Class ServiceImplementationAttribute Declares a service implementation for automatic global IoC registratrion. Service implementations using this attribute are automatically registered for any interface that implements the ServiceAttribute . ServiceAttribute PluginServiceImplementationAttribute Inheritance System.Object PriorityAttribute ServiceImplementationAttribute PluginServiceImplementationAttribute Inherited Members PriorityAttribute.Priority Namespace : OpenMod.API.Ioc Assembly : OpenMod.API.dll Syntax public class ServiceImplementationAttribute : PriorityAttribute Properties | Improve this Doc View Source Lifetime Declaration public ServiceLifetime Lifetime { get; set; } Property Value Type Description ServiceLifetime Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.IOpenModComponent.html": {
    "href": "api/OpenMod.API.IOpenModComponent.html",
    "title": "Interface IOpenModComponent | OpenMod Docs",
    "keywords": "Interface IOpenModComponent Defines an OpenMod component. Components are either plugins or OpenMod assemblies. Namespace : OpenMod.API Assembly : OpenMod.API.dll Syntax public interface IOpenModComponent Properties | Improve this Doc View Source DataStore Gets the optional data store of the component. Declaration IDataStore DataStore { get; } Property Value Type Description IDataStore | Improve this Doc View Source IsComponentAlive Checks if the component is alive. The component must not be able to execute any actions if this returns false. Declaration bool IsComponentAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LifetimeScope Gets the components lifetime scope. Declaration ILifetimeScope LifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source OpenModComponentId Gets the component ID. Declaration string OpenModComponentId { get; } Property Value Type Description System.String | Improve this Doc View Source WorkingDirectory Gets the working directory. Declaration string WorkingDirectory { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.IOpenModHost.html": {
    "href": "api/OpenMod.API.IOpenModHost.html",
    "title": "Interface IOpenModHost | OpenMod Docs",
    "keywords": "Interface IOpenModHost Represents a game or anything else that hosts OpenMod. Inherited Members IOpenModComponent.OpenModComponentId IOpenModComponent.WorkingDirectory IOpenModComponent.IsComponentAlive IOpenModComponent.LifetimeScope IOpenModComponent.DataStore Namespace : OpenMod.API Assembly : OpenMod.API.dll Syntax public interface IOpenModHost : IOpenModComponent Methods | Improve this Doc View Source HasCapability(String) Checks if the host has a capability. Declaration bool HasCapability(string capability) Parameters Type Name Description System.String capability Returns Type Description System.Boolean | Improve this Doc View Source InitAsync() Initializes the host. Declaration Task InitAsync() Returns Type Description Task | Improve this Doc View Source PerformHardReloadAsync() Hard reloads OpenMod binaries from disk. Used upgrading OpenMod without restarting. Declaration Task PerformHardReloadAsync() Returns Type Description Task | Improve this Doc View Source ShutdownAsync() Shuts the host down gracefully. Declaration Task ShutdownAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.IRuntime.html": {
    "href": "api/OpenMod.API.IRuntime.html",
    "title": "Interface IRuntime | OpenMod Docs",
    "keywords": "Interface IRuntime The OpenMod runtime is responsible for initializing OpenMod. Inherited Members IOpenModComponent.OpenModComponentId IOpenModComponent.WorkingDirectory IOpenModComponent.IsComponentAlive IOpenModComponent.LifetimeScope IOpenModComponent.DataStore Namespace : OpenMod.API Assembly : OpenMod.API.dll Syntax public interface IRuntime : IOpenModComponent Properties | Improve this Doc View Source CommandlineArgs Gets the commandline arguments. Declaration string[] CommandlineArgs { get; } Property Value Type Description System.String [] | Improve this Doc View Source Host Gets the .NET generic host instance. Returns null if the host is not loaded yet. Declaration IHost? Host { get; } Property Value Type Description System.Nullable < IHost > | Improve this Doc View Source HostAssemblies Gets the OpenMod host assemblies. Declaration IReadOnlyCollection<Assembly> HostAssemblies { get; } Property Value Type Description IReadOnlyCollection < Assembly > | Improve this Doc View Source HostInformation Information about the OpenMod host. Returns null if the host is not loaded yet. Declaration IHostInformation HostInformation { get; } Property Value Type Description IHostInformation | Improve this Doc View Source IsDisposing Checks if the runtime is shutting down or disposing. Declaration bool IsDisposing { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Status Gets the runtime status. Declaration RuntimeStatus Status { get; } Property Value Type Description RuntimeStatus | Improve this Doc View Source Version Gets the OpenMod runtime version. Declaration SemVersion Version { get; } Property Value Type Description SemVersion Methods | Improve this Doc View Source InitAsync(List<Assembly>, RuntimeInitParameters, Func<IHostBuilder>) Initializes the runtime. Declaration Task<IHost> InitAsync(List<Assembly> openModHostAssemblies, RuntimeInitParameters parameters, Func<IHostBuilder> hostBuilder) Parameters Type Name Description List < Assembly > openModHostAssemblies RuntimeInitParameters parameters Func < IHostBuilder > hostBuilder Returns Type Description Task < IHost > The .NET Generic Host interface. | Improve this Doc View Source PerformSoftReloadAsync() Rebuilds the DI container and reloads all plugins, services, configurations etc. Declaration Task PerformSoftReloadAsync() Returns Type Description Task | Improve this Doc View Source ShutdownAsync() Shuts OpenMod down gracefully and disposes all services. Declaration Task ShutdownAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Jobs.html": {
    "href": "api/OpenMod.API.Jobs.html",
    "title": "Namespace OpenMod.API.Jobs | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Jobs Classes JobCreationParameters Parameters used for scheduling jobs. JobTask Represents a task instance for a job. ScheduledJob Represents a job. Interfaces IJobScheduler Runs jobs from autoexec.yaml. ITaskExecutor Executes a task."
  },
  "api/OpenMod.API.Jobs.IJobScheduler.html": {
    "href": "api/OpenMod.API.Jobs.IJobScheduler.html",
    "title": "Interface IJobScheduler | OpenMod Docs",
    "keywords": "Interface IJobScheduler Runs jobs from autoexec.yaml. Namespace : OpenMod.API.Jobs Assembly : OpenMod.API.dll Syntax public interface IJobScheduler Methods | Improve this Doc View Source FindJobAsync(String) Finds a job based on its name. Declaration Task<ScheduledJob> FindJobAsync(string name) Parameters Type Name Description System.String name Returns Type Description Task < ScheduledJob > The scheduled job if found; otherwise, null. | Improve this Doc View Source GetScheduledJobsAsync(Boolean) Gets all scheduled jobs. Declaration Task<ICollection<ScheduledJob>> GetScheduledJobsAsync(bool includeDisabled = false) Parameters Type Name Description System.Boolean includeDisabled Sets if disabled jobs should be included. Returns Type Description Task < ICollection < ScheduledJob >> All jobs if includeDisabled is set to true; otherwise, only enabled jobs. | Improve this Doc View Source RemoveJobAsync(ScheduledJob) Removes a scheduled job. Will unschedule the job and prevent further execution. Declaration Task<bool> RemoveJobAsync(ScheduledJob job) Parameters Type Name Description ScheduledJob job Returns Type Description Task < System.Boolean > True if the job was found and removed; otherwise, false . | Improve this Doc View Source RemoveJobAsync(String) Removes a scheduled job. Will unschedule the job and prevent further execution. Declaration Task<bool> RemoveJobAsync(string name) Parameters Type Name Description System.String name Returns Type Description Task < System.Boolean > True if the job was found and removed; otherwise, false . | Improve this Doc View Source ScheduleJobAsync(JobCreationParameters) Schedules a new job. Declaration Task<ScheduledJob> ScheduleJobAsync(JobCreationParameters parameters) Parameters Type Name Description JobCreationParameters parameters The parameters for the job creation. Returns Type Description Task < ScheduledJob > | Improve this Doc View Source StartAsync() Notifies the job scheduler that the server has loaded. Declaration Task StartAsync() Returns Type Description Task Remarks This method is for internal usage only and should not be called by plugins. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Jobs.ITaskExecutor.html": {
    "href": "api/OpenMod.API.Jobs.ITaskExecutor.html",
    "title": "Interface ITaskExecutor | OpenMod Docs",
    "keywords": "Interface ITaskExecutor Executes a task. Namespace : OpenMod.API.Jobs Assembly : OpenMod.API.dll Syntax public interface ITaskExecutor Methods | Improve this Doc View Source ExecuteAsync(JobTask) Executes the given task. Declaration Task ExecuteAsync(JobTask task) Parameters Type Name Description JobTask task The task to execute. Returns Type Description Task | Improve this Doc View Source SupportsType(String) Checks if the task executor can execute the given task type. Declaration bool SupportsType(string taskType) Parameters Type Name Description System.String taskType The task type to check Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Jobs.JobCreationParameters.html": {
    "href": "api/OpenMod.API.Jobs.JobCreationParameters.html",
    "title": "Class JobCreationParameters | OpenMod Docs",
    "keywords": "Class JobCreationParameters Parameters used for scheduling jobs. Inheritance System.Object JobCreationParameters Namespace : OpenMod.API.Jobs Assembly : OpenMod.API.dll Syntax public class JobCreationParameters : object Properties | Improve this Doc View Source Args Gets the job arguments. Declaration public Dictionary<string, object?> Args { get; set; } Property Value Type Description Dictionary < System.String , System.Nullable < System.Object >> | Improve this Doc View Source Name Gets the unique name of the job. Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Schedule Gets the schedule expression. Declaration public string Schedule { get; set; } Property Value Type Description System.String | Improve this Doc View Source Task Gets the task type of the job. Requires a ITaskExecutor that can execute the given type. Declaration public string Task { get; set; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Jobs.JobTask.html": {
    "href": "api/OpenMod.API.Jobs.JobTask.html",
    "title": "Class JobTask | OpenMod Docs",
    "keywords": "Class JobTask Represents a task instance for a job. Inheritance System.Object JobTask Namespace : OpenMod.API.Jobs Assembly : OpenMod.API.dll Syntax public sealed class JobTask : object Constructors | Improve this Doc View Source JobTask(String, String, Dictionary<String, Nullable<Object>>) Declaration public JobTask(string jobName, string task, Dictionary<string, object?> args) Parameters Type Name Description System.String jobName System.String task Dictionary < System.String , System.Nullable < System.Object >> args Properties | Improve this Doc View Source Args Gets the task arguments. Declaration public Dictionary<string, object?> Args { get; } Property Value Type Description Dictionary < System.String , System.Nullable < System.Object >> | Improve this Doc View Source JobName Gets the name of the job. Declaration public string JobName { get; } Property Value Type Description System.String | Improve this Doc View Source Task Gets the task type. Declaration public string Task { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Jobs.ScheduledJob.html": {
    "href": "api/OpenMod.API.Jobs.ScheduledJob.html",
    "title": "Class ScheduledJob | OpenMod Docs",
    "keywords": "Class ScheduledJob Represents a job. Inheritance System.Object ScheduledJob Namespace : OpenMod.API.Jobs Assembly : OpenMod.API.dll Syntax public sealed class ScheduledJob : IEquatable<ScheduledJob> Properties | Improve this Doc View Source Args Gets the job arguments. Declaration public Dictionary<string, object?>? Args { get; set; } Property Value Type Description System.Nullable < Dictionary < System.String , System.Nullable < System.Object >>> | Improve this Doc View Source Enabled Checks if the job is enabled. Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Name Gets the unique name of the job. Declaration public string? Name { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Schedule Gets the schedule expression. Declaration public string? Schedule { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Task Gets the task type of the job. Declaration public string? Task { get; set; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source Equals(ScheduledJob) Declaration public bool Equals(ScheduledJob other) Parameters Type Name Description ScheduledJob other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Localization.html": {
    "href": "api/OpenMod.API.Localization.html",
    "title": "Namespace OpenMod.API.Localization | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Localization Interfaces IOpenModHostStringLocalizer The service used for localizing the OpenMod host's messages. IOpenModStringLocalizer The service used for localizing OpenMod messages."
  },
  "api/OpenMod.API.Localization.IOpenModHostStringLocalizer.html": {
    "href": "api/OpenMod.API.Localization.IOpenModHostStringLocalizer.html",
    "title": "Interface IOpenModHostStringLocalizer | OpenMod Docs",
    "keywords": "Interface IOpenModHostStringLocalizer The service used for localizing the OpenMod host's messages. Namespace : OpenMod.API.Localization Assembly : OpenMod.API.dll Syntax public interface IOpenModHostStringLocalizer : IStringLocalizer Remarks This service is not used for localizing plugin messages. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Localization.IOpenModStringLocalizer.html": {
    "href": "api/OpenMod.API.Localization.IOpenModStringLocalizer.html",
    "title": "Interface IOpenModStringLocalizer | OpenMod Docs",
    "keywords": "Interface IOpenModStringLocalizer The service used for localizing OpenMod messages. Namespace : OpenMod.API.Localization Assembly : OpenMod.API.dll Syntax public interface IOpenModStringLocalizer : IStringLocalizer Remarks This service is not used for localizing plugin messages. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.OpenModInternalAttribute.html": {
    "href": "api/OpenMod.API.OpenModInternalAttribute.html",
    "title": "Class OpenModInternalAttribute | OpenMod Docs",
    "keywords": "Class OpenModInternalAttribute Inheritance System.Object OpenModInternalAttribute Namespace : OpenMod.API Assembly : OpenMod.API.dll Syntax public sealed class OpenModInternalAttribute : Attribute Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Permissions.html": {
    "href": "api/OpenMod.API.Permissions.html",
    "title": "Namespace OpenMod.API.Permissions | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Permissions Interfaces IPermissionActor Represents an actor that can be checked for permissions. IPermissionChecker The service used to checking permission authorizations. IPermissionCheckProvider Providers used for checking permissions. IPermissionRegistration Represents a registered permission. IPermissionRegistry The service used for registering and looking up permissions. IPermissionRole Represents a permission role. IPermissionRoleStore The service used for storing permission roles. IPermissionStore Provider for storing permissions. Enums PermissionGrantResult Defines permission check results."
  },
  "api/OpenMod.API.Permissions.IPermissionActor.html": {
    "href": "api/OpenMod.API.Permissions.IPermissionActor.html",
    "title": "Interface IPermissionActor | OpenMod Docs",
    "keywords": "Interface IPermissionActor Represents an actor that can be checked for permissions. Namespace : OpenMod.API.Permissions Assembly : OpenMod.API.dll Syntax public interface IPermissionActor Properties | Improve this Doc View Source DisplayName Gets the human readable name of the actor. Declaration string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source FullActorName Gets the full actor name including display name and ID Declaration string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Gets the unique to the actor type and persistent ID of the actor. Declaration string Id { get; } Property Value Type Description System.String | Improve this Doc View Source Type Gets the type of the actor. Declaration string Type { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Permissions.IPermissionChecker.html": {
    "href": "api/OpenMod.API.Permissions.IPermissionChecker.html",
    "title": "Interface IPermissionChecker | OpenMod Docs",
    "keywords": "Interface IPermissionChecker The service used to checking permission authorizations. Namespace : OpenMod.API.Permissions Assembly : OpenMod.API.dll Syntax public interface IPermissionChecker Properties | Improve this Doc View Source PermissionCheckProviders Gets the permission check providers. Declaration IReadOnlyCollection<IPermissionCheckProvider> PermissionCheckProviders { get; } Property Value Type Description IReadOnlyCollection < IPermissionCheckProvider > | Improve this Doc View Source PermissionStores Gets the permission sources. Declaration IReadOnlyCollection<IPermissionStore> PermissionStores { get; } Property Value Type Description IReadOnlyCollection < IPermissionStore > Methods | Improve this Doc View Source CheckPermissionAsync(IPermissionActor, String) Checks if an actor has authorization to execute an action. Declaration Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor The actor to check. System.String permission The permission to check. Returns Type Description Task < PermissionGrantResult > See PermissionGrantResult . | Improve this Doc View Source InitAsync() Initializes the permission checker. Declaration Task InitAsync() Returns Type Description Task Remarks This method is for internal usage only and should not be called by plugins. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Permissions.IPermissionCheckProvider.html": {
    "href": "api/OpenMod.API.Permissions.IPermissionCheckProvider.html",
    "title": "Interface IPermissionCheckProvider | OpenMod Docs",
    "keywords": "Interface IPermissionCheckProvider Providers used for checking permissions. Namespace : OpenMod.API.Permissions Assembly : OpenMod.API.dll Syntax public interface IPermissionCheckProvider Methods | Improve this Doc View Source CheckPermissionAsync(IPermissionActor, String) Checks if an actor has authorization to execute an action. Declaration Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor The actor to check. System.String permission The permission to check. Returns Type Description Task < PermissionGrantResult > Grant if the actor explicitly has the permission, Deny if the actor explicitly does not have the permission; otherwise, Default | Improve this Doc View Source SupportsActor(IPermissionActor) Defines if the given actor is supported by this provider. Declaration bool SupportsActor(IPermissionActor actor) Parameters Type Name Description IPermissionActor actor The actor to check. Returns Type Description System.Boolean true if the given actor is supported; otherwise, false . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Permissions.IPermissionRegistration.html": {
    "href": "api/OpenMod.API.Permissions.IPermissionRegistration.html",
    "title": "Interface IPermissionRegistration | OpenMod Docs",
    "keywords": "Interface IPermissionRegistration Represents a registered permission. Namespace : OpenMod.API.Permissions Assembly : OpenMod.API.dll Syntax public interface IPermissionRegistration Properties | Improve this Doc View Source DefaultGrant Gets the default grant result if the permission not explicitly granted or denied. Declaration PermissionGrantResult DefaultGrant { get; } Property Value Type Description PermissionGrantResult | Improve this Doc View Source Description Gets the permission description. Declaration string? Description { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Owner Gets the owner component. Declaration IOpenModComponent Owner { get; } Property Value Type Description IOpenModComponent | Improve this Doc View Source Permission Gets the permission. Declaration string Permission { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Permissions.IPermissionRegistry.html": {
    "href": "api/OpenMod.API.Permissions.IPermissionRegistry.html",
    "title": "Interface IPermissionRegistry | OpenMod Docs",
    "keywords": "Interface IPermissionRegistry The service used for registering and looking up permissions. Namespace : OpenMod.API.Permissions Assembly : OpenMod.API.dll Syntax public interface IPermissionRegistry Methods | Improve this Doc View Source FindPermission(IOpenModComponent, String) Searches for a permission registration. Declaration IPermissionRegistration FindPermission(IOpenModComponent component, string permission) Parameters Type Name Description IOpenModComponent component The component that has registered the permission. System.String permission The permission to search for. Returns Type Description IPermissionRegistration The registered permission if founds; otherwise, null . | Improve this Doc View Source FindPermission(String) Searches for a permission registration. Declaration IPermissionRegistration FindPermission(string permission) Parameters Type Name Description System.String permission The permission to search for. Returns Type Description IPermissionRegistration The registered permission if founds; otherwise, null . | Improve this Doc View Source GetPermissions(IOpenModComponent) Gets the registered permissions for the given component. Declaration IReadOnlyCollection<IPermissionRegistration> GetPermissions(IOpenModComponent component) Parameters Type Name Description IOpenModComponent component The component to get the permissions of. Returns Type Description IReadOnlyCollection < IPermissionRegistration > The registered permissions of the given component. | Improve this Doc View Source RegisterPermission(IOpenModComponent, String, Nullable<String>, Nullable<PermissionGrantResult>) Registers a permission. Declaration void RegisterPermission(IOpenModComponent component, string permission, string? description = null, PermissionGrantResult? defaultGrant = null) Parameters Type Name Description IOpenModComponent component The component registering the permission. System.String permission The permission. System.Nullable < System.String > description The optional description. System.Nullable < PermissionGrantResult > defaultGrant The optional default grant. Will default to Default . See DefaultGrant . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Permissions.IPermissionRole.html": {
    "href": "api/OpenMod.API.Permissions.IPermissionRole.html",
    "title": "Interface IPermissionRole | OpenMod Docs",
    "keywords": "Interface IPermissionRole Represents a permission role. Inherited Members IPermissionActor.Id IPermissionActor.Type IPermissionActor.DisplayName IPermissionActor.FullActorName Namespace : OpenMod.API.Permissions Assembly : OpenMod.API.dll Syntax public interface IPermissionRole : IPermissionActor Properties | Improve this Doc View Source IsAutoAssigned Defines if the role should be automatically assigned to new users. Declaration bool IsAutoAssigned { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Parents Gets or sets the parents of the role. Declaration HashSet<string> Parents { get; } Property Value Type Description HashSet < System.String > | Improve this Doc View Source Priority Gets or sets the priority of this role. Declaration int Priority { get; set; } Property Value Type Description System.Int32 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Permissions.IPermissionRoleStore.html": {
    "href": "api/OpenMod.API.Permissions.IPermissionRoleStore.html",
    "title": "Interface IPermissionRoleStore | OpenMod Docs",
    "keywords": "Interface IPermissionRoleStore The service used for storing permission roles. Namespace : OpenMod.API.Permissions Assembly : OpenMod.API.dll Syntax public interface IPermissionRoleStore Methods | Improve this Doc View Source AddRoleToActorAsync(IPermissionActor, String) Adds a role to a user. Declaration Task<bool> AddRoleToActorAsync(IPermissionActor actor, string roleId) Parameters Type Name Description IPermissionActor actor The actor to add the role to. System.String roleId The roleId to add. Returns Type Description Task < System.Boolean > true if the role was successfully added or already exists; otherwise, false . | Improve this Doc View Source CreateRoleAsync(IPermissionRole) Creates a new permission role. Declaration Task<bool> CreateRoleAsync(IPermissionRole role) Parameters Type Name Description IPermissionRole role The role to create. Returns Type Description Task < System.Boolean > true if the role was successfully created; otherwise, false . | Improve this Doc View Source DeleteRoleAsync(String) Deletes a permission role. Declaration Task<bool> DeleteRoleAsync(string roleId) Parameters Type Name Description System.String roleId The roleId to delete. Returns Type Description Task < System.Boolean > true if the role was successfully deleted or doesn't exist; otherwise, false . | Improve this Doc View Source GetAutoAssignedRolesAsync(String, String) Gets the roles that will be auto assigned for the actor. Declaration Task<IReadOnlyCollection<string>> GetAutoAssignedRolesAsync(string actorId, string actorType) Parameters Type Name Description System.String actorId System.String actorType Returns Type Description Task < IReadOnlyCollection < System.String >> | Improve this Doc View Source GetPersistentDataAsync<T>(String, String) Gets persistent data. T must be serializable. Declaration Task<T> GetPersistentDataAsync<T>(string roleId, string key) Parameters Type Name Description System.String roleId System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source GetRoleAsync(String) Gets a permission role. Declaration Task<IPermissionRole> GetRoleAsync(string roleId) Parameters Type Name Description System.String roleId Returns Type Description Task < IPermissionRole > the permission role if found; otherwise, null . | Improve this Doc View Source GetRolesAsync() Gets all permission roles. Declaration Task<IReadOnlyCollection<IPermissionRole>> GetRolesAsync() Returns Type Description Task < IReadOnlyCollection < IPermissionRole >> all permission roles. | Improve this Doc View Source GetRolesAsync(IPermissionActor, Boolean) Gets all roles inherited by the actor. Declaration Task<IReadOnlyCollection<IPermissionRole>> GetRolesAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor The actor. System.Boolean inherit Defines if the parent roles permissions should be included. Returns Type Description Task < IReadOnlyCollection < IPermissionRole >> the inherited roles of the actor. | Improve this Doc View Source RemoveRoleFromActorAsync(IPermissionActor, String) Removes a role from a user. Declaration Task<bool> RemoveRoleFromActorAsync(IPermissionActor actor, string roleId) Parameters Type Name Description IPermissionActor actor The actor to add the role to. System.String roleId The roleId to remove. Returns Type Description Task < System.Boolean > true if the role was successfully removed or doesn't exist; otherwise, false . | Improve this Doc View Source SavePersistentDataAsync<T>(String, String, T) Saves persistent data. T must be serializable. Declaration Task SavePersistentDataAsync<T>(string roleId, string key, T data) Parameters Type Name Description System.String roleId System.String key T data Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source UpdateRoleAsync(IPermissionRole) Updates a role. Declaration Task<bool> UpdateRoleAsync(IPermissionRole role) Parameters Type Name Description IPermissionRole role The role to update. Returns Type Description Task < System.Boolean > true if the role exists and could be updated; otherwise, false . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Permissions.IPermissionStore.html": {
    "href": "api/OpenMod.API.Permissions.IPermissionStore.html",
    "title": "Interface IPermissionStore | OpenMod Docs",
    "keywords": "Interface IPermissionStore Provider for storing permissions. Namespace : OpenMod.API.Permissions Assembly : OpenMod.API.dll Syntax public interface IPermissionStore Methods | Improve this Doc View Source AddDeniedPermissionAsync(IPermissionActor, String) Adds an explicitly denied permission to the actor. Declaration Task<bool> AddDeniedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor The actor. System.String permission The denied permission to add. Returns Type Description Task < System.Boolean > true if the permission was successfully added or exists already; otherwise, false . | Improve this Doc View Source AddGrantedPermissionAsync(IPermissionActor, String) Adds an explicitly granted permission to the actor. Declaration Task<bool> AddGrantedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor The actor. System.String permission The permission to add. Returns Type Description Task < System.Boolean > true if the permission was successfully added or exists already; otherwise, false . | Improve this Doc View Source GetDeniedPermissionsAsync(IPermissionActor, Boolean) Gets the denied permissions of the given actor. Declaration Task<IReadOnlyCollection<string>> GetDeniedPermissionsAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor The actor to get denied permissions from. System.Boolean inherit Defines if the parent roles denied permissions should be included. Returns Type Description Task < IReadOnlyCollection < System.String >> A list of all denied permissions of the actor. | Improve this Doc View Source GetGrantedPermissionsAsync(IPermissionActor, Boolean) Gets the permissions of the given actor. Declaration Task<IReadOnlyCollection<string>> GetGrantedPermissionsAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor The actor to get permissions from. System.Boolean inherit Defines if the parent roles permissions should be included. Returns Type Description Task < IReadOnlyCollection < System.String >> A list of all permissions of the actor. | Improve this Doc View Source RemoveDeniedPermissionAsync(IPermissionActor, String) Removes an explicitly denied permission from the actor. Declaration Task<bool> RemoveDeniedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor The actor. System.String permission The permission to remove. Returns Type Description Task < System.Boolean > true if the permission was successfully removed or doesn't exist; otherwise, false . | Improve this Doc View Source RemoveGrantedPermissionAsync(IPermissionActor, String) Removes an explicitly granted permission from the actor. Declaration Task<bool> RemoveGrantedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor The actor. System.String permission The permission to remove. Returns Type Description Task < System.Boolean > true if the permission was successfully removed or doesn't exist; otherwise, false . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Permissions.PermissionGrantResult.html": {
    "href": "api/OpenMod.API.Permissions.PermissionGrantResult.html",
    "title": "Enum PermissionGrantResult | OpenMod Docs",
    "keywords": "Enum PermissionGrantResult Defines permission check results. Namespace : OpenMod.API.Permissions Assembly : OpenMod.API.dll Syntax public enum PermissionGrantResult : int Fields Name Description Default The permission was not explicitly granted or denied. Default action (which is usually the same as deny) should be performed. Deny The permission was explicitly denied. Grant The permission was explicitly granted."
  },
  "api/OpenMod.API.Persistence.DataStoreCreationParameters.html": {
    "href": "api/OpenMod.API.Persistence.DataStoreCreationParameters.html",
    "title": "Class DataStoreCreationParameters | OpenMod Docs",
    "keywords": "Class DataStoreCreationParameters Parameters for creating a new data store. Inheritance System.Object DataStoreCreationParameters Namespace : OpenMod.API.Persistence Assembly : OpenMod.API.dll Syntax public class DataStoreCreationParameters : object Properties | Improve this Doc View Source Component Gets or sets the owning component. Must not be null if ComponentId is not set. Declaration public IOpenModComponent Component { get; set; } Property Value Type Description IOpenModComponent | Improve this Doc View Source ComponentId Gets or sets the owning component id. Must not be null if Component is not set. Declaration public string? ComponentId { get; set; } Property Value Type Description System.Nullable < System.String > Remarks Obsolete: Use Component instead. | Improve this Doc View Source LogOnChange Defines if detected file changes should be logged. Declaration public bool LogOnChange { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Prefix Gets or sets the prefix. Declaration public string? Prefix { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Suffix Gets or sets the suffix. Declaration public string? Suffix { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source WorkingDirectory Gets or sets the working directory. Declaration public string WorkingDirectory { get; set; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Persistence.html": {
    "href": "api/OpenMod.API.Persistence.html",
    "title": "Namespace OpenMod.API.Persistence | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Persistence Classes DataStoreCreationParameters Parameters for creating a new data store. Interfaces IDataStore Provides persistent storage. IDataStoreFactory The service used to create data stores. IDataStore . IOpenModDataStoreAccessor The service used to access OpenMod's datastore."
  },
  "api/OpenMod.API.Persistence.IDataStore.html": {
    "href": "api/OpenMod.API.Persistence.IDataStore.html",
    "title": "Interface IDataStore | OpenMod Docs",
    "keywords": "Interface IDataStore Provides persistent storage. Namespace : OpenMod.API.Persistence Assembly : OpenMod.API.dll Syntax public interface IDataStore Methods | Improve this Doc View Source AddChangeWatcher(String, IOpenModComponent, Action) Adds a change watcher if the data has changed externally. Does not trigger for calls to SaveAsync<T>(String, T) . Declaration IDisposable AddChangeWatcher(string key, IOpenModComponent component, Action onChange) Parameters Type Name Description System.String key The key to listen to. IOpenModComponent component The component registering the change watcher. Action onChange The on change callback. Returns Type Description IDisposable An that will unregister the change watcher on disposal. | Improve this Doc View Source ExistsAsync(String) Checks if the give key exists. Declaration Task<bool> ExistsAsync(string key) Parameters Type Name Description System.String key The key to check. Returns Type Description Task < System.Boolean > | Improve this Doc View Source LoadAsync<T>(String) Loads data from the given key. Declaration Task<T> LoadAsync<T>(string key) where T : class Parameters Type Name Description System.String key The key to load from. Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source SaveAsync<T>(String, T) Saves data with given key. Declaration Task SaveAsync<T>(string key, T data) where T : class Parameters Type Name Description System.String key The key to store to. T data The data to store to. Returns Type Description Task Type Parameters Name Description T Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Persistence.IDataStoreFactory.html": {
    "href": "api/OpenMod.API.Persistence.IDataStoreFactory.html",
    "title": "Interface IDataStoreFactory | OpenMod Docs",
    "keywords": "Interface IDataStoreFactory The service used to create data stores. IDataStore . Namespace : OpenMod.API.Persistence Assembly : OpenMod.API.dll Syntax public interface IDataStoreFactory Methods | Improve this Doc View Source CreateDataStore(DataStoreCreationParameters) Creates a new datastore. Declaration IDataStore CreateDataStore(DataStoreCreationParameters parameters) Parameters Type Name Description DataStoreCreationParameters parameters The data store creation parameters Returns Type Description IDataStore The created data store. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Persistence.IOpenModDataStoreAccessor.html": {
    "href": "api/OpenMod.API.Persistence.IOpenModDataStoreAccessor.html",
    "title": "Interface IOpenModDataStoreAccessor | OpenMod Docs",
    "keywords": "Interface IOpenModDataStoreAccessor The service used to access OpenMod's datastore. Namespace : OpenMod.API.Persistence Assembly : OpenMod.API.dll Syntax public interface IOpenModDataStoreAccessor Remarks This service cannot be used to access plugin datastores. Use DataStore instead. Properties | Improve this Doc View Source DataStore Gets OpenMod's own datastore. Declaration IDataStore DataStore { get; } Property Value Type Description IDataStore Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Plugins.html": {
    "href": "api/OpenMod.API.Plugins.html",
    "title": "Namespace OpenMod.API.Plugins | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Plugins Classes PluginMetadataAttribute Provides metadata for plugins. Assemblies which do not have this attribute will not be loaded as plugins. Interfaces IOpenModPlugin Represents an OpenMod plugin. IPluginAccessor<TPlugin> Service used for resolving plugin instances. Must be lazy accessed on global scope services. IPluginActivator Service used for activating plugins. IPluginAssembliesSource Provider for plugin assemblies. IPluginAssemblyStore The plugin assembly store used during OpenMod startup. IPluginContainerConfigurator Configurator for plugin containers. IPluginServiceConfigurationContext Context used on plugin container configuration."
  },
  "api/OpenMod.API.Plugins.IOpenModPlugin.html": {
    "href": "api/OpenMod.API.Plugins.IOpenModPlugin.html",
    "title": "Interface IOpenModPlugin | OpenMod Docs",
    "keywords": "Interface IOpenModPlugin Represents an OpenMod plugin. Inherited Members IOpenModComponent.OpenModComponentId IOpenModComponent.WorkingDirectory IOpenModComponent.IsComponentAlive IOpenModComponent.LifetimeScope IOpenModComponent.DataStore Namespace : OpenMod.API.Plugins Assembly : OpenMod.API.dll Syntax public interface IOpenModPlugin : IOpenModComponent Properties | Improve this Doc View Source Author Gets the plugin author. Declaration string? Author { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Description Gets the plugin description Declaration string? Description { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source DisplayName Gets the human readable name of the plugin. Declaration string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source Version Gets the plugin version. Declaration SemVersion Version { get; } Property Value Type Description SemVersion | Improve this Doc View Source Website Gets the plugin website. Declaration string? Website { get; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source LoadAsync() Loads the plugin. Declaration Task LoadAsync() Returns Type Description Task Remarks This method is for internal usage only and should not be used by plugins. | Improve this Doc View Source UnloadAsync() Unloads the plugin. Declaration Task UnloadAsync() Returns Type Description Task Remarks This method is for internal usage only and should not be used by plugins. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Plugins.IPluginAccessor-1.html": {
    "href": "api/OpenMod.API.Plugins.IPluginAccessor-1.html",
    "title": "Interface IPluginAccessor<TPlugin> | OpenMod Docs",
    "keywords": "Interface IPluginAccessor<TPlugin> Service used for resolving plugin instances. Must be lazy accessed on global scope services. Namespace : OpenMod.API.Plugins Assembly : OpenMod.API.dll Syntax public interface IPluginAccessor<out TPlugin> where TPlugin : IOpenModPlugin Type Parameters Name Description TPlugin The plugin to resolve. Properties | Improve this Doc View Source Instance Gets the plugin instance. Returns null if the plugin is not loaded or found. Declaration TPlugin Instance { get; } Property Value Type Description TPlugin Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Plugins.IPluginActivator.html": {
    "href": "api/OpenMod.API.Plugins.IPluginActivator.html",
    "title": "Interface IPluginActivator | OpenMod Docs",
    "keywords": "Interface IPluginActivator Service used for activating plugins. Namespace : OpenMod.API.Plugins Assembly : OpenMod.API.dll Syntax public interface IPluginActivator Properties | Improve this Doc View Source ActivatedPlugins Gets the activated plugins. Declaration IReadOnlyCollection<IOpenModPlugin> ActivatedPlugins { get; } Property Value Type Description IReadOnlyCollection < IOpenModPlugin > Methods | Improve this Doc View Source TryActivatePluginAsync(Assembly) Tries to activate a plugin. Declaration Task<IOpenModPlugin> TryActivatePluginAsync(Assembly assembly) Parameters Type Name Description Assembly assembly The plugin assembly. Returns Type Description Task < IOpenModPlugin > The plugin instance if activation was successful; otherwise, null . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Plugins.IPluginAssembliesSource.html": {
    "href": "api/OpenMod.API.Plugins.IPluginAssembliesSource.html",
    "title": "Interface IPluginAssembliesSource | OpenMod Docs",
    "keywords": "Interface IPluginAssembliesSource Provider for plugin assemblies. Namespace : OpenMod.API.Plugins Assembly : OpenMod.API.dll Syntax public interface IPluginAssembliesSource Methods | Improve this Doc View Source LoadPluginAssembliesAsync() Loads plugin assemblies. Declaration Task<ICollection<Assembly>> LoadPluginAssembliesAsync() Returns Type Description Task < ICollection < Assembly >> The loaded plugin assemblies. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Plugins.IPluginAssemblyStore.html": {
    "href": "api/OpenMod.API.Plugins.IPluginAssemblyStore.html",
    "title": "Interface IPluginAssemblyStore | OpenMod Docs",
    "keywords": "Interface IPluginAssemblyStore The plugin assembly store used during OpenMod startup. Namespace : OpenMod.API.Plugins Assembly : OpenMod.API.dll Syntax public interface IPluginAssemblyStore Remarks This is an interface is for internal usage only and should not be used by plugins. Properties | Improve this Doc View Source LoadedPluginAssemblies Gets the loaded plugin assemblies. Declaration IReadOnlyCollection<Assembly> LoadedPluginAssemblies { get; } Property Value Type Description IReadOnlyCollection < Assembly > Methods | Improve this Doc View Source LoadPluginAssembliesAsync(IPluginAssembliesSource) Loads plugin assemblies from the given assembly source. Declaration Task<ICollection<Assembly>> LoadPluginAssembliesAsync(IPluginAssembliesSource source) Parameters Type Name Description IPluginAssembliesSource source The assemblies source. Returns Type Description Task < ICollection < Assembly >> The loaded plugin assemblies. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Plugins.IPluginContainerConfigurator.html": {
    "href": "api/OpenMod.API.Plugins.IPluginContainerConfigurator.html",
    "title": "Interface IPluginContainerConfigurator | OpenMod Docs",
    "keywords": "Interface IPluginContainerConfigurator Configurator for plugin containers. Namespace : OpenMod.API.Plugins Assembly : OpenMod.API.dll Syntax public interface IPluginContainerConfigurator Methods | Improve this Doc View Source ConfigureContainer(IPluginServiceConfigurationContext) Called when a plugins container gets configured. Declaration void ConfigureContainer(IPluginServiceConfigurationContext context) Parameters Type Name Description IPluginServiceConfigurationContext context The configuration context. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Plugins.IPluginServiceConfigurationContext.html": {
    "href": "api/OpenMod.API.Plugins.IPluginServiceConfigurationContext.html",
    "title": "Interface IPluginServiceConfigurationContext | OpenMod Docs",
    "keywords": "Interface IPluginServiceConfigurationContext Context used on plugin container configuration. Namespace : OpenMod.API.Plugins Assembly : OpenMod.API.dll Syntax public interface IPluginServiceConfigurationContext Properties | Improve this Doc View Source Configuration Gets the plugin configuration. Declaration IConfiguration Configuration { get; } Property Value Type Description IConfiguration | Improve this Doc View Source ContainerBuilder Gets the container builder. Declaration ContainerBuilder ContainerBuilder { get; } Property Value Type Description ContainerBuilder | Improve this Doc View Source ParentLifetimeScope Gets the parent lifetime scope. Declaration ILifetimeScope ParentLifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source WorkingDirectory Gets the plugin working directory. Declaration string WorkingDirectory { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Plugins.PluginMetadataAttribute.html": {
    "href": "api/OpenMod.API.Plugins.PluginMetadataAttribute.html",
    "title": "Class PluginMetadataAttribute | OpenMod Docs",
    "keywords": "Class PluginMetadataAttribute Provides metadata for plugins. Assemblies which do not have this attribute will not be loaded as plugins. Inheritance System.Object PluginMetadataAttribute Namespace : OpenMod.API.Plugins Assembly : OpenMod.API.dll Syntax public sealed class PluginMetadataAttribute : Attribute Constructors | Improve this Doc View Source PluginMetadataAttribute(String) Declaration public PluginMetadataAttribute(string id) Parameters Type Name Description System.String id Properties | Improve this Doc View Source Author Gets or sets the author of the plugin. Declaration public string? Author { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Description Gets or sets the description of the plugin. Declaration public string? Description { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source DisplayName Gets or sets the human-readable name of the plugin. Declaration public string? DisplayName { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Id Gets or sets the plugin ID. Must start with a letter and can only contain alphanumeric characters including dots. Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source Website Gets or sets the website of the plugin. Declaration public string? Website { get; set; } Property Value Type Description System.Nullable < System.String > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Prioritization.html": {
    "href": "api/OpenMod.API.Prioritization.html",
    "title": "Namespace OpenMod.API.Prioritization | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Prioritization Classes PriorityAttribute Sets the priority for the given implementation. Enums Priority Represents priority."
  },
  "api/OpenMod.API.Prioritization.Priority.html": {
    "href": "api/OpenMod.API.Prioritization.Priority.html",
    "title": "Enum Priority | OpenMod Docs",
    "keywords": "Enum Priority Represents priority. Namespace : OpenMod.API.Prioritization Assembly : OpenMod.API.dll Syntax public enum Priority : int Fields Name Description High The high priority. Highest The highest priority. Low The low priority. Lowest The lowest priority. Normal The normal priority. This is the default priority."
  },
  "api/OpenMod.API.Prioritization.PriorityAttribute.html": {
    "href": "api/OpenMod.API.Prioritization.PriorityAttribute.html",
    "title": "Class PriorityAttribute | OpenMod Docs",
    "keywords": "Class PriorityAttribute Sets the priority for the given implementation. Inheritance System.Object PriorityAttribute ServiceImplementationAttribute CommandAttribute Namespace : OpenMod.API.Prioritization Assembly : OpenMod.API.dll Syntax public class PriorityAttribute : Attribute Properties | Improve this Doc View Source Priority Declaration public Priority Priority { get; set; } Property Value Type Description Priority Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.RuntimeInitParameters.html": {
    "href": "api/OpenMod.API.RuntimeInitParameters.html",
    "title": "Class RuntimeInitParameters | OpenMod Docs",
    "keywords": "Class RuntimeInitParameters Inheritance System.Object RuntimeInitParameters Namespace : OpenMod.API Assembly : OpenMod.API.dll Syntax public class RuntimeInitParameters : object Properties | Improve this Doc View Source CommandlineArgs Declaration public string[] CommandlineArgs { get; set; } Property Value Type Description System.String [] | Improve this Doc View Source PackageManager Declaration public object? PackageManager { get; set; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; set; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.RuntimeStatus.html": {
    "href": "api/OpenMod.API.RuntimeStatus.html",
    "title": "Enum RuntimeStatus | OpenMod Docs",
    "keywords": "Enum RuntimeStatus Namespace : OpenMod.API Assembly : OpenMod.API.dll Syntax public enum RuntimeStatus : int Fields Name Description Crashed Initialized Initializing Unloaded"
  },
  "api/OpenMod.API.Users.BanData.html": {
    "href": "api/OpenMod.API.Users.BanData.html",
    "title": "Class BanData | OpenMod Docs",
    "keywords": "Class BanData Inheritance System.Object BanData Namespace : OpenMod.API.Users Assembly : OpenMod.API.dll Syntax public class BanData : object Constructors | Improve this Doc View Source BanData() Declaration public BanData() | Improve this Doc View Source BanData(String, IPermissionActor, Nullable<DateTime>) Declaration public BanData(string reason, IPermissionActor instigator = null, DateTime? expireDate = null) Parameters Type Name Description System.String reason IPermissionActor instigator System.Nullable < DateTime > expireDate Properties | Improve this Doc View Source ExpireDate Declaration public DateTime? ExpireDate { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source InstigatorId Declaration public string? InstigatorId { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source InstigatorType Declaration public string? InstigatorType { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Reason Declaration public string? Reason { get; set; } Property Value Type Description System.Nullable < System.String > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Users.html": {
    "href": "api/OpenMod.API.Users.html",
    "title": "Namespace OpenMod.API.Users | OpenMod Docs",
    "keywords": "Namespace OpenMod.API.Users Classes BanData UserData Serialized user data. Interfaces IUser Represents an OpenMod user. IUserDataSeeder Service for seeding user data. IUserDataStore The service for storing user data. IUserManager Service for managing users. IUserProvider Provides users. IUserSession Represents a user session. Enums UserSearchMode Defines user search modes."
  },
  "api/OpenMod.API.Users.IUser.html": {
    "href": "api/OpenMod.API.Users.IUser.html",
    "title": "Interface IUser | OpenMod Docs",
    "keywords": "Interface IUser Represents an OpenMod user. Inherited Members ICommandActor.PrintMessageAsync(String) ICommandActor.PrintMessageAsync(String, Color) IPermissionActor.Id IPermissionActor.Type IPermissionActor.DisplayName IPermissionActor.FullActorName Namespace : OpenMod.API.Users Assembly : OpenMod.API.dll Syntax public interface IUser : ICommandActor, IPermissionActor Properties | Improve this Doc View Source Provider Gets the user provider for the user type. Declaration IUserProvider Provider { get; } Property Value Type Description IUserProvider | Improve this Doc View Source Session Gets the current user session. Returns null if the user is not online. Declaration IUserSession Session { get; } Property Value Type Description IUserSession Methods | Improve this Doc View Source GetPersistentDataAsync<T>(String) Gets persistent data. T must be serializable. Declaration Task<T> GetPersistentDataAsync<T>(string key) Parameters Type Name Description System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source SavePersistentDataAsync<T>(String, T) Saves persistent data. T must be serializable. Declaration Task SavePersistentDataAsync<T>(string key, T data) Parameters Type Name Description System.String key T data Returns Type Description Task Type Parameters Name Description T Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Users.IUserDataSeeder.html": {
    "href": "api/OpenMod.API.Users.IUserDataSeeder.html",
    "title": "Interface IUserDataSeeder | OpenMod Docs",
    "keywords": "Interface IUserDataSeeder Service for seeding user data. Namespace : OpenMod.API.Users Assembly : OpenMod.API.dll Syntax public interface IUserDataSeeder Methods | Improve this Doc View Source SeedUserDataAsync(String, String, Nullable<String>, Nullable<Dictionary<String, Nullable<Object>>>) Seeds initial user data. Declaration Task SeedUserDataAsync(string actorId, string actorType, string? displayName, Dictionary<string, object?>? data = null) Parameters Type Name Description System.String actorId System.String actorType System.Nullable < System.String > displayName System.Nullable < Dictionary < System.String , System.Nullable < System.Object >>> data Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Users.IUserDataStore.html": {
    "href": "api/OpenMod.API.Users.IUserDataStore.html",
    "title": "Interface IUserDataStore | OpenMod Docs",
    "keywords": "Interface IUserDataStore The service for storing user data. Namespace : OpenMod.API.Users Assembly : OpenMod.API.dll Syntax public interface IUserDataStore Methods | Improve this Doc View Source GetUserDataAsync(String, String) Gets user data. Declaration Task<UserData> GetUserDataAsync(string userId, string userType) Parameters Type Name Description System.String userId The user id. System.String userType The user actor type. Returns Type Description Task < UserData > The user data. | Improve this Doc View Source GetUserDataAsync<T>(String, String, String) Gets user data for the given key. Declaration Task<T> GetUserDataAsync<T>(string userId, string userType, string key) Parameters Type Name Description System.String userId The user id. System.String userType The user actor type. System.String key The data key. Returns Type Description Task <T> The deserialized data. Type Parameters Name Description T The user data type. | Improve this Doc View Source GetUsersDataAsync(String) Gets all user data for the given user type. Declaration Task<IReadOnlyCollection<UserData>> GetUsersDataAsync(string type) Parameters Type Name Description System.String type The user type. Returns Type Description Task < IReadOnlyCollection < UserData >> All user data for the given user type. | Improve this Doc View Source SetUserDataAsync(UserData) Sets user data. Will replace data if it already exists. Declaration Task SetUserDataAsync(UserData userData) Parameters Type Name Description UserData userData The user data to set. Returns Type Description Task | Improve this Doc View Source SetUserDataAsync<T>(String, String, String, T) Sets user data for the given key. Declaration Task SetUserDataAsync<T>(string userId, string userType, string key, T value) Parameters Type Name Description System.String userId The user id. System.String userType The user actor type. System.String key The data key. T value The value Returns Type Description Task Type Parameters Name Description T The user data type. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Users.IUserManager.html": {
    "href": "api/OpenMod.API.Users.IUserManager.html",
    "title": "Interface IUserManager | OpenMod Docs",
    "keywords": "Interface IUserManager Service for managing users. Namespace : OpenMod.API.Users Assembly : OpenMod.API.dll Syntax public interface IUserManager Properties | Improve this Doc View Source UserProviders Gets the user providers. Declaration IReadOnlyCollection<IUserProvider> UserProviders { get; } Property Value Type Description IReadOnlyCollection < IUserProvider > Methods | Improve this Doc View Source BanAsync(IUser, IUser, Nullable<String>, Nullable<DateTime>) Ban a user. Declaration Task<bool> BanAsync(IUser user, IUser instigator = null, string? reason = null, DateTime? endTime = null) Parameters Type Name Description IUser user The user to ban. IUser instigator The user that ban. System.Nullable < System.String > reason The reason of the user ban. System.Nullable < DateTime > endTime The time when the ban will expire. Returns Type Description Task < System.Boolean > | Improve this Doc View Source BanAsync(IUser, Nullable<String>, Nullable<DateTime>) Ban a user. Declaration Task<bool> BanAsync(IUser user, string? reason = null, DateTime? endTime = null) Parameters Type Name Description IUser user The user to ban. System.Nullable < System.String > reason The reason of the user ban. System.Nullable < DateTime > endTime The time when the ban will expire. Returns Type Description Task < System.Boolean > | Improve this Doc View Source BroadcastAsync(String, Nullable<Color>) Broadcasts a message to all users. Declaration Task BroadcastAsync(string message, Color? color = null) Parameters Type Name Description System.String message The message to broadcast. System.Nullable < Color > color The message color. May not be supported on all platforms. Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, String, Nullable<Color>) Broadcasts a message to all users of the given type. Declaration Task BroadcastAsync(string userType, string message, Color? color = null) Parameters Type Name Description System.String userType The user type to broadcast to. System.String message The message to broadcast. System.Nullable < Color > color The message color. May not be supported on all platforms. Returns Type Description Task | Improve this Doc View Source FindUserAsync(String, String, UserSearchMode) Searches for an user. Declaration Task<IUser> FindUserAsync(string userType, string searchString, UserSearchMode searchMode) Parameters Type Name Description System.String userType The user type. System.String searchString The user ID or name depending on the search mode. UserSearchMode searchMode The search mode. Returns Type Description Task < IUser > The user if found; otherwise, null. | Improve this Doc View Source GetUsersAsync(String) Gets all users of the given type. Declaration Task<IReadOnlyCollection<IUser>> GetUsersAsync(string userType) Parameters Type Name Description System.String userType The type of the users to look for. Returns Type Description Task < IReadOnlyCollection < IUser >> All users of the given type. | Improve this Doc View Source KickAsync(IUser, Nullable<String>) KIck a user. Declaration Task<bool> KickAsync(IUser user, string? reason = null) Parameters Type Name Description IUser user The user to kick. System.Nullable < System.String > reason The reason of the user kick. Returns Type Description Task < System.Boolean > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Users.IUserProvider.html": {
    "href": "api/OpenMod.API.Users.IUserProvider.html",
    "title": "Interface IUserProvider | OpenMod Docs",
    "keywords": "Interface IUserProvider Provides users. Namespace : OpenMod.API.Users Assembly : OpenMod.API.dll Syntax public interface IUserProvider Methods | Improve this Doc View Source BanAsync(IUser, IUser, Nullable<String>, Nullable<DateTime>) Ban a user. Declaration Task<bool> BanAsync(IUser user, IUser instigator = null, string? reason = null, DateTime? endTime = null) Parameters Type Name Description IUser user The user to ban. IUser instigator The user that ban. System.Nullable < System.String > reason The reason of the user ban. System.Nullable < DateTime > endTime The time when the ban will expire. Returns Type Description Task < System.Boolean > | Improve this Doc View Source BanAsync(IUser, Nullable<String>, Nullable<DateTime>) Ban a user. Declaration Task<bool> BanAsync(IUser user, string? reason = null, DateTime? endTime = null) Parameters Type Name Description IUser user The user to ban. System.Nullable < System.String > reason The reason of the user ban. System.Nullable < DateTime > endTime The time when the ban will expire. Returns Type Description Task < System.Boolean > | Improve this Doc View Source BroadcastAsync(String, Nullable<Color>) Broadcasts a message to all users. Declaration Task BroadcastAsync(string message, Color? color = null) Parameters Type Name Description System.String message The message to broadcast. System.Nullable < Color > color The message color. May not be supported on all platforms. Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, String, Nullable<Color>) Broadcasts a message to all users of the given type. Declaration Task BroadcastAsync(string userType, string message, Color? color = null) Parameters Type Name Description System.String userType The user type to broadcast to. System.String message The message to broadcast. System.Nullable < Color > color The message color. May not be supported on all platforms. Returns Type Description Task | Improve this Doc View Source FindUserAsync(String, String, UserSearchMode) Searches for an user. Declaration Task<IUser> FindUserAsync(string userType, string searchString, UserSearchMode searchMode) Parameters Type Name Description System.String userType The user type. System.String searchString The user ID or name depending on the search mode. UserSearchMode searchMode The search mode. Returns Type Description Task < IUser > The user if found; otherwise, null. | Improve this Doc View Source GetUsersAsync(String) Gets all users of the given type. Declaration Task<IReadOnlyCollection<IUser>> GetUsersAsync(string userType) Parameters Type Name Description System.String userType The type of the users to look for. Returns Type Description Task < IReadOnlyCollection < IUser >> All users of the given type. | Improve this Doc View Source KickAsync(IUser, Nullable<String>) KIck a user. Declaration Task<bool> KickAsync(IUser user, string? reason = null) Parameters Type Name Description IUser user The user to kick. System.Nullable < System.String > reason The reason of the user kick. Returns Type Description Task < System.Boolean > | Improve this Doc View Source SupportsUserType(String) Checks if the user provider supports the given user type. Declaration bool SupportsUserType(string userType) Parameters Type Name Description System.String userType The user type to check for. Returns Type Description System.Boolean True if the user type is supported; otherwise, false . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Users.IUserSession.html": {
    "href": "api/OpenMod.API.Users.IUserSession.html",
    "title": "Interface IUserSession | OpenMod Docs",
    "keywords": "Interface IUserSession Represents a user session. Namespace : OpenMod.API.Users Assembly : OpenMod.API.dll Syntax public interface IUserSession Properties | Improve this Doc View Source InstanceData Gets the user data that is stored for process lifetime and will survive reloads. Declaration Dictionary<string, object?> InstanceData { get; } Property Value Type Description Dictionary < System.String , System.Nullable < System.Object >> | Improve this Doc View Source SessionData Gets the user data for this session. Declaration Dictionary<string, object?> SessionData { get; } Property Value Type Description Dictionary < System.String , System.Nullable < System.Object >> | Improve this Doc View Source SessionEndTime Gets the time the users session has ended. Return null if the session has not started or has not ended yet. Declaration DateTime? SessionEndTime { get; } Property Value Type Description System.Nullable < DateTime > Examples The time a user has left a server. | Improve this Doc View Source SessionStartTime Gets the time the session has begun. Returns null if the session has not started. Declaration DateTime? SessionStartTime { get; } Property Value Type Description System.Nullable < DateTime > Examples The time a user has joined a server. Methods | Improve this Doc View Source DisconnectAsync(String) Disconnects the user. Declaration Task DisconnectAsync(string reason = \"\") Parameters Type Name Description System.String reason The optional disconnect reason to be showed to the user. Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Users.UserData.html": {
    "href": "api/OpenMod.API.Users.UserData.html",
    "title": "Class UserData | OpenMod Docs",
    "keywords": "Class UserData Serialized user data. Inheritance System.Object UserData Namespace : OpenMod.API.Users Assembly : OpenMod.API.dll Syntax public sealed class UserData : object Constructors | Improve this Doc View Source UserData() Declaration public UserData() | Improve this Doc View Source UserData(String, String) Declaration public UserData(string id, string type) Parameters Type Name Description System.String id System.String type Properties | Improve this Doc View Source BanInfo Gets the data related to user ban. Declaration public BanData BanInfo { get; set; } Property Value Type Description BanData | Improve this Doc View Source Data Gets the user data. Plugins should use the IUserDataStore service to interact with this data. Declaration public Dictionary<string, object?>? Data { get; set; } Property Value Type Description System.Nullable < Dictionary < System.String , System.Nullable < System.Object >>> | Improve this Doc View Source FirstSeen Gets or sets the first time the user has been seen. Declaration public DateTime? FirstSeen { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source Id Gets or sets the ID of the user. Declaration public string? Id { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source LastDisplayName Gets or sets the last known display name of the user. Declaration public string? LastDisplayName { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source LastSeen Gets or sets the last time the user has been seen. Declaration public DateTime? LastSeen { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source Permissions Gets or sets the permissions of the user. Declaration public HashSet<string>? Permissions { get; set; } Property Value Type Description System.Nullable < HashSet < System.String >> | Improve this Doc View Source Roles Gets or sets the roles of the user. Declaration public HashSet<string>? Roles { get; set; } Property Value Type Description System.Nullable < HashSet < System.String >> | Improve this Doc View Source Type Gets or sets the actor type of the user. Declaration public string? Type { get; set; } Property Value Type Description System.Nullable < System.String > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.API.Users.UserSearchMode.html": {
    "href": "api/OpenMod.API.Users.UserSearchMode.html",
    "title": "Enum UserSearchMode | OpenMod Docs",
    "keywords": "Enum UserSearchMode Defines user search modes. Namespace : OpenMod.API.Users Assembly : OpenMod.API.dll Syntax public enum UserSearchMode : int Fields Name Description FindById Find user by ID. FindByName Find user by name. FindByNameOrId Find user by name or ID. ID matches will be prioritized."
  },
  "api/OpenMod.Bootstrapper.html": {
    "href": "api/OpenMod.Bootstrapper.html",
    "title": "Namespace OpenMod.Bootstrapper | OpenMod Docs",
    "keywords": "Namespace OpenMod.Bootstrapper Classes OpenModDynamicBootstrapper This class is responsible for downloading OpenMod.Core, OpenMod.API, the host package and their dependencies. After download, it will boot OpenMod and then initialize the IRuntime implementation."
  },
  "api/OpenMod.Bootstrapper.OpenModDynamicBootstrapper.html": {
    "href": "api/OpenMod.Bootstrapper.OpenModDynamicBootstrapper.html",
    "title": "Class OpenModDynamicBootstrapper | OpenMod Docs",
    "keywords": "Class OpenModDynamicBootstrapper This class is responsible for downloading OpenMod.Core, OpenMod.API, the host package and their dependencies. After download, it will boot OpenMod and then initialize the IRuntime implementation. Inheritance System.Object OpenModDynamicBootstrapper Namespace : OpenMod.Bootstrapper Assembly : OpenMod.Bootstrapper.dll Syntax public class OpenModDynamicBootstrapper : object Methods | Improve this Doc View Source Bootstrap(NuGetPackageManager, String, String[], IEnumerable<String>, Boolean, Nullable<ILogger>) Bootstrap OpenMod. Declaration public object? Bootstrap(NuGetPackageManager packageManager, string openModFolder, string[] commandLineArgs, IEnumerable<string> packageIds, bool allowPrereleaseVersions = false, ILogger? logger = null) Parameters Type Name Description NuGetPackageManager packageManager The optional package manager. System.String openModFolder The OpenMod working directory. System.String [] commandLineArgs The command line arguments. IEnumerable < System.String > packageIds The IDs of the host package. System.Boolean allowPrereleaseVersions If true, will download pre-release versions. System.Nullable < ILogger > logger The optional logger. Returns Type Description System.Nullable < System.Object > The OpenMod runtime. | Improve this Doc View Source BootstrapAsync(NuGetPackageManager, String, String[], IEnumerable<String>, Boolean, Nullable<ILogger>) Bootstrap OpenMod. Declaration public Task<object?> BootstrapAsync(NuGetPackageManager packageManager, string openModFolder, string[] commandLineArgs, IEnumerable<string> packageIds, bool allowPrereleaseVersions = false, ILogger? logger = null) Parameters Type Name Description NuGetPackageManager packageManager The optional package manager. System.String openModFolder The OpenMod working directory. System.String [] commandLineArgs The command line arguments. IEnumerable < System.String > packageIds The IDs of the host package. System.Boolean allowPrereleaseVersions If true, will download pre-release versions. System.Nullable < ILogger > logger The optional logger. Returns Type Description Task < System.Nullable < System.Object >> The OpenMod runtime. | Improve this Doc View Source BootstrapAsync(NuGetPackageManager, String, String[], String, Boolean, Nullable<ILogger>) Bootstrap OpenMod. Declaration public Task<object?> BootstrapAsync(NuGetPackageManager packageManager, string openModFolder, string[] commandLineArgs, string packageId, bool allowPrereleaseVersions = false, ILogger? logger = null) Parameters Type Name Description NuGetPackageManager packageManager The optional package manager. System.String openModFolder The OpenMod working directory. System.String [] commandLineArgs The command line arguments. System.String packageId The ID of the host package. System.Boolean allowPrereleaseVersions If true, will download pre-release versions. System.Nullable < ILogger > logger The optional logger. Returns Type Description Task < System.Nullable < System.Object >> The OpenMod runtime. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Common.Helpers.AssemblyExtensions.html": {
    "href": "api/OpenMod.Common.Helpers.AssemblyExtensions.html",
    "title": "Class AssemblyExtensions | OpenMod Docs",
    "keywords": "Class AssemblyExtensions Extension methods for . Inheritance System.Object AssemblyExtensions Namespace : OpenMod.Common.Helpers Assembly : OpenMod.Common.dll Syntax public static class AssemblyExtensions : object Methods | Improve this Doc View Source GetLoadableTypes(Assembly) Safely returns the set of loadable types from an assembly. Declaration public static IEnumerable<Type> GetLoadableTypes(this Assembly assembly) Parameters Type Name Description Assembly assembly The from which to load types. Returns Type Description IEnumerable < Type > The set of types from the assembly , or the subset of types that could be loaded if there was any error. Remarks Avoid using this method, unless you don't care about missing types | Improve this Doc View Source GetMissingDependencies(ReflectionTypeLoadException) Gets the missing assembly names based on ReflectionTypeLoadException Declaration public static IEnumerable<AssemblyName> GetMissingDependencies(this ReflectionTypeLoadException reflectionTypeLoadException) Parameters Type Name Description ReflectionTypeLoadException reflectionTypeLoadException Returns Type Description IEnumerable < AssemblyName > | Improve this Doc View Source GetNameVersion(Assembly) Declaration public static string GetNameVersion(this Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description System.String | Improve this Doc View Source GetNameVersion(AssemblyName) Declaration public static string GetNameVersion(this AssemblyName assemblyName) Parameters Type Name Description AssemblyName assemblyName Returns Type Description System.String"
  },
  "api/OpenMod.Common.Helpers.AssemblyNameEqualityComparer.html": {
    "href": "api/OpenMod.Common.Helpers.AssemblyNameEqualityComparer.html",
    "title": "Class AssemblyNameEqualityComparer | OpenMod Docs",
    "keywords": "Class AssemblyNameEqualityComparer Comparer of that comparers the name Inheritance System.Object AssemblyNameEqualityComparer Namespace : OpenMod.Common.Helpers Assembly : OpenMod.Common.dll Syntax public sealed class AssemblyNameEqualityComparer : IEqualityComparer<AssemblyName> Properties | Improve this Doc View Source Instance Declaration public static AssemblyNameEqualityComparer Instance { get; } Property Value Type Description AssemblyNameEqualityComparer Methods | Improve this Doc View Source Equals(AssemblyName, AssemblyName) Declaration public bool Equals(AssemblyName x, AssemblyName y) Parameters Type Name Description AssemblyName x AssemblyName y Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode(AssemblyName) Declaration public int GetHashCode(AssemblyName obj) Parameters Type Name Description AssemblyName obj Returns Type Description System.Int32 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Common.Helpers.html": {
    "href": "api/OpenMod.Common.Helpers.html",
    "title": "Namespace OpenMod.Common.Helpers | OpenMod Docs",
    "keywords": "Namespace OpenMod.Common.Helpers Classes AssemblyExtensions Extension methods for . AssemblyNameEqualityComparer Comparer of that comparers the name ReflectionExtensions"
  },
  "api/OpenMod.Common.Helpers.ReflectionExtensions.html": {
    "href": "api/OpenMod.Common.Helpers.ReflectionExtensions.html",
    "title": "Class ReflectionExtensions | OpenMod Docs",
    "keywords": "Class ReflectionExtensions Inheritance System.Object ReflectionExtensions Namespace : OpenMod.Common.Helpers Assembly : OpenMod.Common.dll Syntax public static class ReflectionExtensions : object Methods | Improve this Doc View Source FindAllTypes(Assembly, Boolean) Declaration public static IEnumerable<Type> FindAllTypes(this Assembly assembly, bool includeAbstractAndInterfaces = false) Parameters Type Name Description Assembly assembly System.Boolean includeAbstractAndInterfaces Returns Type Description IEnumerable < Type > | Improve this Doc View Source FindTypes<T>(Assembly, Boolean) Declaration public static IEnumerable<Type> FindTypes<T>(this Assembly assembly, bool includeAbstractAndInterfaces = false) Parameters Type Name Description Assembly assembly System.Boolean includeAbstractAndInterfaces Returns Type Description IEnumerable < Type > Type Parameters Name Description T | Improve this Doc View Source FindTypes<T>(IEnumerable<Type>, Boolean) Declaration public static IEnumerable<Type> FindTypes<T>(this IEnumerable<Type> types, bool includeAbstractAndInterfaces = false) Parameters Type Name Description IEnumerable < Type > types System.Boolean includeAbstractAndInterfaces Returns Type Description IEnumerable < Type > Type Parameters Name Description T | Improve this Doc View Source GetCallingMethod(Assembly[]) Declaration public static MethodBase? GetCallingMethod(params Assembly[] skipAssemblies) Parameters Type Name Description Assembly [] skipAssemblies Returns Type Description System.Nullable < MethodBase > | Improve this Doc View Source GetCallingMethod(Type[], MethodBase[], Boolean) Declaration public static MethodBase? GetCallingMethod(Type[] skipTypes = null, MethodBase[] skipMethods = null, bool applyAsyncMethodPatch = true) Parameters Type Name Description Type [] skipTypes MethodBase [] skipMethods System.Boolean applyAsyncMethodPatch Returns Type Description System.Nullable < MethodBase > | Improve this Doc View Source GetDebugName(MethodBase) Declaration public static string GetDebugName(this MethodBase mb) Parameters Type Name Description MethodBase mb Returns Type Description System.String | Improve this Doc View Source GetParametersTypes(ParameterInfo[]) Declaration public static IEnumerable<Type> GetParametersTypes(this ParameterInfo[] parameterInfos) Parameters Type Name Description ParameterInfo [] parameterInfos Returns Type Description IEnumerable < Type > | Improve this Doc View Source GetTypeHierarchy(Type) Declaration public static IEnumerable<Type> GetTypeHierarchy(this Type type) Parameters Type Name Description Type type Returns Type Description IEnumerable < Type > | Improve this Doc View Source GetVersionIndependentName(String) Declaration public static string GetVersionIndependentName(string assemblyName) Parameters Type Name Description System.String assemblyName Returns Type Description System.String | Improve this Doc View Source GetVersionIndependentName(String, out String) Declaration public static string GetVersionIndependentName(string assemblyName, out string extractedVersion) Parameters Type Name Description System.String assemblyName System.String extractedVersion Returns Type Description System.String | Improve this Doc View Source HasConversionOperator(Type, Type) Declaration public static bool HasConversionOperator(this Type from, Type to) Parameters Type Name Description Type from Type to Returns Type Description System.Boolean | Improve this Doc View Source InvokeWithTaskSupportAsync(MethodBase, Nullable<Object>, Nullable<Object>[]) Declaration public static Task InvokeWithTaskSupportAsync(this MethodBase method, object? instance, object? [] params) Parameters Type Name Description MethodBase method System.Nullable < System.Object > instance System.Nullable < System.Object >[] params Returns Type Description Task | Improve this Doc View Source ToObject<T>(Dictionary<Object, Object>) Declaration public static T ToObject<T>(this Dictionary<object, object> dict) Parameters Type Name Description Dictionary < System.Object , System.Object > dict Returns Type Description T Type Parameters Name Description T"
  },
  "api/OpenMod.Common.Hotloading.Hotloader.html": {
    "href": "api/OpenMod.Common.Hotloading.Hotloader.html",
    "title": "Class Hotloader | OpenMod Docs",
    "keywords": "Class Hotloader Adds support for hotloading assemblies. Use LoadAssembly(Byte[]) instead of . Inheritance System.Object Hotloader Namespace : OpenMod.Common.Hotloading Assembly : OpenMod.Common.dll Syntax public static class Hotloader : object Properties | Improve this Doc View Source Enabled Defines if hotloading is enabled. Declaration public static bool Enabled { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source ContainsAssembly(AssemblyName) Checks if hotloader contains assembly. Declaration public static bool ContainsAssembly(AssemblyName name) Parameters Type Name Description AssemblyName name The assembly name to check. Returns Type Description System.Boolean | Improve this Doc View Source FindAssembly(AssemblyName) Resolves a hotloaded assembly. Hotloaded assemblies have an auto generated assembly name. Declaration public static Assembly? FindAssembly(AssemblyName name) Parameters Type Name Description AssemblyName name The assembly name to resolve. Returns Type Description System.Nullable < Assembly > The hotloaded assembly if found; otherwise, null . | Improve this Doc View Source GetAssembly(String) Resolves a hotloaded assembly. Hotloaded assemblies have an auto generated assembly name. Declaration public static Assembly? GetAssembly(string fullname) Parameters Type Name Description System.String fullname The assembly name to resolve. Returns Type Description System.Nullable < Assembly > The hotloaded assembly if found; otherwise, null . | Improve this Doc View Source GetHotloadedAssemblies() Gets all hotloaded assemblies. Declaration public static IReadOnlyCollection<Assembly> GetHotloadedAssemblies() Returns Type Description IReadOnlyCollection < Assembly > The hotloaded assemblies. | Improve this Doc View Source GetRealAssemblyName(Assembly) Gets the real assembly name of an hotloaded assembly. Hotloaded assemblies have an auto generated assembly name. Declaration public static AssemblyName GetRealAssemblyName(Assembly assembly) Parameters Type Name Description Assembly assembly The assembly to get the real name of. Returns Type Description AssemblyName The real assembly name of the hotloaded assembly. If the given assembly was not hotloaded, it will return the assembly's name . | Improve this Doc View Source LoadAssembly(Byte[]) Hotloads an assembly. Redirects to if Enabled is set to false. Declaration public static Assembly LoadAssembly(byte[] assemblyData) Parameters Type Name Description System.Byte [] assemblyData The assembly to hotload. Returns Type Description Assembly The loaded assembly. | Improve this Doc View Source LoadAssembly(Byte[], Byte[]) Hotloads an assembly. Redirects to if Enabled is set to false. Declaration public static Assembly LoadAssembly(byte[] assemblyData, byte[] assemblySymbols) Parameters Type Name Description System.Byte [] assemblyData The assembly to hotload. System.Byte [] assemblySymbols A byte array that contains the raw bytes representing the symbols for the assembly. Returns Type Description Assembly The loaded assembly. | Improve this Doc View Source Remove(Assembly) Removes an assembly from the hotloader cache. Declaration public static void Remove(Assembly assembly) Parameters Type Name Description Assembly assembly The assembly to remove."
  },
  "api/OpenMod.Common.Hotloading.html": {
    "href": "api/OpenMod.Common.Hotloading.html",
    "title": "Namespace OpenMod.Common.Hotloading | OpenMod Docs",
    "keywords": "Namespace OpenMod.Common.Hotloading Classes Hotloader Adds support for hotloading assemblies. Use LoadAssembly(Byte[]) instead of ."
  },
  "api/OpenMod.Core.Commands.AsyncLocalCurrentCommandContextAccessor.html": {
    "href": "api/OpenMod.Core.Commands.AsyncLocalCurrentCommandContextAccessor.html",
    "title": "Class AsyncLocalCurrentCommandContextAccessor | OpenMod Docs",
    "keywords": "Class AsyncLocalCurrentCommandContextAccessor Inheritance System.Object AsyncLocalCurrentCommandContextAccessor Implements ICurrentCommandContextAccessor Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class AsyncLocalCurrentCommandContextAccessor : object, ICurrentCommandContextAccessor Properties | Improve this Doc View Source Context Declaration public ICommandContext Context { get; set; } Property Value Type Description ICommandContext Implements ICurrentCommandContextAccessor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.Command.html": {
    "href": "api/OpenMod.Core.Commands.Command.html",
    "title": "Class Command | OpenMod Docs",
    "keywords": "Class Command Inheritance System.Object CommandBase Command CommandHelp CommandOpenMod CommandOpenModInstall CommandOpenModPlugins CommandOpenModPurge CommandOpenModReload CommandOpenModRemove CommandPermission CommandPermissionAction CommandRestart CommandRole CommandShutdown CommandLookup Implements ICommand Inherited Members CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public abstract class Command : CommandBase, ICommand Constructors | Improve this Doc View Source Command(IServiceProvider) Declaration protected Command(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source ExecuteAsync() Declaration public override sealed Task ExecuteAsync() Returns Type Description Task Overrides CommandBase.ExecuteAsync() | Improve this Doc View Source OnExecuteAsync() Declaration protected abstract Task OnExecuteAsync() Returns Type Description Task Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandActorAttribute.html": {
    "href": "api/OpenMod.Core.Commands.CommandActorAttribute.html",
    "title": "Class CommandActorAttribute | OpenMod Docs",
    "keywords": "Class CommandActorAttribute Inheritance System.Object CommandActorAttribute Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandActorAttribute : Attribute Constructors | Improve this Doc View Source CommandActorAttribute(Type) Declaration public CommandActorAttribute(Type actorType) Parameters Type Name Description Type actorType Properties | Improve this Doc View Source ActorType Declaration public Type ActorType { get; } Property Value Type Description Type Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandAliasAttribute.html": {
    "href": "api/OpenMod.Core.Commands.CommandAliasAttribute.html",
    "title": "Class CommandAliasAttribute | OpenMod Docs",
    "keywords": "Class CommandAliasAttribute Inheritance System.Object CommandAliasAttribute Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandAliasAttribute : Attribute Constructors | Improve this Doc View Source CommandAliasAttribute(String) Declaration public CommandAliasAttribute(string alias) Parameters Type Name Description System.String alias Properties | Improve this Doc View Source Alias Declaration public string Alias { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandAttribute.html": {
    "href": "api/OpenMod.Core.Commands.CommandAttribute.html",
    "title": "Class CommandAttribute | OpenMod Docs",
    "keywords": "Class CommandAttribute Inheritance System.Object PriorityAttribute CommandAttribute Inherited Members PriorityAttribute.Priority Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandAttribute : PriorityAttribute Constructors | Improve this Doc View Source CommandAttribute(String) Declaration public CommandAttribute(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandAutoCompleteHandler.html": {
    "href": "api/OpenMod.Core.Commands.CommandAutoCompleteHandler.html",
    "title": "Class CommandAutoCompleteHandler | OpenMod Docs",
    "keywords": "Class CommandAutoCompleteHandler Inheritance System.Object CommandAutoCompleteHandler Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandAutoCompleteHandler : IAutoCompleteHandler Constructors | Improve this Doc View Source CommandAutoCompleteHandler(IConsoleActorAccessor, ICommandStore, ICommandContextBuilder) Declaration public CommandAutoCompleteHandler(IConsoleActorAccessor consoleActorAccessor, ICommandStore commandStore, ICommandContextBuilder commandContextBuilder) Parameters Type Name Description IConsoleActorAccessor consoleActorAccessor ICommandStore commandStore ICommandContextBuilder commandContextBuilder Properties | Improve this Doc View Source Separators Declaration public char[] Separators { get; set; } Property Value Type Description System.Char [] Methods | Improve this Doc View Source GetSuggestions(String, Int32) Declaration public string[] GetSuggestions(string text, int index) Parameters Type Name Description System.String text System.Int32 index Returns Type Description System.String [] Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandBase.html": {
    "href": "api/OpenMod.Core.Commands.CommandBase.html",
    "title": "Class CommandBase | OpenMod Docs",
    "keywords": "Class CommandBase Inheritance System.Object CommandBase Command UnityEngineCommand Implements ICommand Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public abstract class CommandBase : object, ICommand Constructors | Improve this Doc View Source CommandBase(IServiceProvider) Declaration protected CommandBase(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Properties | Improve this Doc View Source Context Declaration public ICommandContext Context { get; } Property Value Type Description ICommandContext Methods | Improve this Doc View Source CheckPermissionAsync(String) Declaration public virtual Task<PermissionGrantResult> CheckPermissionAsync(string permission) Parameters Type Name Description System.String permission Returns Type Description Task < PermissionGrantResult > | Improve this Doc View Source ExecuteAsync() Declaration public abstract Task ExecuteAsync() Returns Type Description Task | Improve this Doc View Source PrintAsync(String) Declaration public virtual Task PrintAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task | Improve this Doc View Source PrintAsync(String, Color) Declaration public virtual Task PrintAsync(string message, Color color) Parameters Type Name Description System.String message Color color Returns Type Description Task Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandContext.html": {
    "href": "api/OpenMod.Core.Commands.CommandContext.html",
    "title": "Class CommandContext | OpenMod Docs",
    "keywords": "Class CommandContext Inheritance System.Object CommandContext Implements ICommandContext IAsyncDisposable Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandContext : object, ICommandContext, IAsyncDisposable Constructors | Improve this Doc View Source CommandContext(ICommandRegistration, ILifetimeScope, ICommandContext) Declaration public CommandContext(ICommandRegistration command, ILifetimeScope scope, ICommandContext parent) Parameters Type Name Description ICommandRegistration command ILifetimeScope scope ICommandContext parent | Improve this Doc View Source CommandContext(ICommandRegistration, ICommandActor, String, String, ICollection<String>, ILifetimeScope) Declaration public CommandContext(ICommandRegistration command, ICommandActor actor, string alias, string prefix, ICollection<string> args, ILifetimeScope scope) Parameters Type Name Description ICommandRegistration command ICommandActor actor System.String alias System.String prefix ICollection < System.String > args ILifetimeScope scope Properties | Improve this Doc View Source Actor Declaration public ICommandActor Actor { get; set; } Property Value Type Description ICommandActor | Improve this Doc View Source ChildContext Declaration public ICommandContext ChildContext { get; set; } Property Value Type Description ICommandContext | Improve this Doc View Source CommandAlias Declaration public string CommandAlias { get; } Property Value Type Description System.String | Improve this Doc View Source CommandPrefix Declaration public string CommandPrefix { get; } Property Value Type Description System.String | Improve this Doc View Source CommandRegistration Declaration public ICommandRegistration CommandRegistration { get; set; } Property Value Type Description ICommandRegistration | Improve this Doc View Source Data Declaration public Dictionary<string, object> Data { get; } Property Value Type Description Dictionary < System.String , System.Object > | Improve this Doc View Source Exception Declaration public Exception? Exception { get; set; } Property Value Type Description System.Nullable < Exception > | Improve this Doc View Source LifetimeScope Declaration public ILifetimeScope LifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source Parameters Declaration public ICommandParameters Parameters { get; } Property Value Type Description ICommandParameters | Improve this Doc View Source ParentContext Declaration public ICommandContext ParentContext { get; set; } Property Value Type Description ICommandContext | Improve this Doc View Source RootContext Declaration public ICommandContext RootContext { get; set; } Property Value Type Description ICommandContext | Improve this Doc View Source ServiceProvider Declaration public IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask Implements ICommandContext IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandContextBuilder.html": {
    "href": "api/OpenMod.Core.Commands.CommandContextBuilder.html",
    "title": "Class CommandContextBuilder | OpenMod Docs",
    "keywords": "Class CommandContextBuilder Inheritance System.Object CommandContextBuilder Implements ICommandContextBuilder Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandContextBuilder : object, ICommandContextBuilder Constructors | Improve this Doc View Source CommandContextBuilder(IOpenModStringLocalizer, ILifetimeScope) Declaration public CommandContextBuilder(IOpenModStringLocalizer stringLocalizer, ILifetimeScope lifetimeScope) Parameters Type Name Description IOpenModStringLocalizer stringLocalizer ILifetimeScope lifetimeScope Methods | Improve this Doc View Source BuildContextTree(CommandContext, IReadOnlyCollection<ICommandRegistration>) Declaration public virtual CommandContext BuildContextTree(CommandContext currentContext, IReadOnlyCollection<ICommandRegistration> commandRegistrations) Parameters Type Name Description CommandContext currentContext IReadOnlyCollection < ICommandRegistration > commandRegistrations Returns Type Description CommandContext | Improve this Doc View Source CreateContext(ICommandActor, String[], String, IReadOnlyCollection<ICommandRegistration>) Declaration public ICommandContext CreateContext(ICommandActor actor, string[] args, string prefix, IReadOnlyCollection<ICommandRegistration> commandRegistrations) Parameters Type Name Description ICommandActor actor System.String [] args System.String prefix IReadOnlyCollection < ICommandRegistration > commandRegistrations Returns Type Description ICommandContext Implements ICommandContextBuilder Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandContextExtensions.html": {
    "href": "api/OpenMod.Core.Commands.CommandContextExtensions.html",
    "title": "Class CommandContextExtensions | OpenMod Docs",
    "keywords": "Class CommandContextExtensions Inheritance System.Object CommandContextExtensions Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public static class CommandContextExtensions : object Methods | Improve this Doc View Source GetCommandLine(ICommandContext, Boolean) Declaration public static string GetCommandLine(this ICommandContext context, bool includeArguments = true) Parameters Type Name Description ICommandContext context System.Boolean includeArguments Returns Type Description System.String"
  },
  "api/OpenMod.Core.Commands.CommandDataStore.html": {
    "href": "api/OpenMod.Core.Commands.CommandDataStore.html",
    "title": "Class CommandDataStore | OpenMod Docs",
    "keywords": "Class CommandDataStore Inheritance System.Object CommandDataStore Implements ICommandDataStore IAsyncDisposable Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandDataStore : object, ICommandDataStore, IAsyncDisposable Constructors | Improve this Doc View Source CommandDataStore(IOpenModDataStoreAccessor, IRuntime, Lazy<ICommandStore>, ILogger<CommandDataStore>) Declaration public CommandDataStore(IOpenModDataStoreAccessor dataStoreAccessor, IRuntime runtime, Lazy<ICommandStore> commandStore, ILogger<CommandDataStore> logger) Parameters Type Name Description IOpenModDataStoreAccessor dataStoreAccessor IRuntime runtime Lazy < ICommandStore > commandStore ILogger < CommandDataStore > logger Fields | Improve this Doc View Source CommandsKey Declaration public const string CommandsKey = null Field Value Type Description System.String Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source GetCommandDataAsync<T>(String, String) Declaration public Task<T> GetCommandDataAsync<T>(string commandId, string key) Parameters Type Name Description System.String commandId System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source GetRegisteredCommandAsync(String) Declaration public Task<RegisteredCommandData> GetRegisteredCommandAsync(string commandId) Parameters Type Name Description System.String commandId Returns Type Description Task < RegisteredCommandData > | Improve this Doc View Source GetRegisteredCommandsAsync() Declaration public Task<RegisteredCommandsData> GetRegisteredCommandsAsync() Returns Type Description Task < RegisteredCommandsData > | Improve this Doc View Source SetCommandDataAsync(RegisteredCommandData) Declaration public Task SetCommandDataAsync(RegisteredCommandData commandData) Parameters Type Name Description RegisteredCommandData commandData Returns Type Description Task | Improve this Doc View Source SetCommandDataAsync<T>(String, String, T) Declaration public Task SetCommandDataAsync<T>(string commandId, string key, T value) Parameters Type Name Description System.String commandId System.String key T value Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source SetRegisteredCommandsAsync(RegisteredCommandsData) Declaration public Task SetRegisteredCommandsAsync(RegisteredCommandsData data) Parameters Type Name Description RegisteredCommandsData data Returns Type Description Task Implements ICommandDataStore IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandDescriptionAttribute.html": {
    "href": "api/OpenMod.Core.Commands.CommandDescriptionAttribute.html",
    "title": "Class CommandDescriptionAttribute | OpenMod Docs",
    "keywords": "Class CommandDescriptionAttribute Inheritance System.Object CommandDescriptionAttribute Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandDescriptionAttribute : Attribute Constructors | Improve this Doc View Source CommandDescriptionAttribute(String) Declaration public CommandDescriptionAttribute(string description) Parameters Type Name Description System.String description Properties | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandExecutor.html": {
    "href": "api/OpenMod.Core.Commands.CommandExecutor.html",
    "title": "Class CommandExecutor | OpenMod Docs",
    "keywords": "Class CommandExecutor Inheritance System.Object CommandExecutor Implements ICommandExecutor Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandExecutor : object, ICommandExecutor Constructors | Improve this Doc View Source CommandExecutor(IRuntime, ILifetimeScope, ICommandStore, ICommandPermissionBuilder, IEventBus, ILogger<CommandExecutor>) Declaration public CommandExecutor(IRuntime runtime, ILifetimeScope lifetimeScope, ICommandStore commandStore, ICommandPermissionBuilder commandPermissionBuilder, IEventBus eventBus, ILogger<CommandExecutor> logger) Parameters Type Name Description IRuntime runtime ILifetimeScope lifetimeScope ICommandStore commandStore ICommandPermissionBuilder commandPermissionBuilder IEventBus eventBus ILogger < CommandExecutor > logger Methods | Improve this Doc View Source ExecuteAsync(ICommandActor, String[], String) Declaration public Task<ICommandContext> ExecuteAsync(ICommandActor actor, string[] args, string prefix) Parameters Type Name Description ICommandActor actor System.String [] args System.String prefix Returns Type Description Task < ICommandContext > Implements ICommandExecutor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandIndexOutOfRangeException.html": {
    "href": "api/OpenMod.Core.Commands.CommandIndexOutOfRangeException.html",
    "title": "Class CommandIndexOutOfRangeException | OpenMod Docs",
    "keywords": "Class CommandIndexOutOfRangeException Inheritance System.Object UserFriendlyException CommandIndexOutOfRangeException Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandIndexOutOfRangeException : UserFriendlyException Constructors | Improve this Doc View Source CommandIndexOutOfRangeException(String, Int32, Int32) Declaration public CommandIndexOutOfRangeException(string message, int index, int length) Parameters Type Name Description System.String message System.Int32 index System.Int32 length Properties | Improve this Doc View Source Index Declaration public int Index { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandNotFoundException.html": {
    "href": "api/OpenMod.Core.Commands.CommandNotFoundException.html",
    "title": "Class CommandNotFoundException | OpenMod Docs",
    "keywords": "Class CommandNotFoundException Inheritance System.Object UserFriendlyException CommandNotFoundException Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandNotFoundException : UserFriendlyException Constructors | Improve this Doc View Source CommandNotFoundException(String) Declaration public CommandNotFoundException(string message) Parameters Type Name Description System.String message Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandParameterParseException.html": {
    "href": "api/OpenMod.Core.Commands.CommandParameterParseException.html",
    "title": "Class CommandParameterParseException | OpenMod Docs",
    "keywords": "Class CommandParameterParseException Inheritance System.Object UserFriendlyException CommandParameterParseException Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandParameterParseException : UserFriendlyException Constructors | Improve this Doc View Source CommandParameterParseException(String, String, Type) Declaration public CommandParameterParseException(string message, string argument, Type expectedType) Parameters Type Name Description System.String message System.String argument Type expectedType Properties | Improve this Doc View Source Argument Declaration public string Argument { get; } Property Value Type Description System.String | Improve this Doc View Source ExpectedType Declaration public Type ExpectedType { get; } Property Value Type Description Type Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandParameterResolver.html": {
    "href": "api/OpenMod.Core.Commands.CommandParameterResolver.html",
    "title": "Class CommandParameterResolver | OpenMod Docs",
    "keywords": "Class CommandParameterResolver Inheritance System.Object CommandParameterResolver Implements ICommandParameterResolver IAsyncDisposable Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandParameterResolver : object, ICommandParameterResolver, IAsyncDisposable Constructors | Improve this Doc View Source CommandParameterResolver(ILifetimeScope, IOptions<CommandParameterResolverOptions>) Declaration public CommandParameterResolver(ILifetimeScope lifetimeScope, IOptions<CommandParameterResolverOptions> options) Parameters Type Name Description ILifetimeScope lifetimeScope IOptions < CommandParameterResolverOptions > options Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source ResolveAsync(Type, String) Declaration public Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> Implements ICommandParameterResolver IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandParameterResolverOptions.html": {
    "href": "api/OpenMod.Core.Commands.CommandParameterResolverOptions.html",
    "title": "Class CommandParameterResolverOptions | OpenMod Docs",
    "keywords": "Class CommandParameterResolverOptions Inheritance System.Object CommandParameterResolverOptions Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandParameterResolverOptions : object Constructors | Improve this Doc View Source CommandParameterResolverOptions() Declaration public CommandParameterResolverOptions() Properties | Improve this Doc View Source CommandParameterResolverTypes Declaration public IReadOnlyCollection<Type> CommandParameterResolverTypes { get; } Property Value Type Description IReadOnlyCollection < Type > Methods | Improve this Doc View Source AddCommandParameterResolveProvider(Type) Declaration public void AddCommandParameterResolveProvider(Type type) Parameters Type Name Description Type type | Improve this Doc View Source RemoveCommandParameterResolveProvider(Type) Declaration public bool RemoveCommandParameterResolveProvider(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Extension Methods CommandParameterResolverOptionsExtensions.AddCommandParameterResolveProvider<TResolver>(CommandParameterResolverOptions) CommandParameterResolverOptionsExtensions.RemoveCommandParameterResolveProvider<TResolver>(CommandParameterResolverOptions) DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandParameterResolverOptionsExtensions.html": {
    "href": "api/OpenMod.Core.Commands.CommandParameterResolverOptionsExtensions.html",
    "title": "Class CommandParameterResolverOptionsExtensions | OpenMod Docs",
    "keywords": "Class CommandParameterResolverOptionsExtensions Inheritance System.Object CommandParameterResolverOptionsExtensions Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public static class CommandParameterResolverOptionsExtensions : object Methods | Improve this Doc View Source AddCommandParameterResolveProvider<TResolver>(CommandParameterResolverOptions) Declaration public static void AddCommandParameterResolveProvider<TResolver>(this CommandParameterResolverOptions options) where TResolver : ICommandParameterResolveProvider Parameters Type Name Description CommandParameterResolverOptions options Type Parameters Name Description TResolver | Improve this Doc View Source RemoveCommandParameterResolveProvider<TResolver>(CommandParameterResolverOptions) Declaration public static bool RemoveCommandParameterResolveProvider<TResolver>(this CommandParameterResolverOptions options) where TResolver : ICommandParameterResolveProvider Parameters Type Name Description CommandParameterResolverOptions options Returns Type Description System.Boolean Type Parameters Name Description TResolver"
  },
  "api/OpenMod.Core.Commands.CommandParameters.html": {
    "href": "api/OpenMod.Core.Commands.CommandParameters.html",
    "title": "Class CommandParameters | OpenMod Docs",
    "keywords": "Class CommandParameters Inheritance System.Object CommandParameters Implements ICommandParameters IReadOnlyCollection < System.String > Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandParameters : object, ICommandParameters, IReadOnlyCollection<string> Constructors | Improve this Doc View Source CommandParameters(ICommandContext, ICollection<String>) Declaration public CommandParameters(ICommandContext commandContext, ICollection<string> args) Parameters Type Name Description ICommandContext commandContext ICollection < System.String > args Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Item[Int32] Declaration public string this[int index] { get; } Parameters Type Name Description System.Int32 index Property Value Type Description System.String | Improve this Doc View Source Length Declaration public int Length { get; } Property Value Type Description System.Int32 | Improve this Doc View Source RawParameters The internal stored raw parameter list. Declaration protected ICollection<string> RawParameters { get; } Property Value Type Description ICollection < System.String > Methods | Improve this Doc View Source GetArgumentLine(Int32) Declaration public string GetArgumentLine(int startPosition) Parameters Type Name Description System.Int32 startPosition Returns Type Description System.String | Improve this Doc View Source GetArgumentLine(Int32, Int32) Declaration public string GetArgumentLine(int startPosition, int endPosition) Parameters Type Name Description System.Int32 startPosition System.Int32 endPosition Returns Type Description System.String | Improve this Doc View Source GetAsync(Int32, Type) Declaration public Task<object> GetAsync(int index, Type type) Parameters Type Name Description System.Int32 index Type type Returns Type Description Task < System.Object > | Improve this Doc View Source GetAsync(Int32, Type, Nullable<Object>) Declaration public Task<object?> GetAsync(int index, Type type, object? defaultValue) Parameters Type Name Description System.Int32 index Type type System.Nullable < System.Object > defaultValue Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source GetAsync<T>(Int32) Declaration public Task<T> GetAsync<T>(int index) Parameters Type Name Description System.Int32 index Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source GetAsync<T>(Int32, T) Declaration public Task<T> GetAsync<T>(int index, T defaultValue) Parameters Type Name Description System.Int32 index T defaultValue Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<string> GetEnumerator() Returns Type Description IEnumerator < System.String > | Improve this Doc View Source ToArray() Declaration public string[] ToArray() Returns Type Description System.String [] | Improve this Doc View Source ToList() Declaration public List<string> ToList() Returns Type Description List < System.String > | Improve this Doc View Source TryGet(Int32, Type, out Nullable<Object>) Declaration public bool TryGet(int index, Type type, out object? value) Parameters Type Name Description System.Int32 index Type type System.Nullable < System.Object > value Returns Type Description System.Boolean | Improve this Doc View Source TryGet<T>(Int32, out T) Declaration public bool TryGet<T>(int index, out T value) Parameters Type Name Description System.Int32 index T value Returns Type Description System.Boolean Type Parameters Name Description T Implements ICommandParameters IReadOnlyCollection<> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandParentAttribute.html": {
    "href": "api/OpenMod.Core.Commands.CommandParentAttribute.html",
    "title": "Class CommandParentAttribute | OpenMod Docs",
    "keywords": "Class CommandParentAttribute Inheritance System.Object CommandParentAttribute Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandParentAttribute : Attribute Constructors | Improve this Doc View Source CommandParentAttribute(Type) Declaration public CommandParentAttribute(Type type) Parameters Type Name Description Type type | Improve this Doc View Source CommandParentAttribute(Type, String) Declaration public CommandParentAttribute(Type declaringType, string methodName) Parameters Type Name Description Type declaringType System.String methodName Properties | Improve this Doc View Source CommandType Declaration public Type? CommandType { get; } Property Value Type Description System.Nullable < Type > | Improve this Doc View Source DeclaringType Declaration public Type? DeclaringType { get; } Property Value Type Description System.Nullable < Type > | Improve this Doc View Source MethodName Declaration public string? MethodName { get; } Property Value Type Description System.Nullable < System.String > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandPermissionBuilder.html": {
    "href": "api/OpenMod.Core.Commands.CommandPermissionBuilder.html",
    "title": "Class CommandPermissionBuilder | OpenMod Docs",
    "keywords": "Class CommandPermissionBuilder Inheritance System.Object CommandPermissionBuilder Implements ICommandPermissionBuilder Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandPermissionBuilder : object, ICommandPermissionBuilder Constructors | Improve this Doc View Source CommandPermissionBuilder(Lazy<ICommandStore>) Declaration public CommandPermissionBuilder(Lazy<ICommandStore> commandStore) Parameters Type Name Description Lazy < ICommandStore > commandStore Methods | Improve this Doc View Source GetPermission(ICommandRegistration) Declaration public virtual string GetPermission(ICommandRegistration registration) Parameters Type Name Description ICommandRegistration registration Returns Type Description System.String | Improve this Doc View Source GetPermission(ICommandRegistration, IReadOnlyCollection<ICommandRegistration>) Declaration public virtual string GetPermission(ICommandRegistration registration, IReadOnlyCollection<ICommandRegistration> commands) Parameters Type Name Description ICommandRegistration registration IReadOnlyCollection < ICommandRegistration > commands Returns Type Description System.String Implements ICommandPermissionBuilder Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandRegistrationHelper.html": {
    "href": "api/OpenMod.Core.Commands.CommandRegistrationHelper.html",
    "title": "Class CommandRegistrationHelper | OpenMod Docs",
    "keywords": "Class CommandRegistrationHelper Inheritance System.Object CommandRegistrationHelper Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public static class CommandRegistrationHelper : object Methods | Improve this Doc View Source GetChildren(ICommandRegistration, IEnumerable<ICommandRegistration>) Declaration public static List<ICommandRegistration> GetChildren(ICommandRegistration registration, IEnumerable<ICommandRegistration> commandRegistrations) Parameters Type Name Description ICommandRegistration registration IEnumerable < ICommandRegistration > commandRegistrations Returns Type Description List < ICommandRegistration >"
  },
  "api/OpenMod.Core.Commands.CommandStore.html": {
    "href": "api/OpenMod.Core.Commands.CommandStore.html",
    "title": "Class CommandStore | OpenMod Docs",
    "keywords": "Class CommandStore Inheritance System.Object CommandStore Implements ICommandStore IAsyncDisposable Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandStore : object, ICommandStore, IAsyncDisposable Constructors | Improve this Doc View Source CommandStore(IOptions<CommandStoreOptions>, IRuntime, IServiceProvider, IPermissionRegistry, ICommandPermissionBuilder, ICommandDataStore, ILogger<CommandStore>) Declaration public CommandStore(IOptions<CommandStoreOptions> options, IRuntime runtime, IServiceProvider serviceProvider, IPermissionRegistry permissionRegistry, ICommandPermissionBuilder commandPermissionBuilder, ICommandDataStore commandDataStore, ILogger<CommandStore> logger) Parameters Type Name Description IOptions < CommandStoreOptions > options IRuntime runtime IServiceProvider serviceProvider IPermissionRegistry permissionRegistry ICommandPermissionBuilder commandPermissionBuilder ICommandDataStore commandDataStore ILogger < CommandStore > logger Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source GetCommandsAsync() Declaration public Task<IReadOnlyCollection<ICommandRegistration>> GetCommandsAsync() Returns Type Description Task < IReadOnlyCollection < ICommandRegistration >> | Improve this Doc View Source InvalidateAsync() Declaration public Task InvalidateAsync() Returns Type Description Task Implements ICommandStore IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandStoreOptions.CommandSourcesChanged.html": {
    "href": "api/OpenMod.Core.Commands.CommandStoreOptions.CommandSourcesChanged.html",
    "title": "Delegate CommandStoreOptions.CommandSourcesChanged | OpenMod Docs",
    "keywords": "Delegate CommandStoreOptions.CommandSourcesChanged Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public delegate void CommandSourcesChanged(); Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandStoreOptions.html": {
    "href": "api/OpenMod.Core.Commands.CommandStoreOptions.html",
    "title": "Class CommandStoreOptions | OpenMod Docs",
    "keywords": "Class CommandStoreOptions Inheritance System.Object CommandStoreOptions Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandStoreOptions : object Constructors | Improve this Doc View Source CommandStoreOptions() Declaration public CommandStoreOptions() Methods | Improve this Doc View Source AddCommandSource(ICommandSource) Declaration public void AddCommandSource(ICommandSource commandSource) Parameters Type Name Description ICommandSource commandSource | Improve this Doc View Source AddCommandSource(Type) Declaration public void AddCommandSource(Type type) Parameters Type Name Description Type type | Improve this Doc View Source AddCommandSource<TSource>() Declaration public void AddCommandSource<TSource>() where TSource : ICommandSource Type Parameters Name Description TSource | Improve this Doc View Source CreateCommandSources(IServiceProvider) Declaration public IReadOnlyCollection<ICommandSource> CreateCommandSources(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description IReadOnlyCollection < ICommandSource > | Improve this Doc View Source RemoveCommandSource(ICommandSource) Declaration public void RemoveCommandSource(ICommandSource commandSource) Parameters Type Name Description ICommandSource commandSource | Improve this Doc View Source RemoveCommandSource(Type) Declaration public bool RemoveCommandSource(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source RemoveCommandSource<TSource>() Declaration public void RemoveCommandSource<TSource>() where TSource : ICommandSource Type Parameters Name Description TSource Events | Improve this Doc View Source OnCommandSourcesChanged Declaration public event CommandStoreOptions.CommandSourcesChanged OnCommandSourcesChanged Event Type Type Description CommandStoreOptions.CommandSourcesChanged Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandSyntaxAttribute.html": {
    "href": "api/OpenMod.Core.Commands.CommandSyntaxAttribute.html",
    "title": "Class CommandSyntaxAttribute | OpenMod Docs",
    "keywords": "Class CommandSyntaxAttribute Inheritance System.Object CommandSyntaxAttribute Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandSyntaxAttribute : Attribute Constructors | Improve this Doc View Source CommandSyntaxAttribute(String) Declaration public CommandSyntaxAttribute(string syntax) Parameters Type Name Description System.String syntax Properties | Improve this Doc View Source Syntax Declaration public string Syntax { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.CommandWrongUsageException.html": {
    "href": "api/OpenMod.Core.Commands.CommandWrongUsageException.html",
    "title": "Class CommandWrongUsageException | OpenMod Docs",
    "keywords": "Class CommandWrongUsageException Inheritance System.Object UserFriendlyException CommandWrongUsageException Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class CommandWrongUsageException : UserFriendlyException Constructors | Improve this Doc View Source CommandWrongUsageException(ICommandContext) Declaration public CommandWrongUsageException(ICommandContext context) Parameters Type Name Description ICommandContext context | Improve this Doc View Source CommandWrongUsageException(ICommandContext, IOpenModStringLocalizer) Declaration public CommandWrongUsageException(ICommandContext context, IOpenModStringLocalizer localizer) Parameters Type Name Description ICommandContext context IOpenModStringLocalizer localizer | Improve this Doc View Source CommandWrongUsageException(String) Declaration public CommandWrongUsageException(string message) Parameters Type Name Description System.String message Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.Events.CommandExecutedEvent.html": {
    "href": "api/OpenMod.Core.Commands.Events.CommandExecutedEvent.html",
    "title": "Class CommandExecutedEvent | OpenMod Docs",
    "keywords": "Class CommandExecutedEvent Inheritance System.Object EventBase Event CommandExecutedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Commands.Events Assembly : OpenMod.Core.dll Syntax public sealed class CommandExecutedEvent : Event, IEvent Constructors | Improve this Doc View Source CommandExecutedEvent(ICommandActor, ICommandContext) Declaration public CommandExecutedEvent(ICommandActor actor, ICommandContext commandContext) Parameters Type Name Description ICommandActor actor ICommandContext commandContext Properties | Improve this Doc View Source Actor Declaration public ICommandActor Actor { get; } Property Value Type Description ICommandActor | Improve this Doc View Source CommandContext Declaration public ICommandContext CommandContext { get; } Property Value Type Description ICommandContext | Improve this Doc View Source ExceptionHandled Declaration public bool ExceptionHandled { get; set; } Property Value Type Description System.Boolean Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.Events.CommandExecutingEvent.html": {
    "href": "api/OpenMod.Core.Commands.Events.CommandExecutingEvent.html",
    "title": "Class CommandExecutingEvent | OpenMod Docs",
    "keywords": "Class CommandExecutingEvent Inheritance System.Object EventBase Event CommandExecutingEvent Implements ICancellableEvent IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Commands.Events Assembly : OpenMod.Core.dll Syntax public sealed class CommandExecutingEvent : Event, ICancellableEvent, IEvent Constructors | Improve this Doc View Source CommandExecutingEvent(ICommandActor, ICommandContext) Declaration public CommandExecutingEvent(ICommandActor actor, ICommandContext commandContext) Parameters Type Name Description ICommandActor actor ICommandContext commandContext Properties | Improve this Doc View Source Actor Declaration public ICommandActor Actor { get; } Property Value Type Description ICommandActor | Improve this Doc View Source CommandContext Declaration public ICommandContext CommandContext { get; } Property Value Type Description ICommandContext | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements ICancellableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.Events.html": {
    "href": "api/OpenMod.Core.Commands.Events.html",
    "title": "Namespace OpenMod.Core.Commands.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Commands.Events Classes CommandExecutedEvent CommandExecutingEvent"
  },
  "api/OpenMod.Core.Commands.html": {
    "href": "api/OpenMod.Core.Commands.html",
    "title": "Namespace OpenMod.Core.Commands | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Commands Classes AsyncLocalCurrentCommandContextAccessor Command CommandActorAttribute CommandAliasAttribute CommandAttribute CommandAutoCompleteHandler CommandBase CommandContext CommandContextBuilder CommandContextExtensions CommandDataStore CommandDescriptionAttribute CommandExecutor CommandIndexOutOfRangeException CommandNotFoundException CommandParameterParseException CommandParameterResolver CommandParameterResolverOptions CommandParameterResolverOptionsExtensions CommandParameters CommandParentAttribute CommandPermissionBuilder CommandRegistrationHelper CommandStore CommandStoreOptions CommandSyntaxAttribute CommandWrongUsageException MethodCommandWrapper NotEnoughPermissionException OpenModComponentBoundCommandRegistration OpenModComponentCommandSource RegisteredCommand RegisteredCommandData RegisteredCommandsData TypeDescriptorCommandParameterResolveProvider Interfaces ICommandDataStore Delegates CommandStoreOptions.CommandSourcesChanged"
  },
  "api/OpenMod.Core.Commands.ICommandDataStore.html": {
    "href": "api/OpenMod.Core.Commands.ICommandDataStore.html",
    "title": "Interface ICommandDataStore | OpenMod Docs",
    "keywords": "Interface ICommandDataStore Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public interface ICommandDataStore Methods | Improve this Doc View Source GetCommandDataAsync<T>(String, String) Declaration Task<T> GetCommandDataAsync<T>(string commandId, string key) Parameters Type Name Description System.String commandId System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source GetRegisteredCommandAsync(String) Declaration Task<RegisteredCommandData> GetRegisteredCommandAsync(string commandId) Parameters Type Name Description System.String commandId Returns Type Description Task < RegisteredCommandData > | Improve this Doc View Source GetRegisteredCommandsAsync() Declaration Task<RegisteredCommandsData> GetRegisteredCommandsAsync() Returns Type Description Task < RegisteredCommandsData > | Improve this Doc View Source SetCommandDataAsync(RegisteredCommandData) Declaration Task SetCommandDataAsync(RegisteredCommandData data) Parameters Type Name Description RegisteredCommandData data Returns Type Description Task | Improve this Doc View Source SetCommandDataAsync<T>(String, String, T) Declaration Task SetCommandDataAsync<T>(string commandId, string key, T value) Parameters Type Name Description System.String commandId System.String key T value Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source SetRegisteredCommandsAsync(RegisteredCommandsData) Declaration Task SetRegisteredCommandsAsync(RegisteredCommandsData data) Parameters Type Name Description RegisteredCommandsData data Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.MethodCommandWrapper.html": {
    "href": "api/OpenMod.Core.Commands.MethodCommandWrapper.html",
    "title": "Class MethodCommandWrapper | OpenMod Docs",
    "keywords": "Class MethodCommandWrapper Inheritance System.Object MethodCommandWrapper Implements ICommand Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class MethodCommandWrapper : object, ICommand Constructors | Improve this Doc View Source MethodCommandWrapper(MethodInfo, IServiceProvider) Declaration public MethodCommandWrapper(MethodInfo methodInfo, IServiceProvider serviceProvider) Parameters Type Name Description MethodInfo methodInfo IServiceProvider serviceProvider Methods | Improve this Doc View Source ExecuteAsync() Declaration public Task ExecuteAsync() Returns Type Description Task Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.NotEnoughPermissionException.html": {
    "href": "api/OpenMod.Core.Commands.NotEnoughPermissionException.html",
    "title": "Class NotEnoughPermissionException | OpenMod Docs",
    "keywords": "Class NotEnoughPermissionException Inheritance System.Object UserFriendlyException NotEnoughPermissionException Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class NotEnoughPermissionException : UserFriendlyException Constructors | Improve this Doc View Source NotEnoughPermissionException(ICommandContext, String) Declaration public NotEnoughPermissionException(ICommandContext context, string permission) Parameters Type Name Description ICommandContext context System.String permission | Improve this Doc View Source NotEnoughPermissionException(IOpenModStringLocalizer, String) Declaration public NotEnoughPermissionException(IOpenModStringLocalizer stringLocalizer, string permission) Parameters Type Name Description IOpenModStringLocalizer stringLocalizer System.String permission Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandHelp.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandHelp.html",
    "title": "Class CommandHelp | OpenMod Docs",
    "keywords": "Class CommandHelp Inheritance System.Object CommandBase Command CommandHelp Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandHelp : Command, ICommand Constructors | Improve this Doc View Source CommandHelp(IRuntime, ICommandStore, IServiceProvider, IPermissionRegistry, ICommandPermissionBuilder, ICommandContextBuilder, IOpenModStringLocalizer) Declaration public CommandHelp(IRuntime runtime, ICommandStore commandStore, IServiceProvider serviceProvider, IPermissionRegistry permissionRegistry, ICommandPermissionBuilder commandPermissionBuilder, ICommandContextBuilder commandContextBuilder, IOpenModStringLocalizer stringLocalizer) Parameters Type Name Description IRuntime runtime ICommandStore commandStore IServiceProvider serviceProvider IPermissionRegistry permissionRegistry ICommandPermissionBuilder commandPermissionBuilder ICommandContextBuilder commandContextBuilder IOpenModStringLocalizer stringLocalizer Methods | Improve this Doc View Source GetCommandUsage(ICommandRegistration) Declaration public string GetCommandUsage(ICommandRegistration command) Parameters Type Name Description ICommandRegistration command Returns Type Description System.String | Improve this Doc View Source GetPermission(ICommandRegistration, IReadOnlyCollection<ICommandRegistration>) Declaration protected virtual string? GetPermission(ICommandRegistration commandRegistration, IReadOnlyCollection<ICommandRegistration> commands) Parameters Type Name Description ICommandRegistration commandRegistration IReadOnlyCollection < ICommandRegistration > commands Returns Type Description System.Nullable < System.String > | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenMod.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenMod.html",
    "title": "Class CommandOpenMod | OpenMod Docs",
    "keywords": "Class CommandOpenMod Inheritance System.Object CommandBase Command CommandOpenMod Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandOpenMod : Command, ICommand Constructors | Improve this Doc View Source CommandOpenMod(IRuntime, IHostInformation, IServiceProvider) Declaration public CommandOpenMod(IRuntime runtime, IHostInformation hostInformation, IServiceProvider serviceProvider) Parameters Type Name Description IRuntime runtime IHostInformation hostInformation IServiceProvider serviceProvider Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModInstall.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModInstall.html",
    "title": "Class CommandOpenModInstall | OpenMod Docs",
    "keywords": "Class CommandOpenModInstall Inheritance System.Object CommandBase Command CommandOpenModInstall Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandOpenModInstall : Command, ICommand Constructors | Improve this Doc View Source CommandOpenModInstall(IOpenModStringLocalizer, IServiceProvider, IConfiguration, NuGetPluginAssembliesSource) Declaration public CommandOpenModInstall(IOpenModStringLocalizer stringLocalizer, IServiceProvider serviceProvider, IConfiguration configuration, NuGetPluginAssembliesSource nuGetPlugins) Parameters Type Name Description IOpenModStringLocalizer stringLocalizer IServiceProvider serviceProvider IConfiguration configuration NuGetPluginAssembliesSource nuGetPlugins Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModPlugins.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModPlugins.html",
    "title": "Class CommandOpenModPlugins | OpenMod Docs",
    "keywords": "Class CommandOpenModPlugins Inheritance System.Object CommandBase Command CommandOpenModPlugins Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandOpenModPlugins : Command, ICommand Constructors | Improve this Doc View Source CommandOpenModPlugins(IPluginActivator, IServiceProvider) Declaration public CommandOpenModPlugins(IPluginActivator pluginActivator, IServiceProvider serviceProvider) Parameters Type Name Description IPluginActivator pluginActivator IServiceProvider serviceProvider Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModPurge.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModPurge.html",
    "title": "Class CommandOpenModPurge | OpenMod Docs",
    "keywords": "Class CommandOpenModPurge Inheritance System.Object CommandBase Command CommandOpenModPurge Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandOpenModPurge : Command, ICommand Constructors | Improve this Doc View Source CommandOpenModPurge(IServiceProvider, NuGetPackageManager) Declaration public CommandOpenModPurge(IServiceProvider serviceProvider, NuGetPackageManager packageManager) Parameters Type Name Description IServiceProvider serviceProvider NuGetPackageManager packageManager Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModReload.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModReload.html",
    "title": "Class CommandOpenModReload | OpenMod Docs",
    "keywords": "Class CommandOpenModReload Inheritance System.Object CommandBase Command CommandOpenModReload Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandOpenModReload : Command, ICommand Constructors | Improve this Doc View Source CommandOpenModReload(IServiceProvider, IRuntime, IOpenModHost) Declaration public CommandOpenModReload(IServiceProvider serviceProvider, IRuntime runtime, IOpenModHost openModHost) Parameters Type Name Description IServiceProvider serviceProvider IRuntime runtime IOpenModHost openModHost Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModRemove.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandOpenModRemove.html",
    "title": "Class CommandOpenModRemove | OpenMod Docs",
    "keywords": "Class CommandOpenModRemove Inheritance System.Object CommandBase Command CommandOpenModRemove Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandOpenModRemove : Command, ICommand Constructors | Improve this Doc View Source CommandOpenModRemove(IOpenModStringLocalizer, IConfiguration, IServiceProvider, NuGetPluginAssembliesSource) Declaration public CommandOpenModRemove(IOpenModStringLocalizer stringLocalizer, IConfiguration configuration, IServiceProvider serviceProvider, NuGetPluginAssembliesSource nuGetPlugis) Parameters Type Name Description IOpenModStringLocalizer stringLocalizer IConfiguration configuration IServiceProvider serviceProvider NuGetPluginAssembliesSource nuGetPlugis Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandPermission.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandPermission.html",
    "title": "Class CommandPermission | OpenMod Docs",
    "keywords": "Class CommandPermission Inheritance System.Object CommandBase Command CommandPermission Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandPermission : Command, ICommand Constructors | Improve this Doc View Source CommandPermission(IServiceProvider) Declaration public CommandPermission(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandPermissionAction.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandPermissionAction.html",
    "title": "Class CommandPermissionAction | OpenMod Docs",
    "keywords": "Class CommandPermissionAction Inheritance System.Object CommandBase Command CommandPermissionAction CommandPermissionAdd CommandPermissionRemove CommandRoleAction Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public abstract class CommandPermissionAction : Command, ICommand Constructors | Improve this Doc View Source CommandPermissionAction(IServiceProvider, IPermissionRoleStore, ICommandPermissionBuilder, IPermissionChecker, IUserDataStore, IUserManager, IPermissionRegistry) Declaration protected CommandPermissionAction(IServiceProvider serviceProvider, IPermissionRoleStore permissionRoleStore, ICommandPermissionBuilder permissionBuilder, IPermissionChecker permissionChecker, IUserDataStore userDataStore, IUserManager userManager, IPermissionRegistry permissionRegistry) Parameters Type Name Description IServiceProvider serviceProvider IPermissionRoleStore permissionRoleStore ICommandPermissionBuilder permissionBuilder IPermissionChecker permissionChecker IUserDataStore userDataStore IUserManager userManager IPermissionRegistry permissionRegistry Methods | Improve this Doc View Source ExecuteUpdateAsync(IPermissionActor, String) Declaration protected abstract Task ExecuteUpdateAsync(IPermissionActor target, string roleId) Parameters Type Name Description IPermissionActor target System.String roleId Returns Type Description Task | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandPermissionAdd.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandPermissionAdd.html",
    "title": "Class CommandPermissionAdd | OpenMod Docs",
    "keywords": "Class CommandPermissionAdd Inheritance System.Object CommandBase Command CommandPermissionAction CommandPermissionAdd Implements ICommand Inherited Members CommandPermissionAction.OnExecuteAsync() Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandPermissionAdd : CommandPermissionAction, ICommand Constructors | Improve this Doc View Source CommandPermissionAdd(IPermissionChecker, ICommandPermissionBuilder, IServiceProvider, IPermissionRoleStore, IUserDataStore, IUserManager, IPermissionRegistry) Declaration public CommandPermissionAdd(IPermissionChecker permissionChecker, ICommandPermissionBuilder commandPermissionBuilder, IServiceProvider serviceProvider, IPermissionRoleStore permissionRoleStore, IUserDataStore usersDataStore, IUserManager userManager, IPermissionRegistry commandRegistry) Parameters Type Name Description IPermissionChecker permissionChecker ICommandPermissionBuilder commandPermissionBuilder IServiceProvider serviceProvider IPermissionRoleStore permissionRoleStore IUserDataStore usersDataStore IUserManager userManager IPermissionRegistry commandRegistry Methods | Improve this Doc View Source ExecuteUpdateAsync(IPermissionActor, String) Declaration protected override Task ExecuteUpdateAsync(IPermissionActor target, string roleId) Parameters Type Name Description IPermissionActor target System.String roleId Returns Type Description Task Overrides CommandPermissionAction.ExecuteUpdateAsync(IPermissionActor, String) Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandPermissionRemove.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandPermissionRemove.html",
    "title": "Class CommandPermissionRemove | OpenMod Docs",
    "keywords": "Class CommandPermissionRemove Inheritance System.Object CommandBase Command CommandPermissionAction CommandPermissionRemove Implements ICommand Inherited Members CommandPermissionAction.OnExecuteAsync() Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandPermissionRemove : CommandPermissionAction, ICommand Constructors | Improve this Doc View Source CommandPermissionRemove(IPermissionChecker, ICommandPermissionBuilder, IServiceProvider, IPermissionRoleStore, IUserDataStore, IUserManager, IPermissionRegistry) Declaration public CommandPermissionRemove(IPermissionChecker permissionChecker, ICommandPermissionBuilder commandPermissionBuilder, IServiceProvider serviceProvider, IPermissionRoleStore permissionRoleStore, IUserDataStore usersDataStore, IUserManager userManager, IPermissionRegistry commandRegistry) Parameters Type Name Description IPermissionChecker permissionChecker ICommandPermissionBuilder commandPermissionBuilder IServiceProvider serviceProvider IPermissionRoleStore permissionRoleStore IUserDataStore usersDataStore IUserManager userManager IPermissionRegistry commandRegistry Methods | Improve this Doc View Source ExecuteUpdateAsync(IPermissionActor, String) Declaration protected override Task ExecuteUpdateAsync(IPermissionActor target, string roleId) Parameters Type Name Description IPermissionActor target System.String roleId Returns Type Description Task Overrides CommandPermissionAction.ExecuteUpdateAsync(IPermissionActor, String) Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandRestart.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandRestart.html",
    "title": "Class CommandRestart | OpenMod Docs",
    "keywords": "Class CommandRestart Inheritance System.Object CommandBase Command CommandRestart Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandRestart : Command, ICommand Constructors | Improve this Doc View Source CommandRestart(IServiceProvider, IOpenModHost, ILogger<CommandRestart>) Declaration public CommandRestart(IServiceProvider serviceProvider, IOpenModHost host, ILogger<CommandRestart> logger) Parameters Type Name Description IServiceProvider serviceProvider IOpenModHost host ILogger < CommandRestart > logger Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandRole.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandRole.html",
    "title": "Class CommandRole | OpenMod Docs",
    "keywords": "Class CommandRole Inheritance System.Object CommandBase Command CommandRole Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandRole : Command, ICommand Constructors | Improve this Doc View Source CommandRole(IServiceProvider) Declaration public CommandRole(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandRoleAction.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandRoleAction.html",
    "title": "Class CommandRoleAction | OpenMod Docs",
    "keywords": "Class CommandRoleAction Inheritance System.Object CommandBase Command CommandPermissionAction CommandRoleAction CommandRoleAdd CommandRoleRemove Implements ICommand Inherited Members CommandPermissionAction.OnExecuteAsync() Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public abstract class CommandRoleAction : CommandPermissionAction, ICommand Constructors | Improve this Doc View Source CommandRoleAction(IPermissionChecker, ICommandPermissionBuilder, IServiceProvider, IPermissionRoleStore, IUserDataStore, IUserManager, IPermissionRegistry) Declaration protected CommandRoleAction(IPermissionChecker permissionChecker, ICommandPermissionBuilder commandPermissionBuilder, IServiceProvider serviceProvider, IPermissionRoleStore permissionRoleStore, IUserDataStore usersDataStore, IUserManager userManager, IPermissionRegistry commandRegistry) Parameters Type Name Description IPermissionChecker permissionChecker ICommandPermissionBuilder commandPermissionBuilder IServiceProvider serviceProvider IPermissionRoleStore permissionRoleStore IUserDataStore usersDataStore IUserManager userManager IPermissionRegistry commandRegistry Methods | Improve this Doc View Source ExecuteUpdateAsync(IPermissionActor, IPermissionRole) Declaration protected abstract Task ExecuteUpdateAsync(IPermissionActor target, IPermissionRole permissionRole) Parameters Type Name Description IPermissionActor target IPermissionRole permissionRole Returns Type Description Task | Improve this Doc View Source ExecuteUpdateAsync(IPermissionActor, String) Declaration protected override Task ExecuteUpdateAsync(IPermissionActor target, string roleId) Parameters Type Name Description IPermissionActor target System.String roleId Returns Type Description Task Overrides CommandPermissionAction.ExecuteUpdateAsync(IPermissionActor, String) Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandRoleAdd.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandRoleAdd.html",
    "title": "Class CommandRoleAdd | OpenMod Docs",
    "keywords": "Class CommandRoleAdd Inheritance System.Object CommandBase Command CommandPermissionAction CommandRoleAction CommandRoleAdd Implements ICommand Inherited Members CommandRoleAction.ExecuteUpdateAsync(IPermissionActor, String) CommandPermissionAction.OnExecuteAsync() Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandRoleAdd : CommandRoleAction, ICommand Constructors | Improve this Doc View Source CommandRoleAdd(IPermissionChecker, ICommandPermissionBuilder, IServiceProvider, IPermissionRoleStore, IUserDataStore, IUserManager, IPermissionRegistry) Declaration public CommandRoleAdd(IPermissionChecker permissionChecker, ICommandPermissionBuilder commandPermissionBuilder, IServiceProvider serviceProvider, IPermissionRoleStore permissionRoleStore, IUserDataStore usersDataStore, IUserManager userManager, IPermissionRegistry commandRegistry) Parameters Type Name Description IPermissionChecker permissionChecker ICommandPermissionBuilder commandPermissionBuilder IServiceProvider serviceProvider IPermissionRoleStore permissionRoleStore IUserDataStore usersDataStore IUserManager userManager IPermissionRegistry commandRegistry Methods | Improve this Doc View Source ExecuteUpdateAsync(IPermissionActor, IPermissionRole) Declaration protected override Task ExecuteUpdateAsync(IPermissionActor target, IPermissionRole permissionRole) Parameters Type Name Description IPermissionActor target IPermissionRole permissionRole Returns Type Description Task Overrides CommandRoleAction.ExecuteUpdateAsync(IPermissionActor, IPermissionRole) Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandRoleRemove.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandRoleRemove.html",
    "title": "Class CommandRoleRemove | OpenMod Docs",
    "keywords": "Class CommandRoleRemove Inheritance System.Object CommandBase Command CommandPermissionAction CommandRoleAction CommandRoleRemove Implements ICommand Inherited Members CommandRoleAction.ExecuteUpdateAsync(IPermissionActor, String) CommandPermissionAction.OnExecuteAsync() Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandRoleRemove : CommandRoleAction, ICommand Constructors | Improve this Doc View Source CommandRoleRemove(IPermissionChecker, ICommandPermissionBuilder, IServiceProvider, IPermissionRoleStore, IUserDataStore, IUserManager, IPermissionRegistry) Declaration public CommandRoleRemove(IPermissionChecker permissionChecker, ICommandPermissionBuilder commandPermissionBuilder, IServiceProvider serviceProvider, IPermissionRoleStore permissionRoleStore, IUserDataStore usersDataStore, IUserManager userManager, IPermissionRegistry commandRegistry) Parameters Type Name Description IPermissionChecker permissionChecker ICommandPermissionBuilder commandPermissionBuilder IServiceProvider serviceProvider IPermissionRoleStore permissionRoleStore IUserDataStore usersDataStore IUserManager userManager IPermissionRegistry commandRegistry Methods | Improve this Doc View Source ExecuteUpdateAsync(IPermissionActor, IPermissionRole) Declaration protected override Task ExecuteUpdateAsync(IPermissionActor target, IPermissionRole permissionRole) Parameters Type Name Description IPermissionActor target IPermissionRole permissionRole Returns Type Description Task Overrides CommandRoleAction.ExecuteUpdateAsync(IPermissionActor, IPermissionRole) Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.CommandShutdown.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.CommandShutdown.html",
    "title": "Class CommandShutdown | OpenMod Docs",
    "keywords": "Class CommandShutdown Inheritance System.Object CommandBase Command CommandShutdown Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.Core.Commands.OpenModCommands Assembly : OpenMod.Core.dll Syntax public class CommandShutdown : Command, ICommand Constructors | Improve this Doc View Source CommandShutdown(IOpenModHost, IServiceProvider) Declaration public CommandShutdown(IOpenModHost host, IServiceProvider serviceProvider) Parameters Type Name Description IOpenModHost host IServiceProvider serviceProvider Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModCommands.html": {
    "href": "api/OpenMod.Core.Commands.OpenModCommands.html",
    "title": "Namespace OpenMod.Core.Commands.OpenModCommands | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Commands.OpenModCommands Classes CommandHelp CommandOpenMod CommandOpenModInstall CommandOpenModPlugins CommandOpenModPurge CommandOpenModReload CommandOpenModRemove CommandPermission CommandPermissionAction CommandPermissionAdd CommandPermissionRemove CommandRestart CommandRole CommandRoleAction CommandRoleAdd CommandRoleRemove CommandShutdown"
  },
  "api/OpenMod.Core.Commands.OpenModComponentBoundCommandRegistration.html": {
    "href": "api/OpenMod.Core.Commands.OpenModComponentBoundCommandRegistration.html",
    "title": "Class OpenModComponentBoundCommandRegistration | OpenMod Docs",
    "keywords": "Class OpenModComponentBoundCommandRegistration Inheritance System.Object OpenModComponentBoundCommandRegistration Implements ICommandRegistration Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class OpenModComponentBoundCommandRegistration : object, ICommandRegistration Constructors | Improve this Doc View Source OpenModComponentBoundCommandRegistration(IOpenModComponent, MethodInfo) Declaration public OpenModComponentBoundCommandRegistration(IOpenModComponent component, MethodInfo methodInfo) Parameters Type Name Description IOpenModComponent component MethodInfo methodInfo | Improve this Doc View Source OpenModComponentBoundCommandRegistration(IOpenModComponent, Type) Declaration public OpenModComponentBoundCommandRegistration(IOpenModComponent component, Type commandType) Parameters Type Name Description IOpenModComponent component Type commandType Properties | Improve this Doc View Source Aliases Declaration public IReadOnlyCollection<string>? Aliases { get; set; } Property Value Type Description System.Nullable < IReadOnlyCollection < System.String >> | Improve this Doc View Source CommandMethod Declaration public MethodInfo? CommandMethod { get; } Property Value Type Description System.Nullable < MethodInfo > | Improve this Doc View Source CommandType Declaration public Type? CommandType { get; } Property Value Type Description System.Nullable < Type > | Improve this Doc View Source Component Declaration public IOpenModComponent Component { get; } Property Value Type Description IOpenModComponent | Improve this Doc View Source Description Declaration public string? Description { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source ParentId Declaration public string? ParentId { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source PermissionRegistrations Declaration public IReadOnlyCollection<IPermissionRegistration>? PermissionRegistrations { get; set; } Property Value Type Description System.Nullable < IReadOnlyCollection < IPermissionRegistration >> | Improve this Doc View Source Priority Declaration public Priority Priority { get; set; } Property Value Type Description Priority | Improve this Doc View Source Syntax Declaration public string? Syntax { get; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source Instantiate(IServiceProvider) Declaration public ICommand Instantiate(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description ICommand | Improve this Doc View Source SupportsActor(ICommandActor) Declaration public bool SupportsActor(ICommandActor actor) Parameters Type Name Description ICommandActor actor Returns Type Description System.Boolean Implements ICommandRegistration Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.OpenModComponentCommandSource.html": {
    "href": "api/OpenMod.Core.Commands.OpenModComponentCommandSource.html",
    "title": "Class OpenModComponentCommandSource | OpenMod Docs",
    "keywords": "Class OpenModComponentCommandSource Inheritance System.Object OpenModComponentCommandSource Implements ICommandSource Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class OpenModComponentCommandSource : object, ICommandSource Constructors | Improve this Doc View Source OpenModComponentCommandSource(ILogger, IOpenModComponent, Assembly) Declaration public OpenModComponentCommandSource(ILogger logger, IOpenModComponent openModComponent, Assembly assembly) Parameters Type Name Description ILogger logger IOpenModComponent openModComponent Assembly assembly Properties | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetCommandsAsync() Declaration public Task<IReadOnlyCollection<ICommandRegistration>> GetCommandsAsync() Returns Type Description Task < IReadOnlyCollection < ICommandRegistration >> Implements ICommandSource Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.Parameters.html": {
    "href": "api/OpenMod.Core.Commands.Parameters.html",
    "title": "Namespace OpenMod.Core.Commands.Parameters | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Commands.Parameters Classes TimeSpanCommandParameterResolveProvider"
  },
  "api/OpenMod.Core.Commands.Parameters.TimeSpanCommandParameterResolveProvider.html": {
    "href": "api/OpenMod.Core.Commands.Parameters.TimeSpanCommandParameterResolveProvider.html",
    "title": "Class TimeSpanCommandParameterResolveProvider | OpenMod Docs",
    "keywords": "Class TimeSpanCommandParameterResolveProvider Inheritance System.Object TimeSpanCommandParameterResolveProvider Implements ICommandParameterResolveProvider Namespace : OpenMod.Core.Commands.Parameters Assembly : OpenMod.Core.dll Syntax public class TimeSpanCommandParameterResolveProvider : object, ICommandParameterResolveProvider Methods | Improve this Doc View Source ResolveAsync(Type, String) Declaration public Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source Supports(Type) Declaration public bool Supports(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Implements ICommandParameterResolveProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.RegisteredCommand.html": {
    "href": "api/OpenMod.Core.Commands.RegisteredCommand.html",
    "title": "Class RegisteredCommand | OpenMod Docs",
    "keywords": "Class RegisteredCommand Inheritance System.Object RegisteredCommand Implements ICommandRegistration Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class RegisteredCommand : object, ICommandRegistration Constructors | Improve this Doc View Source RegisteredCommand(ICommandRegistration, RegisteredCommandData) Declaration public RegisteredCommand(ICommandRegistration baseCommandRegistration, RegisteredCommandData commandData) Parameters Type Name Description ICommandRegistration baseCommandRegistration RegisteredCommandData commandData Properties | Improve this Doc View Source Aliases Declaration public IReadOnlyCollection<string> Aliases { get; } Property Value Type Description IReadOnlyCollection < System.String > | Improve this Doc View Source BaseCommandRegistration Declaration public ICommandRegistration BaseCommandRegistration { get; } Property Value Type Description ICommandRegistration | Improve this Doc View Source CommandData Declaration public RegisteredCommandData CommandData { get; } Property Value Type Description RegisteredCommandData | Improve this Doc View Source Component Declaration public IOpenModComponent Component { get; } Property Value Type Description IOpenModComponent | Improve this Doc View Source Description Declaration public string? Description { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ParentId Declaration public string? ParentId { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source PermissionRegistrations Declaration public IReadOnlyCollection<IPermissionRegistration> PermissionRegistrations { get; } Property Value Type Description IReadOnlyCollection < IPermissionRegistration > | Improve this Doc View Source Priority Declaration public Priority Priority { get; } Property Value Type Description Priority | Improve this Doc View Source Syntax Declaration public string? Syntax { get; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source Instantiate(IServiceProvider) Declaration public ICommand Instantiate(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description ICommand | Improve this Doc View Source SupportsActor(ICommandActor) Declaration public bool SupportsActor(ICommandActor actor) Parameters Type Name Description ICommandActor actor Returns Type Description System.Boolean Implements ICommandRegistration Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.RegisteredCommandData.html": {
    "href": "api/OpenMod.Core.Commands.RegisteredCommandData.html",
    "title": "Class RegisteredCommandData | OpenMod Docs",
    "keywords": "Class RegisteredCommandData Inheritance System.Object RegisteredCommandData Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public sealed class RegisteredCommandData : object Properties | Improve this Doc View Source Aliases Declaration public List<string>? Aliases { get; set; } Property Value Type Description System.Nullable < List < System.String >> | Improve this Doc View Source Data Declaration public Dictionary<string, object?>? Data { get; set; } Property Value Type Description System.Nullable < Dictionary < System.String , System.Nullable < System.Object >>> | Improve this Doc View Source Enabled Declaration public bool? Enabled { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Id Declaration public string? Id { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Name Declaration public string? Name { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source ParentId Declaration public string? ParentId { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Priority Declaration public Priority? Priority { get; set; } Property Value Type Description System.Nullable < Priority > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.RegisteredCommandsData.html": {
    "href": "api/OpenMod.Core.Commands.RegisteredCommandsData.html",
    "title": "Class RegisteredCommandsData | OpenMod Docs",
    "keywords": "Class RegisteredCommandsData Inheritance System.Object RegisteredCommandsData Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public sealed class RegisteredCommandsData : object Properties | Improve this Doc View Source Commands Declaration public List<RegisteredCommandData>? Commands { get; set; } Property Value Type Description System.Nullable < List < RegisteredCommandData >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Commands.TypeDescriptorCommandParameterResolveProvider.html": {
    "href": "api/OpenMod.Core.Commands.TypeDescriptorCommandParameterResolveProvider.html",
    "title": "Class TypeDescriptorCommandParameterResolveProvider | OpenMod Docs",
    "keywords": "Class TypeDescriptorCommandParameterResolveProvider Inheritance System.Object TypeDescriptorCommandParameterResolveProvider Implements ICommandParameterResolveProvider Namespace : OpenMod.Core.Commands Assembly : OpenMod.Core.dll Syntax public class TypeDescriptorCommandParameterResolveProvider : object, ICommandParameterResolveProvider Constructors | Improve this Doc View Source TypeDescriptorCommandParameterResolveProvider(IServiceProvider, IOpenModStringLocalizer) Declaration public TypeDescriptorCommandParameterResolveProvider(IServiceProvider serviceProvider, IOpenModStringLocalizer openModStringLocalizer) Parameters Type Name Description IServiceProvider serviceProvider IOpenModStringLocalizer openModStringLocalizer Methods | Improve this Doc View Source ResolveAsync(Type, String) Declaration public Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source Supports(Type) Declaration public bool Supports(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Implements ICommandParameterResolveProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Configuration.html": {
    "href": "api/OpenMod.Core.Configuration.html",
    "title": "Namespace OpenMod.Core.Configuration | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Configuration Classes YamlConfigurationProviderEx A YAML file based . Ex: Supports variables. YamlConfigurationSourceEx A YAML file based . Ex: Supports variables."
  },
  "api/OpenMod.Core.Configuration.YamlConfigurationProviderEx.html": {
    "href": "api/OpenMod.Core.Configuration.YamlConfigurationProviderEx.html",
    "title": "Class YamlConfigurationProviderEx | OpenMod Docs",
    "keywords": "Class YamlConfigurationProviderEx A YAML file based . Ex: Supports variables. Inheritance System.Object YamlConfigurationProviderEx Namespace : OpenMod.Core.Configuration Assembly : OpenMod.Core.dll Syntax public class YamlConfigurationProviderEx : FileConfigurationProvider Constructors | Improve this Doc View Source YamlConfigurationProviderEx(YamlConfigurationSourceEx) Declaration public YamlConfigurationProviderEx(YamlConfigurationSourceEx source) Parameters Type Name Description YamlConfigurationSourceEx source Methods | Improve this Doc View Source Load(Stream) Declaration public override void Load(Stream stream) Parameters Type Name Description Stream stream Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Configuration.YamlConfigurationSourceEx.html": {
    "href": "api/OpenMod.Core.Configuration.YamlConfigurationSourceEx.html",
    "title": "Class YamlConfigurationSourceEx | OpenMod Docs",
    "keywords": "Class YamlConfigurationSourceEx A YAML file based . Ex: Supports variables. Inheritance System.Object YamlConfigurationSourceEx Namespace : OpenMod.Core.Configuration Assembly : OpenMod.Core.dll Syntax public class YamlConfigurationSourceEx : FileConfigurationSource Properties | Improve this Doc View Source Variables Declaration public IDictionary<string, string>? Variables { get; set; } Property Value Type Description System.Nullable < IDictionary < System.String , System.String >> Methods | Improve this Doc View Source Build(IConfigurationBuilder) Declaration public override IConfigurationProvider Build(IConfigurationBuilder builder) Parameters Type Name Description IConfigurationBuilder builder Returns Type Description IConfigurationProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Console.ConsoleActor.html": {
    "href": "api/OpenMod.Core.Console.ConsoleActor.html",
    "title": "Class ConsoleActor | OpenMod Docs",
    "keywords": "Class ConsoleActor Inheritance System.Object ConsoleActor Implements ICommandActor IPermissionActor Namespace : OpenMod.Core.Console Assembly : OpenMod.Core.dll Syntax public class ConsoleActor : object, ICommandActor, IPermissionActor Constructors | Improve this Doc View Source ConsoleActor(ILogger<ConsoleActor>, String) Declaration public ConsoleActor(ILogger<ConsoleActor> logger, string consoleId) Parameters Type Name Description ILogger < ConsoleActor > logger System.String consoleId Properties | Improve this Doc View Source Data Declaration public Dictionary<string, object> Data { get; } Property Value Type Description Dictionary < System.String , System.Object > | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source FullActorName Declaration public string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description System.String Methods | Improve this Doc View Source PrintMessageAsync(String) Declaration public Task PrintMessageAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, Color) Declaration public Task PrintMessageAsync(string message, Color color) Parameters Type Name Description System.String message Color color Returns Type Description Task Implements ICommandActor IPermissionActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Console.ConsolePermissionProvider.html": {
    "href": "api/OpenMod.Core.Console.ConsolePermissionProvider.html",
    "title": "Class ConsolePermissionProvider | OpenMod Docs",
    "keywords": "Class ConsolePermissionProvider Inheritance System.Object AlwaysGrantPermissionCheckProvider ConsolePermissionProvider Implements IPermissionCheckProvider Inherited Members AlwaysGrantPermissionCheckProvider.SupportsActor(IPermissionActor) AlwaysGrantPermissionCheckProvider.CheckPermissionAsync(IPermissionActor, String) Namespace : OpenMod.Core.Console Assembly : OpenMod.Core.dll Syntax public class ConsolePermissionProvider : AlwaysGrantPermissionCheckProvider, IPermissionCheckProvider Constructors | Improve this Doc View Source ConsolePermissionProvider() Declaration public ConsolePermissionProvider() Implements IPermissionCheckProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Console.html": {
    "href": "api/OpenMod.Core.Console.html",
    "title": "Namespace OpenMod.Core.Console | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Console Classes ConsoleActor ConsolePermissionProvider Interfaces IConsoleActorAccessor"
  },
  "api/OpenMod.Core.Console.IConsoleActorAccessor.html": {
    "href": "api/OpenMod.Core.Console.IConsoleActorAccessor.html",
    "title": "Interface IConsoleActorAccessor | OpenMod Docs",
    "keywords": "Interface IConsoleActorAccessor Namespace : OpenMod.Core.Console Assembly : OpenMod.Core.dll Syntax public interface IConsoleActorAccessor Properties | Improve this Doc View Source Actor Declaration ICommandActor Actor { get; } Property Value Type Description ICommandActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Cooldowns.CommandCooldownStore.html": {
    "href": "api/OpenMod.Core.Cooldowns.CommandCooldownStore.html",
    "title": "Class CommandCooldownStore | OpenMod Docs",
    "keywords": "Class CommandCooldownStore Inheritance System.Object CommandCooldownStore Implements ICommandCooldownStore Namespace : OpenMod.Core.Cooldowns Assembly : OpenMod.Core.dll Syntax public class CommandCooldownStore : object, ICommandCooldownStore Constructors | Improve this Doc View Source CommandCooldownStore(IConfiguration, IRuntime, IDataStoreFactory, ILogger<CommandCooldownStore>, IPermissionRoleStore, IPermissionRolesDataStore, IPermissionChecker) Declaration public CommandCooldownStore(IConfiguration configuration, IRuntime runtime, IDataStoreFactory dataStoreFactory, ILogger<CommandCooldownStore> logger, IPermissionRoleStore permissionRoleStore, IPermissionRolesDataStore permissionRolesDataStore, IPermissionChecker permissionChecker) Parameters Type Name Description IConfiguration configuration IRuntime runtime IDataStoreFactory dataStoreFactory ILogger < CommandCooldownStore > logger IPermissionRoleStore permissionRoleStore IPermissionRolesDataStore permissionRolesDataStore IPermissionChecker permissionChecker Methods | Improve this Doc View Source GetCooldownSpanAsync(ICommandActor, String) Declaration public Task<TimeSpan?> GetCooldownSpanAsync(ICommandActor actor, string commandId) Parameters Type Name Description ICommandActor actor System.String commandId Returns Type Description Task < System.Nullable < TimeSpan >> | Improve this Doc View Source GetLastExecutedAsync(ICommandActor, String) Declaration public Task<DateTime?> GetLastExecutedAsync(ICommandActor actor, string command) Parameters Type Name Description ICommandActor actor System.String command Returns Type Description Task < System.Nullable < DateTime >> | Improve this Doc View Source RecordExecutionAsync(ICommandActor, String, DateTime) Declaration public Task RecordExecutionAsync(ICommandActor actor, string command, DateTime time) Parameters Type Name Description ICommandActor actor System.String command DateTime time Returns Type Description Task Implements ICommandCooldownStore Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Cooldowns.CommandEventListener.html": {
    "href": "api/OpenMod.Core.Cooldowns.CommandEventListener.html",
    "title": "Class CommandEventListener | OpenMod Docs",
    "keywords": "Class CommandEventListener Inheritance System.Object CommandEventListener Implements IEventListener < CommandExecutingEvent > IEventListener < CommandExecutedEvent > IEventListener Namespace : OpenMod.Core.Cooldowns Assembly : OpenMod.Core.dll Syntax public class CommandEventListener : object, IEventListener<CommandExecutingEvent>, IEventListener<CommandExecutedEvent>, IEventListener Constructors | Improve this Doc View Source CommandEventListener(ICommandCooldownStore, IOpenModStringLocalizer) Declaration public CommandEventListener(ICommandCooldownStore commandCooldownStore, IOpenModStringLocalizer stringLocalizer) Parameters Type Name Description ICommandCooldownStore commandCooldownStore IOpenModStringLocalizer stringLocalizer Methods | Improve this Doc View Source HandleEventAsync(Nullable<Object>, CommandExecutedEvent) Declaration public Task HandleEventAsync(object? sender, CommandExecutedEvent event) Parameters Type Name Description System.Nullable < System.Object > sender CommandExecutedEvent event Returns Type Description Task | Improve this Doc View Source HandleEventAsync(Nullable<Object>, CommandExecutingEvent) Declaration public Task HandleEventAsync(object? sender, CommandExecutingEvent event) Parameters Type Name Description System.Nullable < System.Object > sender CommandExecutingEvent event Returns Type Description Task Implements IEventListener<TEvent> IEventListener<TEvent> IEventListener Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Cooldowns.CooldownRecord.html": {
    "href": "api/OpenMod.Core.Cooldowns.CooldownRecord.html",
    "title": "Class CooldownRecord | OpenMod Docs",
    "keywords": "Class CooldownRecord Inheritance System.Object CooldownRecord Namespace : OpenMod.Core.Cooldowns Assembly : OpenMod.Core.dll Syntax public sealed class CooldownRecord : object Constructors | Improve this Doc View Source CooldownRecord() Declaration public CooldownRecord() | Improve this Doc View Source CooldownRecord(String, DateTime) Declaration public CooldownRecord(string command, DateTime executed) Parameters Type Name Description System.String command DateTime executed Properties | Improve this Doc View Source Command Declaration public string? Command { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Executed Declaration public DateTime? Executed { get; set; } Property Value Type Description System.Nullable < DateTime > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Cooldowns.CooldownRecords.html": {
    "href": "api/OpenMod.Core.Cooldowns.CooldownRecords.html",
    "title": "Class CooldownRecords | OpenMod Docs",
    "keywords": "Class CooldownRecords Inheritance System.Object CooldownRecords Namespace : OpenMod.Core.Cooldowns Assembly : OpenMod.Core.dll Syntax public class CooldownRecords : object Constructors | Improve this Doc View Source CooldownRecords() Declaration public CooldownRecords() | Improve this Doc View Source CooldownRecords(Dictionary<String, List<CooldownRecord>>) Declaration public CooldownRecords(Dictionary<string, List<CooldownRecord>> records) Parameters Type Name Description Dictionary < System.String , List < CooldownRecord >> records Properties | Improve this Doc View Source Records Declaration public Dictionary<string, List<CooldownRecord>> Records { get; set; } Property Value Type Description Dictionary < System.String , List < CooldownRecord >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Cooldowns.CooldownSpan.html": {
    "href": "api/OpenMod.Core.Cooldowns.CooldownSpan.html",
    "title": "Class CooldownSpan | OpenMod Docs",
    "keywords": "Class CooldownSpan Inheritance System.Object CooldownSpan Namespace : OpenMod.Core.Cooldowns Assembly : OpenMod.Core.dll Syntax public sealed class CooldownSpan : object Properties | Improve this Doc View Source Command Declaration public string? Command { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Cooldown Declaration public string? Cooldown { get; set; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source ToTimeSpan() Declaration public TimeSpan ToTimeSpan() Returns Type Description TimeSpan Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Cooldowns.html": {
    "href": "api/OpenMod.Core.Cooldowns.html",
    "title": "Namespace OpenMod.Core.Cooldowns | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Cooldowns Classes CommandCooldownStore CommandEventListener CooldownRecord CooldownRecords CooldownSpan Interfaces ICommandCooldownStore"
  },
  "api/OpenMod.Core.Cooldowns.ICommandCooldownStore.html": {
    "href": "api/OpenMod.Core.Cooldowns.ICommandCooldownStore.html",
    "title": "Interface ICommandCooldownStore | OpenMod Docs",
    "keywords": "Interface ICommandCooldownStore Namespace : OpenMod.Core.Cooldowns Assembly : OpenMod.Core.dll Syntax public interface ICommandCooldownStore Methods | Improve this Doc View Source GetCooldownSpanAsync(ICommandActor, String) Declaration Task<TimeSpan?> GetCooldownSpanAsync(ICommandActor actor, string commandId) Parameters Type Name Description ICommandActor actor System.String commandId Returns Type Description Task < System.Nullable < TimeSpan >> | Improve this Doc View Source GetLastExecutedAsync(ICommandActor, String) Declaration Task<DateTime?> GetLastExecutedAsync(ICommandActor actor, string command) Parameters Type Name Description ICommandActor actor System.String command Returns Type Description Task < System.Nullable < DateTime >> | Improve this Doc View Source RecordExecutionAsync(ICommandActor, String, DateTime) Declaration Task RecordExecutionAsync(ICommandActor actor, string command, DateTime time) Parameters Type Name Description ICommandActor actor System.String command DateTime time Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Eventing.BasicCancellableEvent.html": {
    "href": "api/OpenMod.Core.Eventing.BasicCancellableEvent.html",
    "title": "Class BasicCancellableEvent | OpenMod Docs",
    "keywords": "Class BasicCancellableEvent A basic cancellable event that does not need a separate class Inheritance System.Object EventBase BasicCancellableEvent Implements ICancellableEvent IEvent Inherited Members EventBase.Name EventBase.Data Namespace : OpenMod.Core.Eventing Assembly : OpenMod.Core.dll Syntax public sealed class BasicCancellableEvent : EventBase, ICancellableEvent, IEvent Constructors | Improve this Doc View Source BasicCancellableEvent(String) Declaration public BasicCancellableEvent(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Arguments Declaration public override Dictionary<string, object> Arguments { get; } Property Value Type Description Dictionary < System.String , System.Object > Overrides EventBase.Arguments | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements ICancellableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Eventing.BasicEvent.html": {
    "href": "api/OpenMod.Core.Eventing.BasicEvent.html",
    "title": "Class BasicEvent | OpenMod Docs",
    "keywords": "Class BasicEvent A basic event that does not need a separate class Inheritance System.Object EventBase BasicEvent Implements IEvent Inherited Members EventBase.Name EventBase.Data Namespace : OpenMod.Core.Eventing Assembly : OpenMod.Core.dll Syntax public sealed class BasicEvent : EventBase, IEvent Constructors | Improve this Doc View Source BasicEvent(String) Declaration public BasicEvent(string name) Parameters Type Name Description System.String name Properties | Improve this Doc View Source Arguments Declaration public override Dictionary<string, object> Arguments { get; } Property Value Type Description Dictionary < System.String , System.Object > Overrides EventBase.Arguments Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Eventing.Event.html": {
    "href": "api/OpenMod.Core.Eventing.Event.html",
    "title": "Class Event | OpenMod Docs",
    "keywords": "Class Event Inheritance System.Object EventBase Event CommandExecutedEvent CommandExecutingEvent OpenModInitializedEvent OpenModShutdownEvent PermissionActorRoleEvent PluginActivatingEvent PluginConfigurationChangedEvent PluginContainerConfiguringEvent PluginDisposedEvent PluginLoadedEvent PluginLoadingEvent PluginUnloadedEvent PluginUnloadingEvent RconClientEvent BalanceUpdatedEvent RustBuildingBlockEvent RustPlayerEvent RustPlayerBannedEvent Implements IEvent Inherited Members EventBase.Name EventBase.Data Namespace : OpenMod.Core.Eventing Assembly : OpenMod.Core.dll Syntax public abstract class Event : EventBase, IEvent Properties | Improve this Doc View Source Arguments Declaration public override Dictionary<string, object> Arguments { get; } Property Value Type Description Dictionary < System.String , System.Object > Overrides EventBase.Arguments Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Eventing.EventBase.html": {
    "href": "api/OpenMod.Core.Eventing.EventBase.html",
    "title": "Class EventBase | OpenMod Docs",
    "keywords": "Class EventBase Inheritance System.Object EventBase BasicCancellableEvent BasicEvent Event Implements IEvent Namespace : OpenMod.Core.Eventing Assembly : OpenMod.Core.dll Syntax public abstract class EventBase : object, IEvent Properties | Improve this Doc View Source Arguments Declaration public abstract Dictionary<string, object> Arguments { get; } Property Value Type Description Dictionary < System.String , System.Object > | Improve this Doc View Source Data Declaration public Dictionary<string, object> Data { get; } Property Value Type Description Dictionary < System.String , System.Object > | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Eventing.EventBus.html": {
    "href": "api/OpenMod.Core.Eventing.EventBus.html",
    "title": "Class EventBus | OpenMod Docs",
    "keywords": "Class EventBus Inheritance System.Object EventBus Implements IEventBus IAsyncDisposable Namespace : OpenMod.Core.Eventing Assembly : OpenMod.Core.dll Syntax public class EventBus : object, IEventBus, IAsyncDisposable Constructors | Improve this Doc View Source EventBus(ILogger<EventBus>) Declaration public EventBus(ILogger<EventBus> logger) Parameters Type Name Description ILogger < EventBus > logger Methods | Improve this Doc View Source DisposeAsync() Declaration public virtual ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source EmitAsync(IOpenModComponent, Nullable<Object>, IEvent, EventExecutedCallback) Declaration public virtual Task EmitAsync(IOpenModComponent component, object? sender, IEvent event, EventExecutedCallback callback = null) Parameters Type Name Description IOpenModComponent component System.Nullable < System.Object > sender IEvent event EventExecutedCallback callback Returns Type Description Task | Improve this Doc View Source GetEventListenerAttribute(MethodInfo) Declaration protected virtual EventListenerAttribute GetEventListenerAttribute(MethodInfo method) Parameters Type Name Description MethodInfo method Returns Type Description EventListenerAttribute | Improve this Doc View Source Subscribe(IOpenModComponent, Assembly) Declaration public virtual IDisposable Subscribe(IOpenModComponent component, Assembly assembly) Parameters Type Name Description IOpenModComponent component Assembly assembly Returns Type Description IDisposable | Improve this Doc View Source Subscribe(IOpenModComponent, String, EventCallback) Declaration public virtual IDisposable Subscribe(IOpenModComponent component, string eventName, EventCallback callback) Parameters Type Name Description IOpenModComponent component System.String eventName EventCallback callback Returns Type Description IDisposable | Improve this Doc View Source Subscribe(IOpenModComponent, String, EventCallback, IEventListenerOptions) Declaration public virtual IDisposable Subscribe(IOpenModComponent component, string eventName, EventCallback callback, IEventListenerOptions options) Parameters Type Name Description IOpenModComponent component System.String eventName EventCallback callback IEventListenerOptions options Returns Type Description IDisposable | Improve this Doc View Source Subscribe(IOpenModComponent, Type, EventCallback) Declaration public virtual IDisposable Subscribe(IOpenModComponent component, Type eventType, EventCallback callback) Parameters Type Name Description IOpenModComponent component Type eventType EventCallback callback Returns Type Description IDisposable | Improve this Doc View Source Subscribe(IOpenModComponent, Type, EventCallback, IEventListenerOptions) Declaration public virtual IDisposable Subscribe(IOpenModComponent component, Type eventType, EventCallback callback, IEventListenerOptions options) Parameters Type Name Description IOpenModComponent component Type eventType EventCallback callback IEventListenerOptions options Returns Type Description IDisposable | Improve this Doc View Source Subscribe<TEvent>(IOpenModComponent, EventCallback<TEvent>) Declaration public virtual IDisposable Subscribe<TEvent>(IOpenModComponent component, EventCallback<TEvent> callback) where TEvent : IEvent Parameters Type Name Description IOpenModComponent component EventCallback <TEvent> callback Returns Type Description IDisposable Type Parameters Name Description TEvent | Improve this Doc View Source Subscribe<TEvent>(IOpenModComponent, EventCallback<TEvent>, IEventListenerOptions) Declaration public virtual IDisposable Subscribe<TEvent>(IOpenModComponent component, EventCallback<TEvent> callback, IEventListenerOptions options) where TEvent : IEvent Parameters Type Name Description IOpenModComponent component EventCallback <TEvent> callback IEventListenerOptions options Returns Type Description IDisposable Type Parameters Name Description TEvent | Improve this Doc View Source Unsubscribe(IOpenModComponent) Declaration public virtual void Unsubscribe(IOpenModComponent component) Parameters Type Name Description IOpenModComponent component | Improve this Doc View Source Unsubscribe(IOpenModComponent, String) Declaration public virtual void Unsubscribe(IOpenModComponent component, string eventName) Parameters Type Name Description IOpenModComponent component System.String eventName | Improve this Doc View Source Unsubscribe(IOpenModComponent, Type) Declaration public virtual void Unsubscribe(IOpenModComponent component, Type eventType) Parameters Type Name Description IOpenModComponent component Type eventType | Improve this Doc View Source Unsubscribe<TEvent>(IOpenModComponent) Declaration public virtual void Unsubscribe<TEvent>(IOpenModComponent component) where TEvent : IEvent Parameters Type Name Description IOpenModComponent component Type Parameters Name Description TEvent Implements IEventBus IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Eventing.EventListenerAttribute.html": {
    "href": "api/OpenMod.Core.Eventing.EventListenerAttribute.html",
    "title": "Class EventListenerAttribute | OpenMod Docs",
    "keywords": "Class EventListenerAttribute Inheritance System.Object EventListenerAttribute Implements IEventListenerOptions Namespace : OpenMod.Core.Eventing Assembly : OpenMod.Core.dll Syntax public class EventListenerAttribute : Attribute, IEventListenerOptions Properties | Improve this Doc View Source IgnoreCancelled Declaration public bool IgnoreCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Priority Declaration public EventListenerPriority Priority { get; set; } Property Value Type Description EventListenerPriority Implements IEventListenerOptions Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Eventing.EventListenerLifetimeAttribute.html": {
    "href": "api/OpenMod.Core.Eventing.EventListenerLifetimeAttribute.html",
    "title": "Class EventListenerLifetimeAttribute | OpenMod Docs",
    "keywords": "Class EventListenerLifetimeAttribute Inheritance System.Object EventListenerLifetimeAttribute Namespace : OpenMod.Core.Eventing Assembly : OpenMod.Core.dll Syntax public class EventListenerLifetimeAttribute : Attribute Constructors | Improve this Doc View Source EventListenerLifetimeAttribute(ServiceLifetime) Declaration public EventListenerLifetimeAttribute(ServiceLifetime lifetime) Parameters Type Name Description ServiceLifetime lifetime Properties | Improve this Doc View Source Lifetime Declaration public ServiceLifetime Lifetime { get; } Property Value Type Description ServiceLifetime Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Eventing.html": {
    "href": "api/OpenMod.Core.Eventing.html",
    "title": "Namespace OpenMod.Core.Eventing | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Eventing Classes BasicCancellableEvent A basic cancellable event that does not need a separate class BasicEvent A basic event that does not need a separate class Event EventBase EventBus EventListenerAttribute EventListenerLifetimeAttribute"
  },
  "api/OpenMod.Core.Events.html": {
    "href": "api/OpenMod.Core.Events.html",
    "title": "Namespace OpenMod.Core.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Events Classes OpenModInitializedEvent The event that is triggered when OpenMod has been initialized. It is called after the container has been built and all plugins have been loaded. OpenModShutdownEvent The event that is triggered before OpenMod is shutting down."
  },
  "api/OpenMod.Core.Events.OpenModInitializedEvent.html": {
    "href": "api/OpenMod.Core.Events.OpenModInitializedEvent.html",
    "title": "Class OpenModInitializedEvent | OpenMod Docs",
    "keywords": "Class OpenModInitializedEvent The event that is triggered when OpenMod has been initialized. It is called after the container has been built and all plugins have been loaded. Inheritance System.Object EventBase Event OpenModInitializedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Events Assembly : OpenMod.Core.dll Syntax public sealed class OpenModInitializedEvent : Event, IEvent Constructors | Improve this Doc View Source OpenModInitializedEvent(IOpenModHost) Declaration public OpenModInitializedEvent(IOpenModHost host) Parameters Type Name Description IOpenModHost host Properties | Improve this Doc View Source Host The OpenMod host. Declaration public IOpenModHost Host { get; } Property Value Type Description IOpenModHost Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Events.OpenModShutdownEvent.html": {
    "href": "api/OpenMod.Core.Events.OpenModShutdownEvent.html",
    "title": "Class OpenModShutdownEvent | OpenMod Docs",
    "keywords": "Class OpenModShutdownEvent The event that is triggered before OpenMod is shutting down. Inheritance System.Object EventBase Event OpenModShutdownEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Events Assembly : OpenMod.Core.dll Syntax public class OpenModShutdownEvent : Event, IEvent Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Helpers.ArgumentsParser.html": {
    "href": "api/OpenMod.Core.Helpers.ArgumentsParser.html",
    "title": "Class ArgumentsParser | OpenMod Docs",
    "keywords": "Class ArgumentsParser Inheritance System.Object ArgumentsParser Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public static class ArgumentsParser : object Methods | Improve this Doc View Source ParseArguments(String) C-like argument parser Declaration public static string[] ParseArguments(string line) Parameters Type Name Description System.String line Line string with arguments. Returns Type Description System.String [] The args[] array (argv)"
  },
  "api/OpenMod.Core.Helpers.AssemblyEqualityComparer.html": {
    "href": "api/OpenMod.Core.Helpers.AssemblyEqualityComparer.html",
    "title": "Class AssemblyEqualityComparer | OpenMod Docs",
    "keywords": "Class AssemblyEqualityComparer Inheritance System.Object AssemblyEqualityComparer Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public class AssemblyEqualityComparer : IEqualityComparer<Assembly> Methods | Improve this Doc View Source Equals(Assembly, Assembly) Declaration public bool Equals(Assembly x, Assembly y) Parameters Type Name Description Assembly x Assembly y Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode(Assembly) Declaration public int GetHashCode(Assembly obj) Parameters Type Name Description Assembly obj Returns Type Description System.Int32 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Helpers.AssemblyHelper.html": {
    "href": "api/OpenMod.Core.Helpers.AssemblyHelper.html",
    "title": "Class AssemblyHelper | OpenMod Docs",
    "keywords": "Class AssemblyHelper Inheritance System.Object AssemblyHelper Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public static class AssemblyHelper : object Methods | Improve this Doc View Source CopyAssemblyResources(Assembly, Nullable<String>, Boolean) Declaration public static void CopyAssemblyResources(Assembly assembly, string? baseDir, bool overwrite = false) Parameters Type Name Description Assembly assembly System.Nullable < System.String > baseDir System.Boolean overwrite"
  },
  "api/OpenMod.Core.Helpers.AsyncDisposeAction.html": {
    "href": "api/OpenMod.Core.Helpers.AsyncDisposeAction.html",
    "title": "Class AsyncDisposeAction | OpenMod Docs",
    "keywords": "Class AsyncDisposeAction Inheritance System.Object AsyncDisposeAction Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public sealed class AsyncDisposeAction : IAsyncDisposable Constructors | Improve this Doc View Source AsyncDisposeAction(Func<Task>) Declaration public AsyncDisposeAction(Func<Task> disposeTask) Parameters Type Name Description Func < Task > disposeTask Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Helpers.AsyncHelper.html": {
    "href": "api/OpenMod.Core.Helpers.AsyncHelper.html",
    "title": "Class AsyncHelper | OpenMod Docs",
    "keywords": "Class AsyncHelper Inheritance System.Object AsyncHelper Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public static class AsyncHelper : object Methods | Improve this Doc View Source IsAsync(MethodInfo) Checks if given method is an async method. Declaration public static bool IsAsync(this MethodInfo method) Parameters Type Name Description MethodInfo method A method to check Returns Type Description System.Boolean | Improve this Doc View Source IsTaskOrTaskOfT(Type) Declaration public static bool IsTaskOrTaskOfT(this Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source RunSync(Func<Task>) Runs a async method synchronously. Declaration public static void RunSync(Func<Task> action) Parameters Type Name Description Func < Task > action An async action | Improve this Doc View Source RunSync<TResult>(Func<Task<TResult>>) Runs a async method synchronously. Declaration public static TResult RunSync<TResult>(Func<Task<TResult>> func) Parameters Type Name Description Func < Task <TResult>> func A function that returns a result Returns Type Description TResult Result of the async operation Type Parameters Name Description TResult Result type | Improve this Doc View Source Schedule(String, Func<Task>, Nullable<Action<Exception>>) Schedules a task on a different thread (fire and forget) Declaration public static void Schedule(string name, Func<Task> task, Action<Exception>? exceptionHandler = null) Parameters Type Name Description System.String name The name of the task. Func < Task > task The task to run. System.Nullable < Action < Exception >> exceptionHandler The optional exception handler. | Improve this Doc View Source UnwrapTask(Type) Returns void if given type is Task. Return T, if given type is Task{T}. Returns given type otherwise. Declaration public static Type UnwrapTask(Type type) Parameters Type Name Description Type type Returns Type Description Type"
  },
  "api/OpenMod.Core.Helpers.CommandHelper.html": {
    "href": "api/OpenMod.Core.Helpers.CommandHelper.html",
    "title": "Class CommandHelper | OpenMod Docs",
    "keywords": "Class CommandHelper Inheritance System.Object CommandHelper Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public static class CommandHelper : object Methods | Improve this Doc View Source GetServiceOrCommandParameter(IEnumerable<Type>, IServiceProvider, ICommandParameters) Declaration public static Task<object[]> GetServiceOrCommandParameter(IEnumerable<Type> types, IServiceProvider serviceProvider, ICommandParameters commandParameters) Parameters Type Name Description IEnumerable < Type > types IServiceProvider serviceProvider ICommandParameters commandParameters Returns Type Description Task < System.Object []>"
  },
  "api/OpenMod.Core.Helpers.DisposeAction.html": {
    "href": "api/OpenMod.Core.Helpers.DisposeAction.html",
    "title": "Class DisposeAction | OpenMod Docs",
    "keywords": "Class DisposeAction Inheritance System.Object DisposeAction Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public sealed class DisposeAction : IDisposable Constructors | Improve this Doc View Source DisposeAction(Action) Declaration public DisposeAction(Action disposeAction) Parameters Type Name Description Action disposeAction Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Helpers.DisposeHelper.html": {
    "href": "api/OpenMod.Core.Helpers.DisposeHelper.html",
    "title": "Class DisposeHelper | OpenMod Docs",
    "keywords": "Class DisposeHelper Inheritance System.Object DisposeHelper Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public static class DisposeHelper : object Methods | Improve this Doc View Source DisposeAll(IEnumerable<Object>) Declaration public static void DisposeAll(this IEnumerable<object> objects) Parameters Type Name Description IEnumerable < System.Object > objects | Improve this Doc View Source DisposeAllAsync(IEnumerable<Object>) Declaration public static Task DisposeAllAsync(this IEnumerable<object> objects) Parameters Type Name Description IEnumerable < System.Object > objects Returns Type Description Task | Improve this Doc View Source DisposeSyncOrAsync(Object) Declaration public static Task DisposeSyncOrAsync(this object o) Parameters Type Name Description System.Object o Returns Type Description Task"
  },
  "api/OpenMod.Core.Helpers.html": {
    "href": "api/OpenMod.Core.Helpers.html",
    "title": "Namespace OpenMod.Core.Helpers | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Helpers Classes ArgumentsParser AssemblyEqualityComparer AssemblyHelper AsyncDisposeAction AsyncHelper CommandHelper DisposeAction DisposeHelper NullDisposable ProcessHelper ServiceProviderTypeDescriptor StringHelper TimeSpanHelper VersionHelper"
  },
  "api/OpenMod.Core.Helpers.NullDisposable.html": {
    "href": "api/OpenMod.Core.Helpers.NullDisposable.html",
    "title": "Class NullDisposable | OpenMod Docs",
    "keywords": "Class NullDisposable Inheritance System.Object NullDisposable Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public class NullDisposable : IDisposable Properties | Improve this Doc View Source Instance Declaration public static NullDisposable Instance { get; } Property Value Type Description NullDisposable Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Helpers.ProcessHelper.html": {
    "href": "api/OpenMod.Core.Helpers.ProcessHelper.html",
    "title": "Class ProcessHelper | OpenMod Docs",
    "keywords": "Class ProcessHelper Inheritance System.Object ProcessHelper Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public static class ProcessHelper : object Methods | Improve this Doc View Source WaitForExitAsync(Process, CancellationToken) Declaration public static Task WaitForExitAsync(this Process process, CancellationToken cancellationToken = null) Parameters Type Name Description Process process CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/OpenMod.Core.Helpers.ServiceProviderTypeDescriptor.html": {
    "href": "api/OpenMod.Core.Helpers.ServiceProviderTypeDescriptor.html",
    "title": "Class ServiceProviderTypeDescriptor | OpenMod Docs",
    "keywords": "Class ServiceProviderTypeDescriptor Inheritance System.Object ServiceProviderTypeDescriptor Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public class ServiceProviderTypeDescriptor : ITypeDescriptorContext Constructors | Improve this Doc View Source ServiceProviderTypeDescriptor(IServiceProvider) Declaration public ServiceProviderTypeDescriptor(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Properties | Improve this Doc View Source Container Declaration public IContainer? Container { get; set; } Property Value Type Description System.Nullable < IContainer > | Improve this Doc View Source Instance Declaration public object? Instance { get; set; } Property Value Type Description System.Nullable < System.Object > | Improve this Doc View Source PropertyDescriptor Declaration public PropertyDescriptor? PropertyDescriptor { get; } Property Value Type Description System.Nullable < PropertyDescriptor > | Improve this Doc View Source ServiceProvider Declaration public IServiceProvider ServiceProvider { get; } Property Value Type Description IServiceProvider Methods | Improve this Doc View Source GetService(Type) Declaration public object GetService(Type serviceType) Parameters Type Name Description Type serviceType Returns Type Description System.Object | Improve this Doc View Source OnComponentChanged() Declaration public void OnComponentChanged() | Improve this Doc View Source OnComponentChanging() Declaration public bool OnComponentChanging() Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Helpers.StringHelper.html": {
    "href": "api/OpenMod.Core.Helpers.StringHelper.html",
    "title": "Class StringHelper | OpenMod Docs",
    "keywords": "Class StringHelper Inheritance System.Object StringHelper Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public static class StringHelper : object Methods | Improve this Doc View Source AllIndexesOf(String, String, StringComparison) Declaration public static IEnumerable<int> AllIndexesOf(this string str, string value, StringComparison stringComparison = null) Parameters Type Name Description System.String str System.String value StringComparison stringComparison Returns Type Description IEnumerable < System.Int32 > | Improve this Doc View Source LevenshteinDistance(String, String) Declaration public static int LevenshteinDistance(string a, string b) Parameters Type Name Description System.String a System.String b Returns Type Description System.Int32"
  },
  "api/OpenMod.Core.Helpers.TimeSpanHelper.html": {
    "href": "api/OpenMod.Core.Helpers.TimeSpanHelper.html",
    "title": "Class TimeSpanHelper | OpenMod Docs",
    "keywords": "Class TimeSpanHelper Inheritance System.Object TimeSpanHelper Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public static class TimeSpanHelper : object Methods | Improve this Doc View Source Parse(String) Declaration public static TimeSpan Parse(string unparsed) Parameters Type Name Description System.String unparsed Returns Type Description TimeSpan"
  },
  "api/OpenMod.Core.Helpers.VersionHelper.html": {
    "href": "api/OpenMod.Core.Helpers.VersionHelper.html",
    "title": "Class VersionHelper | OpenMod Docs",
    "keywords": "Class VersionHelper Inheritance System.Object VersionHelper Namespace : OpenMod.Core.Helpers Assembly : OpenMod.Core.dll Syntax public static class VersionHelper : object Methods | Improve this Doc View Source ParseAssemblyVersion(Assembly) Declaration public static SemVersion ParseAssemblyVersion(Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description SemVersion"
  },
  "api/OpenMod.Core.html": {
    "href": "api/OpenMod.Core.html",
    "title": "Namespace OpenMod.Core | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core Classes ServiceConfigurator"
  },
  "api/OpenMod.Core.Ioc.ActivatorUtilitiesEx.html": {
    "href": "api/OpenMod.Core.Ioc.ActivatorUtilitiesEx.html",
    "title": "Class ActivatorUtilitiesEx | OpenMod Docs",
    "keywords": "Class ActivatorUtilitiesEx Inheritance System.Object ActivatorUtilitiesEx Namespace : OpenMod.Core.Ioc Assembly : OpenMod.Core.dll Syntax public static class ActivatorUtilitiesEx : object Methods | Improve this Doc View Source CreateInstance(ILifetimeScope, Type, Object[]) Instantiate a type with constructor arguments provided directly and/or from an . Ex: Instance will be owned by lifetime and auto-dispose when the lifetime gets disposed. Declaration public static object CreateInstance(ILifetimeScope lifetimeScope, Type instanceType, params object[] parameters) Parameters Type Name Description ILifetimeScope lifetimeScope The lifetime scope used to resolve dependencies Type instanceType The type to activate System.Object [] parameters Constructor arguments not provided by the lifetimeScope . Returns Type Description System.Object An activated object of type instanceType | Improve this Doc View Source CreateInstance<T>(ILifetimeScope, Object[]) Instantiate a type with constructor arguments provided directly and/or from an . Ex: Instance will be owned by lifetime and auto-dispose when the lifetime gets disposed. Declaration public static T CreateInstance<T>(ILifetimeScope lifetimeScope, params object[] parameters) Parameters Type Name Description ILifetimeScope lifetimeScope The lifetime scope used to resolve dependencies System.Object [] parameters Constructor arguments not provided by the lifetimeScope . Returns Type Description T An activated object of type T Type Parameters Name Description T The type to activate"
  },
  "api/OpenMod.Core.Ioc.DontAutoRegister.html": {
    "href": "api/OpenMod.Core.Ioc.DontAutoRegister.html",
    "title": "Class DontAutoRegister | OpenMod Docs",
    "keywords": "Class DontAutoRegister Inheritance System.Object DontAutoRegister Namespace : OpenMod.Core.Ioc Assembly : OpenMod.Core.dll Syntax public sealed class DontAutoRegister : Attribute Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Ioc.Extensions.ContainerBuilderExtensions.html": {
    "href": "api/OpenMod.Core.Ioc.Extensions.ContainerBuilderExtensions.html",
    "title": "Class ContainerBuilderExtensions | OpenMod Docs",
    "keywords": "Class ContainerBuilderExtensions Inheritance System.Object ContainerBuilderExtensions Namespace : OpenMod.Core.Ioc.Extensions Assembly : OpenMod.Core.dll Syntax public static class ContainerBuilderExtensions : object Methods | Improve this Doc View Source PopulateServices(ContainerBuilder, ServiceCollection, Nullable<Func<ServiceDescriptor, Boolean>>, Boolean, Boolean) Declaration public static ContainerBuilder PopulateServices(this ContainerBuilder containerBuilder, ServiceCollection serviceCollection, Func<ServiceDescriptor, bool>? serviceFilter = null, bool replaceServices = false, bool autowire = true) Parameters Type Name Description ContainerBuilder containerBuilder ServiceCollection serviceCollection System.Nullable < Func < ServiceDescriptor , System.Boolean >> serviceFilter System.Boolean replaceServices System.Boolean autowire Returns Type Description ContainerBuilder | Improve this Doc View Source WithLifetime<TActivatorData, TRegistrationStyle>(IRegistrationBuilder<Object, TActivatorData, TRegistrationStyle>, ServiceLifetime) Declaration public static IRegistrationBuilder<object, TActivatorData, TRegistrationStyle> WithLifetime<TActivatorData, TRegistrationStyle>(this IRegistrationBuilder<object, TActivatorData, TRegistrationStyle> registrationBuilder, ServiceLifetime serviceLifetime) Parameters Type Name Description IRegistrationBuilder < System.Object , TActivatorData, TRegistrationStyle> registrationBuilder ServiceLifetime serviceLifetime Returns Type Description IRegistrationBuilder < System.Object , TActivatorData, TRegistrationStyle> Type Parameters Name Description TActivatorData TRegistrationStyle"
  },
  "api/OpenMod.Core.Ioc.Extensions.html": {
    "href": "api/OpenMod.Core.Ioc.Extensions.html",
    "title": "Namespace OpenMod.Core.Ioc.Extensions | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Ioc.Extensions Classes ContainerBuilderExtensions"
  },
  "api/OpenMod.Core.Ioc.html": {
    "href": "api/OpenMod.Core.Ioc.html",
    "title": "Namespace OpenMod.Core.Ioc | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Ioc Classes ActivatorUtilitiesEx DontAutoRegister LifetimeScopeExtensions ServiceRegistration ServiceRegistrationHelper"
  },
  "api/OpenMod.Core.Ioc.LifetimeScopeExtensions.html": {
    "href": "api/OpenMod.Core.Ioc.LifetimeScopeExtensions.html",
    "title": "Class LifetimeScopeExtensions | OpenMod Docs",
    "keywords": "Class LifetimeScopeExtensions Inheritance System.Object LifetimeScopeExtensions Namespace : OpenMod.Core.Ioc Assembly : OpenMod.Core.dll Syntax public static class LifetimeScopeExtensions : object Methods | Improve this Doc View Source BeginLifetimeScopeEx(ILifetimeScope) Begin a new nested scope. Component instances created via the new scope will be disposed along with it. Ex: Will dispose if parent scope gets disposed. Declaration public static ILifetimeScope BeginLifetimeScopeEx(this ILifetimeScope this) Parameters Type Name Description ILifetimeScope this Returns Type Description ILifetimeScope A new lifetime scope. | Improve this Doc View Source BeginLifetimeScopeEx(ILifetimeScope, Action<ContainerBuilder>) Begin a new nested scope, with additional components available to it. Component instances created via the new scope will be disposed along with it. Ex: Will dispose if parent scope gets disposed. Declaration public static ILifetimeScope BeginLifetimeScopeEx(this ILifetimeScope this, Action<ContainerBuilder> configurationAction) Parameters Type Name Description ILifetimeScope this The lifetime used to create the sub-scope Action < ContainerBuilder > configurationAction Action on a that adds component registrations visible only in the new scope. Returns Type Description ILifetimeScope A new lifetime scope. | Improve this Doc View Source BeginLifetimeScopeEx(ILifetimeScope, Object) Begin a new sub-scope. Instances created via the sub-scope will be disposed along with it. Ex: Will dispose if parent scope gets disposed. Declaration public static ILifetimeScope BeginLifetimeScopeEx(this ILifetimeScope this, object tag) Parameters Type Name Description ILifetimeScope this The lifetime used to create the sub-scope System.Object tag The tag applied to the . Returns Type Description ILifetimeScope A new lifetime scope. | Improve this Doc View Source BeginLifetimeScopeEx(ILifetimeScope, Object, Action<ContainerBuilder>) Begin a new nested scope, with additional components available to it. Component instances created via the new scope will be disposed along with it. Ex: Will dispose if parent scope gets disposed. Declaration public static ILifetimeScope BeginLifetimeScopeEx(this ILifetimeScope this, object tag, Action<ContainerBuilder> configurationAction) Parameters Type Name Description ILifetimeScope this The lifetime used to create the sub-scope System.Object tag The tag applied to the . Action < ContainerBuilder > configurationAction Action on a that adds component registrations visible only in the new scope. Returns Type Description ILifetimeScope A new lifetime scope."
  },
  "api/OpenMod.Core.Ioc.ServiceRegistration.html": {
    "href": "api/OpenMod.Core.Ioc.ServiceRegistration.html",
    "title": "Class ServiceRegistration | OpenMod Docs",
    "keywords": "Class ServiceRegistration Inheritance System.Object ServiceRegistration Namespace : OpenMod.Core.Ioc Assembly : OpenMod.Core.dll Syntax public class ServiceRegistration : object Properties | Improve this Doc View Source Lifetime Declaration public ServiceLifetime Lifetime { get; set; } Property Value Type Description ServiceLifetime | Improve this Doc View Source Priority Declaration public Priority Priority { get; set; } Property Value Type Description Priority | Improve this Doc View Source ServiceImplementationType Declaration public Type ServiceImplementationType { get; set; } Property Value Type Description Type | Improve this Doc View Source ServiceTypes Declaration public Type[] ServiceTypes { get; set; } Property Value Type Description Type [] Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Ioc.ServiceRegistrationHelper.html": {
    "href": "api/OpenMod.Core.Ioc.ServiceRegistrationHelper.html",
    "title": "Class ServiceRegistrationHelper | OpenMod Docs",
    "keywords": "Class ServiceRegistrationHelper Inheritance System.Object ServiceRegistrationHelper Namespace : OpenMod.Core.Ioc Assembly : OpenMod.Core.dll Syntax public static class ServiceRegistrationHelper : object Methods | Improve this Doc View Source FindFromAssembly<T>(Assembly, Nullable<ILogger>) Declaration public static IEnumerable<ServiceRegistration> FindFromAssembly<T>(Assembly assembly, ILogger? logger = null) where T : ServiceImplementationAttribute Parameters Type Name Description Assembly assembly System.Nullable < ILogger > logger Returns Type Description IEnumerable < ServiceRegistration > Type Parameters Name Description T | Improve this Doc View Source FindServicesFromTypes<T>(IEnumerable<Type>, Nullable<ILogger>, Nullable<String>) Declaration public static IEnumerable<ServiceRegistration> FindServicesFromTypes<T>(this IEnumerable<Type> types, ILogger? logger = null, string? assemblyName = null) where T : ServiceImplementationAttribute Parameters Type Name Description IEnumerable < Type > types System.Nullable < ILogger > logger System.Nullable < System.String > assemblyName Returns Type Description IEnumerable < ServiceRegistration > Type Parameters Name Description T"
  },
  "api/OpenMod.Core.Jobs.html": {
    "href": "api/OpenMod.Core.Jobs.html",
    "title": "Namespace OpenMod.Core.Jobs | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Jobs Classes JobExecutorOptions JobScheduler OpenModCommandTaskActor OpenModCommandTaskExecutor ScheduledJobsFile SystemCommandTaskExecutor"
  },
  "api/OpenMod.Core.Jobs.JobExecutorOptions.html": {
    "href": "api/OpenMod.Core.Jobs.JobExecutorOptions.html",
    "title": "Class JobExecutorOptions | OpenMod Docs",
    "keywords": "Class JobExecutorOptions Inheritance System.Object JobExecutorOptions Namespace : OpenMod.Core.Jobs Assembly : OpenMod.Core.dll Syntax public class JobExecutorOptions : object Constructors | Improve this Doc View Source JobExecutorOptions() Declaration public JobExecutorOptions() Properties | Improve this Doc View Source JobExecutorTypes Declaration public IReadOnlyCollection<Type> JobExecutorTypes { get; } Property Value Type Description IReadOnlyCollection < Type > Methods | Improve this Doc View Source AddJobExecutor(Type) Declaration public void AddJobExecutor(Type type) Parameters Type Name Description Type type | Improve this Doc View Source AddJobExecutor<TProvider>() Declaration public void AddJobExecutor<TProvider>() where TProvider : ITaskExecutor Type Parameters Name Description TProvider | Improve this Doc View Source RemoveJobExecutor(Type) Declaration public bool RemoveJobExecutor(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source RemoveJobExecutor<TProvider>() Declaration public void RemoveJobExecutor<TProvider>() where TProvider : ITaskExecutor Type Parameters Name Description TProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Jobs.JobScheduler.html": {
    "href": "api/OpenMod.Core.Jobs.JobScheduler.html",
    "title": "Class JobScheduler | OpenMod Docs",
    "keywords": "Class JobScheduler Inheritance System.Object JobScheduler Implements IJobScheduler IDisposable Namespace : OpenMod.Core.Jobs Assembly : OpenMod.Core.dll Syntax public class JobScheduler : object, IJobScheduler, IDisposable Constructors | Improve this Doc View Source JobScheduler(IRuntime, ILogger<JobScheduler>, IDataStoreFactory, IOptions<JobExecutorOptions>) Declaration public JobScheduler(IRuntime runtime, ILogger<JobScheduler> logger, IDataStoreFactory dataStoreFactory, IOptions<JobExecutorOptions> options) Parameters Type Name Description IRuntime runtime ILogger < JobScheduler > logger IDataStoreFactory dataStoreFactory IOptions < JobExecutorOptions > options Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source FindJobAsync(String) Declaration public Task<ScheduledJob> FindJobAsync(string name) Parameters Type Name Description System.String name Returns Type Description Task < ScheduledJob > | Improve this Doc View Source GetScheduledJobsAsync(Boolean) Declaration public Task<ICollection<ScheduledJob>> GetScheduledJobsAsync(bool includeDisabled) Parameters Type Name Description System.Boolean includeDisabled Returns Type Description Task < ICollection < ScheduledJob >> | Improve this Doc View Source RemoveJobAsync(ScheduledJob) Declaration public Task<bool> RemoveJobAsync(ScheduledJob job) Parameters Type Name Description ScheduledJob job Returns Type Description Task < System.Boolean > | Improve this Doc View Source RemoveJobAsync(String) Declaration public Task<bool> RemoveJobAsync(string name) Parameters Type Name Description System.String name Returns Type Description Task < System.Boolean > | Improve this Doc View Source ScheduleJobAsync(JobCreationParameters) Declaration public Task<ScheduledJob> ScheduleJobAsync(JobCreationParameters params) Parameters Type Name Description JobCreationParameters params Returns Type Description Task < ScheduledJob > | Improve this Doc View Source StartAsync() Declaration public Task StartAsync() Returns Type Description Task Implements IJobScheduler IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Jobs.OpenModCommandTaskActor.html": {
    "href": "api/OpenMod.Core.Jobs.OpenModCommandTaskActor.html",
    "title": "Class OpenModCommandTaskActor | OpenMod Docs",
    "keywords": "Class OpenModCommandTaskActor Inheritance System.Object OpenModCommandTaskActor Implements ICommandActor IPermissionActor Namespace : OpenMod.Core.Jobs Assembly : OpenMod.Core.dll Syntax public class OpenModCommandTaskActor : object, ICommandActor, IPermissionActor Constructors | Improve this Doc View Source OpenModCommandTaskActor(ILogger) Declaration public OpenModCommandTaskActor(ILogger logger) Parameters Type Name Description ILogger logger Properties | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source FullActorName Declaration public string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description System.String Methods | Improve this Doc View Source PrintMessageAsync(String) Declaration public Task PrintMessageAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, Color) Declaration public Task PrintMessageAsync(string message, Color color) Parameters Type Name Description System.String message Color color Returns Type Description Task Implements ICommandActor IPermissionActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Jobs.OpenModCommandTaskExecutor.html": {
    "href": "api/OpenMod.Core.Jobs.OpenModCommandTaskExecutor.html",
    "title": "Class OpenModCommandTaskExecutor | OpenMod Docs",
    "keywords": "Class OpenModCommandTaskExecutor Inheritance System.Object OpenModCommandTaskExecutor Implements ITaskExecutor Namespace : OpenMod.Core.Jobs Assembly : OpenMod.Core.dll Syntax public class OpenModCommandTaskExecutor : object, ITaskExecutor Constructors | Improve this Doc View Source OpenModCommandTaskExecutor(ICommandExecutor, ILogger<OpenModCommandTaskExecutor>) Declaration public OpenModCommandTaskExecutor(ICommandExecutor commandExecutor, ILogger<OpenModCommandTaskExecutor> logger) Parameters Type Name Description ICommandExecutor commandExecutor ILogger < OpenModCommandTaskExecutor > logger Methods | Improve this Doc View Source ExecuteAsync(JobTask) Declaration public Task ExecuteAsync(JobTask task) Parameters Type Name Description JobTask task Returns Type Description Task | Improve this Doc View Source SupportsType(String) Declaration public bool SupportsType(string taskType) Parameters Type Name Description System.String taskType Returns Type Description System.Boolean Implements ITaskExecutor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Jobs.ScheduledJobsFile.html": {
    "href": "api/OpenMod.Core.Jobs.ScheduledJobsFile.html",
    "title": "Class ScheduledJobsFile | OpenMod Docs",
    "keywords": "Class ScheduledJobsFile Inheritance System.Object ScheduledJobsFile Namespace : OpenMod.Core.Jobs Assembly : OpenMod.Core.dll Syntax public class ScheduledJobsFile : object Properties | Improve this Doc View Source Jobs Declaration public List<ScheduledJob>? Jobs { get; set; } Property Value Type Description System.Nullable < List < ScheduledJob >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Jobs.SystemCommandTaskExecutor.html": {
    "href": "api/OpenMod.Core.Jobs.SystemCommandTaskExecutor.html",
    "title": "Class SystemCommandTaskExecutor | OpenMod Docs",
    "keywords": "Class SystemCommandTaskExecutor Inheritance System.Object SystemCommandTaskExecutor Implements ITaskExecutor Namespace : OpenMod.Core.Jobs Assembly : OpenMod.Core.dll Syntax public class SystemCommandTaskExecutor : object, ITaskExecutor Constructors | Improve this Doc View Source SystemCommandTaskExecutor(IRuntime, ILogger<SystemCommandTaskExecutor>) Declaration public SystemCommandTaskExecutor(IRuntime runtime, ILogger<SystemCommandTaskExecutor> logger) Parameters Type Name Description IRuntime runtime ILogger < SystemCommandTaskExecutor > logger Methods | Improve this Doc View Source ExecuteAsync(JobTask) Declaration public Task ExecuteAsync(JobTask task) Parameters Type Name Description JobTask task Returns Type Description Task | Improve this Doc View Source SupportsType(String) Declaration public bool SupportsType(string taskType) Parameters Type Name Description System.String taskType Returns Type Description System.Boolean Implements ITaskExecutor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Localization.ConfigurationBasedStringLocalizer.html": {
    "href": "api/OpenMod.Core.Localization.ConfigurationBasedStringLocalizer.html",
    "title": "Class ConfigurationBasedStringLocalizer | OpenMod Docs",
    "keywords": "Class ConfigurationBasedStringLocalizer Inheritance System.Object ConfigurationBasedStringLocalizer Implements IDisposable Namespace : OpenMod.Core.Localization Assembly : OpenMod.Core.dll Syntax public class ConfigurationBasedStringLocalizer : IStringLocalizer, IDisposable Constructors | Improve this Doc View Source ConfigurationBasedStringLocalizer(IConfiguration, IOptions<SmartFormatOptions>) Declaration public ConfigurationBasedStringLocalizer(IConfiguration configuration, IOptions<SmartFormatOptions> options) Parameters Type Name Description IConfiguration configuration IOptions < SmartFormatOptions > options Properties | Improve this Doc View Source Item[String] Declaration public LocalizedString this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description LocalizedString | Improve this Doc View Source Item[String, Object[]] Declaration public LocalizedString this[string name, params object[] arguments] { get; } Parameters Type Name Description System.String name System.Object [] arguments Property Value Type Description LocalizedString Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetAllStrings(Boolean) Declaration public IEnumerable<LocalizedString> GetAllStrings(bool includeParentCultures) Parameters Type Name Description System.Boolean includeParentCultures Returns Type Description IEnumerable < LocalizedString > | Improve this Doc View Source WithCulture(CultureInfo) Declaration public IStringLocalizer WithCulture(CultureInfo culture) Parameters Type Name Description CultureInfo culture Returns Type Description IStringLocalizer Implements IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Localization.ConfigurationBasedStringLocalizerFactory.html": {
    "href": "api/OpenMod.Core.Localization.ConfigurationBasedStringLocalizerFactory.html",
    "title": "Class ConfigurationBasedStringLocalizerFactory | OpenMod Docs",
    "keywords": "Class ConfigurationBasedStringLocalizerFactory Inheritance System.Object ConfigurationBasedStringLocalizerFactory Namespace : OpenMod.Core.Localization Assembly : OpenMod.Core.dll Syntax public class ConfigurationBasedStringLocalizerFactory : IStringLocalizerFactory Constructors | Improve this Doc View Source ConfigurationBasedStringLocalizerFactory(ILogger<ConfigurationBasedStringLocalizer>, IOptions<SmartFormatOptions>) Declaration public ConfigurationBasedStringLocalizerFactory(ILogger<ConfigurationBasedStringLocalizer> logger, IOptions<SmartFormatOptions> options) Parameters Type Name Description ILogger < ConfigurationBasedStringLocalizer > logger IOptions < SmartFormatOptions > options Methods | Improve this Doc View Source Create(String, String) Declaration public IStringLocalizer Create(string baseName, string location) Parameters Type Name Description System.String baseName System.String location Returns Type Description IStringLocalizer | Improve this Doc View Source Create(Type) Declaration public IStringLocalizer Create(Type resourceSource) Parameters Type Name Description Type resourceSource Returns Type Description IStringLocalizer Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Localization.html": {
    "href": "api/OpenMod.Core.Localization.html",
    "title": "Namespace OpenMod.Core.Localization | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Localization Classes ConfigurationBasedStringLocalizer ConfigurationBasedStringLocalizerFactory NullStringLocalizer OpenModStringLocalizer ProxyStringLocalizer SmartFormatOptions"
  },
  "api/OpenMod.Core.Localization.NullStringLocalizer.html": {
    "href": "api/OpenMod.Core.Localization.NullStringLocalizer.html",
    "title": "Class NullStringLocalizer | OpenMod Docs",
    "keywords": "Class NullStringLocalizer Inheritance System.Object NullStringLocalizer Namespace : OpenMod.Core.Localization Assembly : OpenMod.Core.dll Syntax public class NullStringLocalizer : IStringLocalizer Properties | Improve this Doc View Source Instance Declaration public static NullStringLocalizer Instance { get; } Property Value Type Description NullStringLocalizer | Improve this Doc View Source Item[String] Declaration public LocalizedString this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description LocalizedString | Improve this Doc View Source Item[String, Object[]] Declaration public LocalizedString this[string name, params object[] arguments] { get; } Parameters Type Name Description System.String name System.Object [] arguments Property Value Type Description LocalizedString Methods | Improve this Doc View Source GetAllStrings(Boolean) Declaration public IEnumerable<LocalizedString> GetAllStrings(bool includeParentCultures) Parameters Type Name Description System.Boolean includeParentCultures Returns Type Description IEnumerable < LocalizedString > | Improve this Doc View Source WithCulture(CultureInfo) Declaration public IStringLocalizer WithCulture(CultureInfo culture) Parameters Type Name Description CultureInfo culture Returns Type Description IStringLocalizer Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Localization.OpenModStringLocalizer.html": {
    "href": "api/OpenMod.Core.Localization.OpenModStringLocalizer.html",
    "title": "Class OpenModStringLocalizer | OpenMod Docs",
    "keywords": "Class OpenModStringLocalizer Inheritance System.Object ProxyStringLocalizer OpenModStringLocalizer Implements IDisposable IOpenModStringLocalizer IStringLocalizer Inherited Members ProxyStringLocalizer.GetAllStrings(Boolean) ProxyStringLocalizer.WithCulture(CultureInfo) ProxyStringLocalizer.Item[String] ProxyStringLocalizer.Item[String, Object[]] ProxyStringLocalizer.Dispose() Namespace : OpenMod.Core.Localization Assembly : OpenMod.Core.dll Syntax public class OpenModStringLocalizer : ProxyStringLocalizer, IDisposable, IOpenModStringLocalizer, IStringLocalizer Constructors | Improve this Doc View Source OpenModStringLocalizer(IStringLocalizerFactory, IRuntime) Declaration public OpenModStringLocalizer(IStringLocalizerFactory stringLocalizerFactory, IRuntime runtime) Parameters Type Name Description IStringLocalizerFactory stringLocalizerFactory IRuntime runtime Implements IDisposable IOpenModStringLocalizer IStringLocalizer Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Localization.ProxyStringLocalizer.html": {
    "href": "api/OpenMod.Core.Localization.ProxyStringLocalizer.html",
    "title": "Class ProxyStringLocalizer | OpenMod Docs",
    "keywords": "Class ProxyStringLocalizer Inheritance System.Object ProxyStringLocalizer OpenModStringLocalizer Implements IDisposable Namespace : OpenMod.Core.Localization Assembly : OpenMod.Core.dll Syntax public class ProxyStringLocalizer : IStringLocalizer, IDisposable Constructors | Improve this Doc View Source ProxyStringLocalizer(IStringLocalizer) Declaration public ProxyStringLocalizer(IStringLocalizer stringLocalizer) Parameters Type Name Description IStringLocalizer stringLocalizer Properties | Improve this Doc View Source Item[String] Declaration public LocalizedString this[string name] { get; } Parameters Type Name Description System.String name Property Value Type Description LocalizedString | Improve this Doc View Source Item[String, Object[]] Declaration public LocalizedString this[string name, params object[] arguments] { get; } Parameters Type Name Description System.String name System.Object [] arguments Property Value Type Description LocalizedString Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetAllStrings(Boolean) Declaration public IEnumerable<LocalizedString> GetAllStrings(bool includeParentCultures) Parameters Type Name Description System.Boolean includeParentCultures Returns Type Description IEnumerable < LocalizedString > | Improve this Doc View Source WithCulture(CultureInfo) Declaration public IStringLocalizer WithCulture(CultureInfo culture) Parameters Type Name Description CultureInfo culture Returns Type Description IStringLocalizer Implements IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Localization.SmartFormatOptions.html": {
    "href": "api/OpenMod.Core.Localization.SmartFormatOptions.html",
    "title": "Class SmartFormatOptions | OpenMod Docs",
    "keywords": "Class SmartFormatOptions Inheritance System.Object SmartFormatOptions Namespace : OpenMod.Core.Localization Assembly : OpenMod.Core.dll Syntax public class SmartFormatOptions : object Constructors | Improve this Doc View Source SmartFormatOptions() Declaration public SmartFormatOptions() Methods | Improve this Doc View Source GetSmartFormatter() Declaration public SmartFormatter GetSmartFormatter() Returns Type Description SmartFormatter | Improve this Doc View Source SetLocalizationProvider(Nullable<ILocalizationProvider>) Declaration public void SetLocalizationProvider(ILocalizationProvider? localizationProvider) Parameters Type Name Description System.Nullable < ILocalizationProvider > localizationProvider | Improve this Doc View Source TryAddFormatter<T>() Adds extension to the formatters list Declaration public bool TryAddFormatter<T>() where T : class, IFormatter, new() Returns Type Description System.Boolean true , if the extension was added. Type Parameters Name Description T | Improve this Doc View Source TryAddSource<T>() Adds extension to the source list Declaration public bool TryAddSource<T>() where T : class, ISource, new() Returns Type Description System.Boolean true , if the extension was added. Type Parameters Name Description T | Improve this Doc View Source TryRemoveFormatter<T>() Removes extension from the formatters list Declaration public bool TryRemoveFormatter<T>() where T : class, IFormatter Returns Type Description System.Boolean true , if the extension was removed. Type Parameters Name Description T | Improve this Doc View Source TryRemoveSource<T>() Removes extension from the source list Declaration public bool TryRemoveSource<T>() where T : class, ISource Returns Type Description System.Boolean true , if the extension was removed. Type Parameters Name Description T Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Patching.HarmonyConditionalPatchAttribute.html": {
    "href": "api/OpenMod.Core.Patching.HarmonyConditionalPatchAttribute.html",
    "title": "Class HarmonyConditionalPatchAttribute | OpenMod Docs",
    "keywords": "Class HarmonyConditionalPatchAttribute Inheritance System.Object HarmonyConditionalPatchAttribute Namespace : OpenMod.Core.Patching Assembly : OpenMod.Core.dll Syntax public class HarmonyConditionalPatchAttribute : Attribute Constructors | Improve this Doc View Source HarmonyConditionalPatchAttribute(String) Declaration public HarmonyConditionalPatchAttribute(string condition) Parameters Type Name Description System.String condition Properties | Improve this Doc View Source Condition Declaration public string Condition { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Patching.HarmonyExtensions.html": {
    "href": "api/OpenMod.Core.Patching.HarmonyExtensions.html",
    "title": "Class HarmonyExtensions | OpenMod Docs",
    "keywords": "Class HarmonyExtensions Inheritance System.Object HarmonyExtensions Namespace : OpenMod.Core.Patching Assembly : OpenMod.Core.dll Syntax public static class HarmonyExtensions : object Methods | Improve this Doc View Source NopPatch(Harmony, MethodBase) Applies a no-operation patch. Declaration public static void NopPatch(this Harmony harmony, MethodBase method) Parameters Type Name Description Harmony harmony MethodBase method | Improve this Doc View Source PatchAllConditional(Harmony, Assembly, String[]) Only applies patches that satisfy any of the given conditions. Declaration public static void PatchAllConditional(this Harmony harmony, Assembly asm, params string[] conditions) Parameters Type Name Description Harmony harmony Assembly asm System.String [] conditions"
  },
  "api/OpenMod.Core.Patching.html": {
    "href": "api/OpenMod.Core.Patching.html",
    "title": "Namespace OpenMod.Core.Patching | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Patching Classes HarmonyConditionalPatchAttribute HarmonyExtensions"
  },
  "api/OpenMod.Core.Permissions.AlwaysDenyPermissionCheckProvider.html": {
    "href": "api/OpenMod.Core.Permissions.AlwaysDenyPermissionCheckProvider.html",
    "title": "Class AlwaysDenyPermissionCheckProvider | OpenMod Docs",
    "keywords": "Class AlwaysDenyPermissionCheckProvider Inheritance System.Object AlwaysDenyPermissionCheckProvider Implements IPermissionCheckProvider Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class AlwaysDenyPermissionCheckProvider : object, IPermissionCheckProvider Constructors | Improve this Doc View Source AlwaysDenyPermissionCheckProvider(Func<IPermissionActor, Boolean>) Declaration public AlwaysDenyPermissionCheckProvider(Func<IPermissionActor, bool> actorPredicate) Parameters Type Name Description Func < IPermissionActor , System.Boolean > actorPredicate Methods | Improve this Doc View Source CheckPermissionAsync(IPermissionActor, String) Declaration public Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < PermissionGrantResult > | Improve this Doc View Source SupportsActor(IPermissionActor) Declaration public bool SupportsActor(IPermissionActor actor) Parameters Type Name Description IPermissionActor actor Returns Type Description System.Boolean Implements IPermissionCheckProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.AlwaysGrantPermissionCheckProvider.html": {
    "href": "api/OpenMod.Core.Permissions.AlwaysGrantPermissionCheckProvider.html",
    "title": "Class AlwaysGrantPermissionCheckProvider | OpenMod Docs",
    "keywords": "Class AlwaysGrantPermissionCheckProvider Inheritance System.Object AlwaysGrantPermissionCheckProvider ConsolePermissionProvider Implements IPermissionCheckProvider Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class AlwaysGrantPermissionCheckProvider : object, IPermissionCheckProvider Constructors | Improve this Doc View Source AlwaysGrantPermissionCheckProvider(Func<IPermissionActor, Boolean>) Declaration public AlwaysGrantPermissionCheckProvider(Func<IPermissionActor, bool> actorPredicate) Parameters Type Name Description Func < IPermissionActor , System.Boolean > actorPredicate Methods | Improve this Doc View Source CheckPermissionAsync(IPermissionActor, String) Declaration public Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < PermissionGrantResult > | Improve this Doc View Source SupportsActor(IPermissionActor) Declaration public bool SupportsActor(IPermissionActor actor) Parameters Type Name Description IPermissionActor actor Returns Type Description System.Boolean Implements IPermissionCheckProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.Data.html": {
    "href": "api/OpenMod.Core.Permissions.Data.html",
    "title": "Namespace OpenMod.Core.Permissions.Data | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Permissions.Data Classes PermissionRoleData PermissionRolesData"
  },
  "api/OpenMod.Core.Permissions.Data.PermissionRoleData.html": {
    "href": "api/OpenMod.Core.Permissions.Data.PermissionRoleData.html",
    "title": "Class PermissionRoleData | OpenMod Docs",
    "keywords": "Class PermissionRoleData Inheritance System.Object PermissionRoleData Namespace : OpenMod.Core.Permissions.Data Assembly : OpenMod.Core.dll Syntax public sealed class PermissionRoleData : object Constructors | Improve this Doc View Source PermissionRoleData() Declaration public PermissionRoleData() Properties | Improve this Doc View Source Data Declaration public Dictionary<string, object?>? Data { get; set; } Property Value Type Description System.Nullable < Dictionary < System.String , System.Nullable < System.Object >>> | Improve this Doc View Source DisplayName Declaration public string? DisplayName { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Id Declaration public string? Id { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source IsAutoAssigned Declaration public bool IsAutoAssigned { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Parents Declaration public HashSet<string>? Parents { get; set; } Property Value Type Description System.Nullable < HashSet < System.String >> | Improve this Doc View Source Permissions Declaration public HashSet<string>? Permissions { get; set; } Property Value Type Description System.Nullable < HashSet < System.String >> | Improve this Doc View Source Priority Declaration public int Priority { get; set; } Property Value Type Description System.Int32 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.Data.PermissionRolesData.html": {
    "href": "api/OpenMod.Core.Permissions.Data.PermissionRolesData.html",
    "title": "Class PermissionRolesData | OpenMod Docs",
    "keywords": "Class PermissionRolesData Inheritance System.Object PermissionRolesData Namespace : OpenMod.Core.Permissions.Data Assembly : OpenMod.Core.dll Syntax public sealed class PermissionRolesData : object Properties | Improve this Doc View Source Roles Declaration public List<PermissionRoleData>? Roles { get; set; } Property Value Type Description System.Nullable < List < PermissionRoleData >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.DefaultPermissionCheckProvider.html": {
    "href": "api/OpenMod.Core.Permissions.DefaultPermissionCheckProvider.html",
    "title": "Class DefaultPermissionCheckProvider | OpenMod Docs",
    "keywords": "Class DefaultPermissionCheckProvider Inheritance System.Object DefaultPermissionCheckProvider Implements IPermissionCheckProvider Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class DefaultPermissionCheckProvider : object, IPermissionCheckProvider Constructors | Improve this Doc View Source DefaultPermissionCheckProvider(IPermissionChecker, ILogger<DefaultPermissionCheckProvider>) Declaration public DefaultPermissionCheckProvider(IPermissionChecker permissionChecker, ILogger<DefaultPermissionCheckProvider> logger) Parameters Type Name Description IPermissionChecker permissionChecker ILogger < DefaultPermissionCheckProvider > logger Methods | Improve this Doc View Source BuildPermissionTree(String) Builds a parent permission tree for the given permission If the target has any of these permissions, they will automatically have the given permission too Example Input: \"OpenMod.Core:commands.help\" Example output: [ \"*\", \"OpenMod.*\" \"OpenMod.Core:*\" \"OpenMod.Core:commands.*\", \"OpenMod.Core:commands.help\", ] Declaration public static IEnumerable<string> BuildPermissionTree(string permission) Parameters Type Name Description System.String permission The permission to build the tree for Returns Type Description IEnumerable < System.String > The collection of all parent permission nodes | Improve this Doc View Source CheckPermissionAsync(IPermissionActor, String) Declaration public Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < PermissionGrantResult > | Improve this Doc View Source SupportsActor(IPermissionActor) Declaration public bool SupportsActor(IPermissionActor actor) Parameters Type Name Description IPermissionActor actor Returns Type Description System.Boolean Implements IPermissionCheckProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.DefaultPermissionRoleStore.html": {
    "href": "api/OpenMod.Core.Permissions.DefaultPermissionRoleStore.html",
    "title": "Class DefaultPermissionRoleStore | OpenMod Docs",
    "keywords": "Class DefaultPermissionRoleStore Inheritance System.Object DefaultPermissionRoleStore Implements IPermissionRoleStore Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class DefaultPermissionRoleStore : object, IPermissionRoleStore Constructors | Improve this Doc View Source DefaultPermissionRoleStore(IPermissionRolesDataStore, IUserDataStore, IRuntime, IEventBus) Declaration public DefaultPermissionRoleStore(IPermissionRolesDataStore permissionRolesDataStore, IUserDataStore userDataStore, IRuntime runtime, IEventBus eventBus) Parameters Type Name Description IPermissionRolesDataStore permissionRolesDataStore IUserDataStore userDataStore IRuntime runtime IEventBus eventBus Methods | Improve this Doc View Source AddRoleToActorAsync(IPermissionActor, String) Declaration public virtual Task<bool> AddRoleToActorAsync(IPermissionActor actor, string roleId) Parameters Type Name Description IPermissionActor actor System.String roleId Returns Type Description Task < System.Boolean > | Improve this Doc View Source CreateRoleAsync(IPermissionRole) Declaration public virtual Task<bool> CreateRoleAsync(IPermissionRole role) Parameters Type Name Description IPermissionRole role Returns Type Description Task < System.Boolean > | Improve this Doc View Source DeleteRoleAsync(String) Declaration public virtual Task<bool> DeleteRoleAsync(string roleId) Parameters Type Name Description System.String roleId Returns Type Description Task < System.Boolean > | Improve this Doc View Source GetAutoAssignedRolesAsync(String, String) Declaration public Task<IReadOnlyCollection<string>> GetAutoAssignedRolesAsync(string actorId, string actorType) Parameters Type Name Description System.String actorId System.String actorType Returns Type Description Task < IReadOnlyCollection < System.String >> | Improve this Doc View Source GetAutoAssignRoles() Declaration protected IEnumerable<IPermissionRole> GetAutoAssignRoles() Returns Type Description IEnumerable < IPermissionRole > | Improve this Doc View Source GetPersistentDataAsync<T>(String, String) Declaration public Task<T> GetPersistentDataAsync<T>(string roleId, string key) Parameters Type Name Description System.String roleId System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source GetRoleAsync(String) Declaration public virtual Task<IPermissionRole> GetRoleAsync(string roleId) Parameters Type Name Description System.String roleId Returns Type Description Task < IPermissionRole > | Improve this Doc View Source GetRolesAsync() Declaration public virtual Task<IReadOnlyCollection<IPermissionRole>> GetRolesAsync() Returns Type Description Task < IReadOnlyCollection < IPermissionRole >> | Improve this Doc View Source GetRolesAsync(IPermissionActor, Boolean) Declaration public virtual Task<IReadOnlyCollection<IPermissionRole>> GetRolesAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor System.Boolean inherit Returns Type Description Task < IReadOnlyCollection < IPermissionRole >> | Improve this Doc View Source RemoveRoleFromActorAsync(IPermissionActor, String) Declaration public virtual Task<bool> RemoveRoleFromActorAsync(IPermissionActor actor, string roleId) Parameters Type Name Description IPermissionActor actor System.String roleId Returns Type Description Task < System.Boolean > | Improve this Doc View Source SavePersistentDataAsync<T>(String, String, T) Declaration public Task SavePersistentDataAsync<T>(string roleId, string key, T data) Parameters Type Name Description System.String roleId System.String key T data Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source UpdateRoleAsync(IPermissionRole) Declaration public virtual Task<bool> UpdateRoleAsync(IPermissionRole role) Parameters Type Name Description IPermissionRole role Returns Type Description Task < System.Boolean > Implements IPermissionRoleStore Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.DefaultPermissionStore.html": {
    "href": "api/OpenMod.Core.Permissions.DefaultPermissionStore.html",
    "title": "Class DefaultPermissionStore | OpenMod Docs",
    "keywords": "Class DefaultPermissionStore Inheritance System.Object DefaultPermissionStore Implements IPermissionStore Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class DefaultPermissionStore : object, IPermissionStore Constructors | Improve this Doc View Source DefaultPermissionStore(IUserDataStore, IPermissionRolesDataStore, IPermissionRoleStore) Declaration public DefaultPermissionStore(IUserDataStore userDataStore, IPermissionRolesDataStore permissionRolesDataStore, IPermissionRoleStore permissionRoleStore) Parameters Type Name Description IUserDataStore userDataStore IPermissionRolesDataStore permissionRolesDataStore IPermissionRoleStore permissionRoleStore Methods | Improve this Doc View Source AddDeniedPermissionAsync(IPermissionActor, String) Declaration public virtual Task<bool> AddDeniedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < System.Boolean > | Improve this Doc View Source AddGrantedPermissionAsync(IPermissionActor, String) Declaration public virtual Task<bool> AddGrantedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < System.Boolean > | Improve this Doc View Source GetDeniedPermissionsAsync(IPermissionActor, Boolean) Declaration public virtual Task<IReadOnlyCollection<string>> GetDeniedPermissionsAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor System.Boolean inherit Returns Type Description Task < IReadOnlyCollection < System.String >> | Improve this Doc View Source GetGrantDenyPermissionsAsync(IPermissionActor, Boolean, Boolean) Declaration protected virtual Task<IReadOnlyCollection<string>> GetGrantDenyPermissionsAsync(IPermissionActor actor, bool inherit, bool isGrant) Parameters Type Name Description IPermissionActor actor System.Boolean inherit System.Boolean isGrant Returns Type Description Task < IReadOnlyCollection < System.String >> | Improve this Doc View Source GetGrantedPermissionsAsync(IPermissionActor, Boolean) Declaration public virtual Task<IReadOnlyCollection<string>> GetGrantedPermissionsAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor System.Boolean inherit Returns Type Description Task < IReadOnlyCollection < System.String >> | Improve this Doc View Source GetPermissionsAsync(IPermissionActor, Boolean) Declaration protected Task<HashSet<string>> GetPermissionsAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor System.Boolean inherit Returns Type Description Task < HashSet < System.String >> | Improve this Doc View Source RemoveDeniedPermissionAsync(IPermissionActor, String) Declaration public virtual Task<bool> RemoveDeniedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < System.Boolean > | Improve this Doc View Source RemoveGrantedPermissionAsync(IPermissionActor, String) Declaration public virtual Task<bool> RemoveGrantedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < System.Boolean > Implements IPermissionStore Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.Events.html": {
    "href": "api/OpenMod.Core.Permissions.Events.html",
    "title": "Namespace OpenMod.Core.Permissions.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Permissions.Events Classes PermissionActorRoleAddedEvent Event that is triggered when a role is added to the actor PermissionActorRoleEvent Event that is triggered when a role is added to or removed from the actor PermissionActorRoleRemovedEvent Event that is triggered when a role is removed from the actor"
  },
  "api/OpenMod.Core.Permissions.Events.PermissionActorRoleAddedEvent.html": {
    "href": "api/OpenMod.Core.Permissions.Events.PermissionActorRoleAddedEvent.html",
    "title": "Class PermissionActorRoleAddedEvent | OpenMod Docs",
    "keywords": "Class PermissionActorRoleAddedEvent Event that is triggered when a role is added to the actor Inheritance System.Object EventBase Event PermissionActorRoleEvent PermissionActorRoleAddedEvent Implements IEvent Inherited Members PermissionActorRoleEvent.Actor PermissionActorRoleEvent.RoleId Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Permissions.Events Assembly : OpenMod.Core.dll Syntax public class PermissionActorRoleAddedEvent : PermissionActorRoleEvent, IEvent Constructors | Improve this Doc View Source PermissionActorRoleAddedEvent(IPermissionActor, String) Declaration public PermissionActorRoleAddedEvent(IPermissionActor actor, string roleId) Parameters Type Name Description IPermissionActor actor System.String roleId Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.Events.PermissionActorRoleEvent.html": {
    "href": "api/OpenMod.Core.Permissions.Events.PermissionActorRoleEvent.html",
    "title": "Class PermissionActorRoleEvent | OpenMod Docs",
    "keywords": "Class PermissionActorRoleEvent Event that is triggered when a role is added to or removed from the actor Inheritance System.Object EventBase Event PermissionActorRoleEvent PermissionActorRoleAddedEvent PermissionActorRoleRemovedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Permissions.Events Assembly : OpenMod.Core.dll Syntax public abstract class PermissionActorRoleEvent : Event, IEvent Constructors | Improve this Doc View Source PermissionActorRoleEvent(IPermissionActor, String) Declaration public PermissionActorRoleEvent(IPermissionActor actor, string roleId) Parameters Type Name Description IPermissionActor actor System.String roleId Properties | Improve this Doc View Source Actor Declaration public IPermissionActor Actor { get; } Property Value Type Description IPermissionActor | Improve this Doc View Source RoleId Declaration public string RoleId { get; } Property Value Type Description System.String Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.Events.PermissionActorRoleRemovedEvent.html": {
    "href": "api/OpenMod.Core.Permissions.Events.PermissionActorRoleRemovedEvent.html",
    "title": "Class PermissionActorRoleRemovedEvent | OpenMod Docs",
    "keywords": "Class PermissionActorRoleRemovedEvent Event that is triggered when a role is removed from the actor Inheritance System.Object EventBase Event PermissionActorRoleEvent PermissionActorRoleRemovedEvent Implements IEvent Inherited Members PermissionActorRoleEvent.Actor PermissionActorRoleEvent.RoleId Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Permissions.Events Assembly : OpenMod.Core.dll Syntax public class PermissionActorRoleRemovedEvent : PermissionActorRoleEvent, IEvent Constructors | Improve this Doc View Source PermissionActorRoleRemovedEvent(IPermissionActor, String) Declaration public PermissionActorRoleRemovedEvent(IPermissionActor actor, string roleId) Parameters Type Name Description IPermissionActor actor System.String roleId Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.html": {
    "href": "api/OpenMod.Core.Permissions.html",
    "title": "Namespace OpenMod.Core.Permissions | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Permissions Classes AlwaysDenyPermissionCheckProvider AlwaysGrantPermissionCheckProvider DefaultPermissionCheckProvider DefaultPermissionRoleStore DefaultPermissionStore PermissionChecker PermissionCheckerOptions PermissionRegistration PermissionRegistry PermissionRole PermissionRolesDataStore RegisterCommandPermissionAttribute RegisterPermissionAttribute ScopedPermissionChecker UserDataPermissionActor Interfaces IPermissionRolesDataStore"
  },
  "api/OpenMod.Core.Permissions.IPermissionRolesDataStore.html": {
    "href": "api/OpenMod.Core.Permissions.IPermissionRolesDataStore.html",
    "title": "Interface IPermissionRolesDataStore | OpenMod Docs",
    "keywords": "Interface IPermissionRolesDataStore Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public interface IPermissionRolesDataStore Properties | Improve this Doc View Source Roles Declaration List<PermissionRoleData> Roles { get; } Property Value Type Description List < PermissionRoleData > Methods | Improve this Doc View Source GetRoleAsync(String) Declaration Task<PermissionRoleData> GetRoleAsync(string id) Parameters Type Name Description System.String id Returns Type Description Task < PermissionRoleData > | Improve this Doc View Source GetRoleDataAsync<T>(String, String) Declaration Task<T> GetRoleDataAsync<T>(string roleId, string key) Parameters Type Name Description System.String roleId System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source ReloadAsync() Declaration Task ReloadAsync() Returns Type Description Task | Improve this Doc View Source SaveChangesAsync() Declaration Task SaveChangesAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.PermissionChecker.html": {
    "href": "api/OpenMod.Core.Permissions.PermissionChecker.html",
    "title": "Class PermissionChecker | OpenMod Docs",
    "keywords": "Class PermissionChecker Inheritance System.Object PermissionChecker Implements IPermissionChecker IAsyncDisposable Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class PermissionChecker : object, IPermissionChecker, IAsyncDisposable Constructors | Improve this Doc View Source PermissionChecker(ILifetimeScope, IPermissionRegistry, IOptions<PermissionCheckerOptions>, ILogger<PermissionChecker>) Declaration public PermissionChecker(ILifetimeScope lifetimeScope, IPermissionRegistry permissionRegistry, IOptions<PermissionCheckerOptions> options, ILogger<PermissionChecker> logger) Parameters Type Name Description ILifetimeScope lifetimeScope IPermissionRegistry permissionRegistry IOptions < PermissionCheckerOptions > options ILogger < PermissionChecker > logger Properties | Improve this Doc View Source PermissionCheckProviders Declaration public IReadOnlyCollection<IPermissionCheckProvider> PermissionCheckProviders { get; } Property Value Type Description IReadOnlyCollection < IPermissionCheckProvider > | Improve this Doc View Source PermissionStores Declaration public IReadOnlyCollection<IPermissionStore> PermissionStores { get; } Property Value Type Description IReadOnlyCollection < IPermissionStore > Methods | Improve this Doc View Source CheckPermissionAsync(IPermissionActor, String) Declaration public Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < PermissionGrantResult > | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source InitAsync() Declaration public Task InitAsync() Returns Type Description Task Implements IPermissionChecker IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.PermissionCheckerOptions.html": {
    "href": "api/OpenMod.Core.Permissions.PermissionCheckerOptions.html",
    "title": "Class PermissionCheckerOptions | OpenMod Docs",
    "keywords": "Class PermissionCheckerOptions Inheritance System.Object PermissionCheckerOptions Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class PermissionCheckerOptions : object Constructors | Improve this Doc View Source PermissionCheckerOptions() Declaration public PermissionCheckerOptions() Properties | Improve this Doc View Source PermissionCheckProviders Declaration public IReadOnlyCollection<Type> PermissionCheckProviders { get; } Property Value Type Description IReadOnlyCollection < Type > | Improve this Doc View Source PermissionSources Declaration public IReadOnlyCollection<Type> PermissionSources { get; } Property Value Type Description IReadOnlyCollection < Type > Methods | Improve this Doc View Source AddPermissionCheckProvider(Type) Declaration public void AddPermissionCheckProvider(Type type) Parameters Type Name Description Type type | Improve this Doc View Source AddPermissionCheckProvider<TProvider>() Declaration public void AddPermissionCheckProvider<TProvider>() where TProvider : IPermissionCheckProvider Type Parameters Name Description TProvider | Improve this Doc View Source AddPermissionSource(Type) Declaration public void AddPermissionSource(Type type) Parameters Type Name Description Type type | Improve this Doc View Source AddPermissionSource<TSource>() Declaration public void AddPermissionSource<TSource>() where TSource : IPermissionStore Type Parameters Name Description TSource | Improve this Doc View Source RemovePermissionCheckProvider(Type) Declaration public bool RemovePermissionCheckProvider(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source RemovePermissionCheckProvider<TProvider>() Declaration public void RemovePermissionCheckProvider<TProvider>() where TProvider : IPermissionCheckProvider Type Parameters Name Description TProvider | Improve this Doc View Source RemovePermissionSource(Type) Declaration public bool RemovePermissionSource(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source RemovePermissionSource<TSource>() Declaration public void RemovePermissionSource<TSource>() where TSource : IPermissionStore Type Parameters Name Description TSource Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.PermissionRegistration.html": {
    "href": "api/OpenMod.Core.Permissions.PermissionRegistration.html",
    "title": "Class PermissionRegistration | OpenMod Docs",
    "keywords": "Class PermissionRegistration Inheritance System.Object PermissionRegistration Implements IPermissionRegistration Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class PermissionRegistration : object, IPermissionRegistration Properties | Improve this Doc View Source DefaultGrant Declaration public PermissionGrantResult DefaultGrant { get; set; } Property Value Type Description PermissionGrantResult | Improve this Doc View Source Description Declaration public string? Description { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Owner Declaration public IOpenModComponent Owner { get; set; } Property Value Type Description IOpenModComponent | Improve this Doc View Source Permission Declaration public string Permission { get; set; } Property Value Type Description System.String Implements IPermissionRegistration Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.PermissionRegistry.html": {
    "href": "api/OpenMod.Core.Permissions.PermissionRegistry.html",
    "title": "Class PermissionRegistry | OpenMod Docs",
    "keywords": "Class PermissionRegistry Inheritance System.Object PermissionRegistry Implements IPermissionRegistry Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class PermissionRegistry : object, IPermissionRegistry Constructors | Improve this Doc View Source PermissionRegistry() Declaration public PermissionRegistry() Methods | Improve this Doc View Source FindPermission(IOpenModComponent, String) Declaration public IPermissionRegistration FindPermission(IOpenModComponent component, string permission) Parameters Type Name Description IOpenModComponent component System.String permission Returns Type Description IPermissionRegistration | Improve this Doc View Source FindPermission(String) Declaration public IPermissionRegistration FindPermission(string permission) Parameters Type Name Description System.String permission Returns Type Description IPermissionRegistration | Improve this Doc View Source GetPermissions(IOpenModComponent) Declaration public IReadOnlyCollection<IPermissionRegistration> GetPermissions(IOpenModComponent component) Parameters Type Name Description IOpenModComponent component Returns Type Description IReadOnlyCollection < IPermissionRegistration > | Improve this Doc View Source RegisterPermission(IOpenModComponent, String, Nullable<String>, Nullable<PermissionGrantResult>) Declaration public void RegisterPermission(IOpenModComponent component, string permission, string? description = null, PermissionGrantResult? defaultGrant = null) Parameters Type Name Description IOpenModComponent component System.String permission System.Nullable < System.String > description System.Nullable < PermissionGrantResult > defaultGrant Implements IPermissionRegistry Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.PermissionRole.html": {
    "href": "api/OpenMod.Core.Permissions.PermissionRole.html",
    "title": "Class PermissionRole | OpenMod Docs",
    "keywords": "Class PermissionRole Inheritance System.Object PermissionRole Implements IPermissionRole IPermissionActor Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public sealed class PermissionRole : object, IPermissionRole, IPermissionActor Constructors | Improve this Doc View Source PermissionRole(PermissionRoleData) Declaration public PermissionRole(PermissionRoleData data) Parameters Type Name Description PermissionRoleData data Properties | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source FullActorName Declaration public string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source IsAutoAssigned Declaration public bool IsAutoAssigned { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Parents Declaration public HashSet<string> Parents { get; } Property Value Type Description HashSet < System.String > | Improve this Doc View Source Permissions Declaration public HashSet<string> Permissions { get; } Property Value Type Description HashSet < System.String > | Improve this Doc View Source Priority Declaration public int Priority { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description System.String Operators | Improve this Doc View Source Explicit(PermissionRole to PermissionRoleData) Declaration public static explicit operator PermissionRoleData(PermissionRole role) Parameters Type Name Description PermissionRole role Returns Type Description PermissionRoleData | Improve this Doc View Source Implicit(PermissionRoleData to PermissionRole) Declaration public static implicit operator PermissionRole(PermissionRoleData data) Parameters Type Name Description PermissionRoleData data Returns Type Description PermissionRole Implements IPermissionRole IPermissionActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.PermissionRolesDataStore.html": {
    "href": "api/OpenMod.Core.Permissions.PermissionRolesDataStore.html",
    "title": "Class PermissionRolesDataStore | OpenMod Docs",
    "keywords": "Class PermissionRolesDataStore Inheritance System.Object PermissionRolesDataStore Implements IPermissionRolesDataStore IDisposable Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class PermissionRolesDataStore : object, IPermissionRolesDataStore, IDisposable Constructors | Improve this Doc View Source PermissionRolesDataStore(ILogger<PermissionRolesDataStore>, IOpenModDataStoreAccessor, IRuntime, IEventBus) Declaration public PermissionRolesDataStore(ILogger<PermissionRolesDataStore> logger, IOpenModDataStoreAccessor dataStoreAccessor, IRuntime runtime, IEventBus eventBus) Parameters Type Name Description ILogger < PermissionRolesDataStore > logger IOpenModDataStoreAccessor dataStoreAccessor IRuntime runtime IEventBus eventBus Fields | Improve this Doc View Source RolesKey Declaration public const string RolesKey = null Field Value Type Description System.String Properties | Improve this Doc View Source Roles Declaration public List<PermissionRoleData> Roles { get; } Property Value Type Description List < PermissionRoleData > Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ExistsAsync() Declaration public virtual Task<bool> ExistsAsync() Returns Type Description Task < System.Boolean > | Improve this Doc View Source GetRoleAsync(String) Declaration public Task<PermissionRoleData> GetRoleAsync(string id) Parameters Type Name Description System.String id Returns Type Description Task < PermissionRoleData > | Improve this Doc View Source GetRoleDataAsync<T>(String, String) Declaration public Task<T> GetRoleDataAsync<T>(string roleId, string key) Parameters Type Name Description System.String roleId System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source InitAsync() Declaration protected virtual Task InitAsync() Returns Type Description Task | Improve this Doc View Source ReloadAsync() Declaration public virtual Task ReloadAsync() Returns Type Description Task | Improve this Doc View Source SaveChangesAsync() Declaration public virtual Task SaveChangesAsync() Returns Type Description Task Implements IPermissionRolesDataStore IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.RegisterCommandPermissionAttribute.html": {
    "href": "api/OpenMod.Core.Permissions.RegisterCommandPermissionAttribute.html",
    "title": "Class RegisterCommandPermissionAttribute | OpenMod Docs",
    "keywords": "Class RegisterCommandPermissionAttribute Inheritance System.Object RegisterCommandPermissionAttribute Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class RegisterCommandPermissionAttribute : Attribute Constructors | Improve this Doc View Source RegisterCommandPermissionAttribute(String) Declaration public RegisterCommandPermissionAttribute(string permission) Parameters Type Name Description System.String permission Properties | Improve this Doc View Source DefaultGrant Declaration public PermissionGrantResult DefaultGrant { get; set; } Property Value Type Description PermissionGrantResult | Improve this Doc View Source Description Declaration public string? Description { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Permission Declaration public string Permission { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.RegisterPermissionAttribute.html": {
    "href": "api/OpenMod.Core.Permissions.RegisterPermissionAttribute.html",
    "title": "Class RegisterPermissionAttribute | OpenMod Docs",
    "keywords": "Class RegisterPermissionAttribute Inheritance System.Object RegisterPermissionAttribute Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class RegisterPermissionAttribute : Attribute Constructors | Improve this Doc View Source RegisterPermissionAttribute(String) Declaration public RegisterPermissionAttribute(string permission) Parameters Type Name Description System.String permission Properties | Improve this Doc View Source DefaultGrant Declaration public PermissionGrantResult DefaultGrant { get; set; } Property Value Type Description PermissionGrantResult | Improve this Doc View Source Description Declaration public string? Description { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Permission Declaration public string Permission { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.ScopedPermissionChecker.html": {
    "href": "api/OpenMod.Core.Permissions.ScopedPermissionChecker.html",
    "title": "Class ScopedPermissionChecker | OpenMod Docs",
    "keywords": "Class ScopedPermissionChecker Inheritance System.Object ScopedPermissionChecker Implements IPermissionChecker Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class ScopedPermissionChecker : object, IPermissionChecker Constructors | Improve this Doc View Source ScopedPermissionChecker(IRuntime, Lazy<IOpenModComponent>) Declaration public ScopedPermissionChecker(IRuntime runtime, Lazy<IOpenModComponent> component) Parameters Type Name Description IRuntime runtime Lazy < IOpenModComponent > component Properties | Improve this Doc View Source PermissionCheckProviders Declaration public IReadOnlyCollection<IPermissionCheckProvider> PermissionCheckProviders { get; } Property Value Type Description IReadOnlyCollection < IPermissionCheckProvider > | Improve this Doc View Source PermissionStores Declaration public IReadOnlyCollection<IPermissionStore> PermissionStores { get; } Property Value Type Description IReadOnlyCollection < IPermissionStore > Methods | Improve this Doc View Source CheckPermissionAsync(IPermissionActor, String) Declaration public Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < PermissionGrantResult > | Improve this Doc View Source InitAsync() Declaration public Task InitAsync() Returns Type Description Task Implements IPermissionChecker Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Permissions.UserDataPermissionActor.html": {
    "href": "api/OpenMod.Core.Permissions.UserDataPermissionActor.html",
    "title": "Class UserDataPermissionActor | OpenMod Docs",
    "keywords": "Class UserDataPermissionActor Inheritance System.Object UserDataPermissionActor Implements IPermissionActor Namespace : OpenMod.Core.Permissions Assembly : OpenMod.Core.dll Syntax public class UserDataPermissionActor : object, IPermissionActor Constructors | Improve this Doc View Source UserDataPermissionActor(UserData) Declaration public UserDataPermissionActor(UserData userData) Parameters Type Name Description UserData userData Properties | Improve this Doc View Source Data Declaration public Dictionary<string, object?>? Data { get; } Property Value Type Description System.Nullable < Dictionary < System.String , System.Nullable < System.Object >>> | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source FullActorName Declaration public string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description System.String Operators | Improve this Doc View Source Implicit(UserData to UserDataPermissionActor) Declaration public static implicit operator UserDataPermissionActor(UserData d) Parameters Type Name Description UserData d Returns Type Description UserDataPermissionActor Implements IPermissionActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Persistence.html": {
    "href": "api/OpenMod.Core.Persistence.html",
    "title": "Namespace OpenMod.Core.Persistence | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Persistence Classes OpenModDataStoreAccessor YamlDataStore YamlDataStoreFactory YamlDataStoreOptions YamlNullableEnumTypeConverter YamlVector3TypeConverter"
  },
  "api/OpenMod.Core.Persistence.OpenModDataStoreAccessor.html": {
    "href": "api/OpenMod.Core.Persistence.OpenModDataStoreAccessor.html",
    "title": "Class OpenModDataStoreAccessor | OpenMod Docs",
    "keywords": "Class OpenModDataStoreAccessor Inheritance System.Object OpenModDataStoreAccessor Implements IOpenModDataStoreAccessor Namespace : OpenMod.Core.Persistence Assembly : OpenMod.Core.dll Syntax public class OpenModDataStoreAccessor : object, IOpenModDataStoreAccessor Constructors | Improve this Doc View Source OpenModDataStoreAccessor(IRuntime) Declaration public OpenModDataStoreAccessor(IRuntime runtime) Parameters Type Name Description IRuntime runtime Properties | Improve this Doc View Source DataStore Declaration public IDataStore DataStore { get; } Property Value Type Description IDataStore Implements IOpenModDataStoreAccessor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Persistence.YamlDataStore.html": {
    "href": "api/OpenMod.Core.Persistence.YamlDataStore.html",
    "title": "Class YamlDataStore | OpenMod Docs",
    "keywords": "Class YamlDataStore Inheritance System.Object YamlDataStore Implements IDataStore IDisposable Namespace : OpenMod.Core.Persistence Assembly : OpenMod.Core.dll Syntax public class YamlDataStore : object, IDataStore, IDisposable Constructors | Improve this Doc View Source YamlDataStore(DataStoreCreationParameters, Nullable<ILogger<YamlDataStore>>, IRuntime, IOptions<YamlDataStoreOptions>) Declaration public YamlDataStore(DataStoreCreationParameters parameters, ILogger<YamlDataStore>? logger, IRuntime runtime, IOptions<YamlDataStoreOptions> options) Parameters Type Name Description DataStoreCreationParameters parameters System.Nullable < ILogger < YamlDataStore >> logger IRuntime runtime IOptions < YamlDataStoreOptions > options Methods | Improve this Doc View Source AddChangeWatcher(String, IOpenModComponent, Action) Declaration public IDisposable AddChangeWatcher(string key, IOpenModComponent component, Action onChange) Parameters Type Name Description System.String key IOpenModComponent component Action onChange Returns Type Description IDisposable | Improve this Doc View Source CheckKeyValid(String) Declaration protected virtual void CheckKeyValid(string key) Parameters Type Name Description System.String key | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source ExistsAsync(String) Declaration public Task<bool> ExistsAsync(string key) Parameters Type Name Description System.String key Returns Type Description Task < System.Boolean > | Improve this Doc View Source GetFilePathForKey(String) Declaration protected virtual string GetFilePathForKey(string key) Parameters Type Name Description System.String key Returns Type Description System.String | Improve this Doc View Source LoadAsync<T>(String) Declaration public virtual Task<T> LoadAsync<T>(string key) where T : class Parameters Type Name Description System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source SaveAsync<T>(String, T) Declaration public virtual Task SaveAsync<T>(string key, T data) where T : class Parameters Type Name Description System.String key T data Returns Type Description Task Type Parameters Name Description T Implements IDataStore IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Persistence.YamlDataStoreFactory.html": {
    "href": "api/OpenMod.Core.Persistence.YamlDataStoreFactory.html",
    "title": "Class YamlDataStoreFactory | OpenMod Docs",
    "keywords": "Class YamlDataStoreFactory Inheritance System.Object YamlDataStoreFactory Implements IDataStoreFactory Namespace : OpenMod.Core.Persistence Assembly : OpenMod.Core.dll Syntax public class YamlDataStoreFactory : object, IDataStoreFactory Constructors | Improve this Doc View Source YamlDataStoreFactory(IServiceProvider) Declaration public YamlDataStoreFactory(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source CreateDataStore(DataStoreCreationParameters) Declaration public IDataStore CreateDataStore(DataStoreCreationParameters parameters) Parameters Type Name Description DataStoreCreationParameters parameters Returns Type Description IDataStore Implements IDataStoreFactory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Persistence.YamlDataStoreOptions.html": {
    "href": "api/OpenMod.Core.Persistence.YamlDataStoreOptions.html",
    "title": "Class YamlDataStoreOptions | OpenMod Docs",
    "keywords": "Class YamlDataStoreOptions Inheritance System.Object YamlDataStoreOptions Namespace : OpenMod.Core.Persistence Assembly : OpenMod.Core.dll Syntax public class YamlDataStoreOptions : object Constructors | Improve this Doc View Source YamlDataStoreOptions() Declaration public YamlDataStoreOptions() Properties | Improve this Doc View Source Converters Declaration public IReadOnlyList<IYamlTypeConverter> Converters { get; } Property Value Type Description IReadOnlyList < IYamlTypeConverter > Methods | Improve this Doc View Source TryAddConverter<T>() Adds the specified to the converters list. Declaration public bool TryAddConverter<T>() where T : class, IYamlTypeConverter, new() Returns Type Description System.Boolean true if the converter is added to converters list; false if the converter is already present. Type Parameters Name Description T | Improve this Doc View Source TryRemoveConverter<T>() Removes the specified from the converters list. Declaration public bool TryRemoveConverter<T>() where T : class, IYamlTypeConverter, new() Returns Type Description System.Boolean true if the converter is successfully found and removed; otherwise, false . Type Parameters Name Description T Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Persistence.YamlNullableEnumTypeConverter.html": {
    "href": "api/OpenMod.Core.Persistence.YamlNullableEnumTypeConverter.html",
    "title": "Class YamlNullableEnumTypeConverter | OpenMod Docs",
    "keywords": "Class YamlNullableEnumTypeConverter Inheritance System.Object YamlNullableEnumTypeConverter Namespace : OpenMod.Core.Persistence Assembly : OpenMod.Core.dll Syntax public class YamlNullableEnumTypeConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Declaration public bool Accepts(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Declaration public object? ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source WriteYaml(IEmitter, Nullable<Object>, Type) Declaration public void WriteYaml(IEmitter emitter, object? value, Type type) Parameters Type Name Description IEmitter emitter System.Nullable < System.Object > value Type type Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Persistence.YamlVector3TypeConverter.html": {
    "href": "api/OpenMod.Core.Persistence.YamlVector3TypeConverter.html",
    "title": "Class YamlVector3TypeConverter | OpenMod Docs",
    "keywords": "Class YamlVector3TypeConverter Inheritance System.Object YamlVector3TypeConverter Namespace : OpenMod.Core.Persistence Assembly : OpenMod.Core.dll Syntax public class YamlVector3TypeConverter : IYamlTypeConverter Methods | Improve this Doc View Source Accepts(Type) Declaration public bool Accepts(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source ReadYaml(IParser, Type) Declaration public object? ReadYaml(IParser parser, Type type) Parameters Type Name Description IParser parser Type type Returns Type Description System.Nullable < System.Object > | Improve this Doc View Source WriteYaml(IEmitter, Nullable<Object>, Type) Declaration public void WriteYaml(IEmitter emitter, object? value, Type type) Parameters Type Name Description IEmitter emitter System.Nullable < System.Object > value Type type Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.Events.html": {
    "href": "api/OpenMod.Core.Plugins.Events.html",
    "title": "Namespace OpenMod.Core.Plugins.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Plugins.Events Classes PluginActivatingEvent PluginConfigurationChangedEvent PluginContainerConfiguringEvent PluginDisposedEvent PluginLoadedEvent PluginLoadingEvent PluginUnloadedEvent PluginUnloadingEvent"
  },
  "api/OpenMod.Core.Plugins.Events.PluginActivatingEvent.html": {
    "href": "api/OpenMod.Core.Plugins.Events.PluginActivatingEvent.html",
    "title": "Class PluginActivatingEvent | OpenMod Docs",
    "keywords": "Class PluginActivatingEvent Inheritance System.Object EventBase Event PluginActivatingEvent Implements ICancellableEvent IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Plugins.Events Assembly : OpenMod.Core.dll Syntax public class PluginActivatingEvent : Event, ICancellableEvent, IEvent Constructors | Improve this Doc View Source PluginActivatingEvent(IOpenModPlugin) Declaration public PluginActivatingEvent(IOpenModPlugin plugin) Parameters Type Name Description IOpenModPlugin plugin Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Plugin Declaration public IOpenModPlugin Plugin { get; } Property Value Type Description IOpenModPlugin Implements ICancellableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.Events.PluginConfigurationChangedEvent.html": {
    "href": "api/OpenMod.Core.Plugins.Events.PluginConfigurationChangedEvent.html",
    "title": "Class PluginConfigurationChangedEvent | OpenMod Docs",
    "keywords": "Class PluginConfigurationChangedEvent Inheritance System.Object EventBase Event PluginConfigurationChangedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Plugins.Events Assembly : OpenMod.Core.dll Syntax public class PluginConfigurationChangedEvent : Event, IEvent Constructors | Improve this Doc View Source PluginConfigurationChangedEvent(IOpenModPlugin, IConfiguration) Declaration public PluginConfigurationChangedEvent(IOpenModPlugin plugin, IConfiguration configuration) Parameters Type Name Description IOpenModPlugin plugin IConfiguration configuration Properties | Improve this Doc View Source Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration | Improve this Doc View Source Plugin Declaration public IOpenModPlugin Plugin { get; } Property Value Type Description IOpenModPlugin Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.Events.PluginContainerConfiguringEvent.html": {
    "href": "api/OpenMod.Core.Plugins.Events.PluginContainerConfiguringEvent.html",
    "title": "Class PluginContainerConfiguringEvent | OpenMod Docs",
    "keywords": "Class PluginContainerConfiguringEvent Inheritance System.Object EventBase Event PluginContainerConfiguringEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Plugins.Events Assembly : OpenMod.Core.dll Syntax public class PluginContainerConfiguringEvent : Event, IEvent Constructors | Improve this Doc View Source PluginContainerConfiguringEvent(PluginMetadataAttribute, Type, IConfiguration, ContainerBuilder, String) Declaration public PluginContainerConfiguringEvent(PluginMetadataAttribute metadata, Type pluginType, IConfiguration configuration, ContainerBuilder containerBuilder, string workingDirectory) Parameters Type Name Description PluginMetadataAttribute metadata Type pluginType IConfiguration configuration ContainerBuilder containerBuilder System.String workingDirectory Properties | Improve this Doc View Source Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration | Improve this Doc View Source ContainerBuilder Declaration public ContainerBuilder ContainerBuilder { get; } Property Value Type Description ContainerBuilder | Improve this Doc View Source Metadata Declaration public PluginMetadataAttribute Metadata { get; } Property Value Type Description PluginMetadataAttribute | Improve this Doc View Source PluginType Declaration public Type PluginType { get; } Property Value Type Description Type | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; } Property Value Type Description System.String Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.Events.PluginDisposedEvent.html": {
    "href": "api/OpenMod.Core.Plugins.Events.PluginDisposedEvent.html",
    "title": "Class PluginDisposedEvent | OpenMod Docs",
    "keywords": "Class PluginDisposedEvent Inheritance System.Object EventBase Event PluginDisposedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Plugins.Events Assembly : OpenMod.Core.dll Syntax public class PluginDisposedEvent : Event, IEvent Constructors | Improve this Doc View Source PluginDisposedEvent(IOpenModPlugin) Declaration public PluginDisposedEvent(IOpenModPlugin plugin) Parameters Type Name Description IOpenModPlugin plugin Properties | Improve this Doc View Source Plugin Declaration public IOpenModPlugin Plugin { get; } Property Value Type Description IOpenModPlugin Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.Events.PluginLoadedEvent.html": {
    "href": "api/OpenMod.Core.Plugins.Events.PluginLoadedEvent.html",
    "title": "Class PluginLoadedEvent | OpenMod Docs",
    "keywords": "Class PluginLoadedEvent Inheritance System.Object EventBase Event PluginLoadedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Plugins.Events Assembly : OpenMod.Core.dll Syntax public class PluginLoadedEvent : Event, IEvent Constructors | Improve this Doc View Source PluginLoadedEvent(IOpenModPlugin) Declaration public PluginLoadedEvent(IOpenModPlugin plugin) Parameters Type Name Description IOpenModPlugin plugin Properties | Improve this Doc View Source Plugin Declaration public IOpenModPlugin Plugin { get; } Property Value Type Description IOpenModPlugin Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.Events.PluginLoadingEvent.html": {
    "href": "api/OpenMod.Core.Plugins.Events.PluginLoadingEvent.html",
    "title": "Class PluginLoadingEvent | OpenMod Docs",
    "keywords": "Class PluginLoadingEvent Inheritance System.Object EventBase Event PluginLoadingEvent Implements ICancellableEvent IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Plugins.Events Assembly : OpenMod.Core.dll Syntax public class PluginLoadingEvent : Event, ICancellableEvent, IEvent Constructors | Improve this Doc View Source PluginLoadingEvent(IOpenModPlugin) Declaration public PluginLoadingEvent(IOpenModPlugin plugin) Parameters Type Name Description IOpenModPlugin plugin Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Plugin Declaration public IOpenModPlugin Plugin { get; } Property Value Type Description IOpenModPlugin Implements ICancellableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.Events.PluginUnloadedEvent.html": {
    "href": "api/OpenMod.Core.Plugins.Events.PluginUnloadedEvent.html",
    "title": "Class PluginUnloadedEvent | OpenMod Docs",
    "keywords": "Class PluginUnloadedEvent Inheritance System.Object EventBase Event PluginUnloadedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Plugins.Events Assembly : OpenMod.Core.dll Syntax public class PluginUnloadedEvent : Event, IEvent Constructors | Improve this Doc View Source PluginUnloadedEvent(IOpenModPlugin) Declaration public PluginUnloadedEvent(IOpenModPlugin plugin) Parameters Type Name Description IOpenModPlugin plugin Properties | Improve this Doc View Source Plugin Declaration public IOpenModPlugin Plugin { get; } Property Value Type Description IOpenModPlugin Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.Events.PluginUnloadingEvent.html": {
    "href": "api/OpenMod.Core.Plugins.Events.PluginUnloadingEvent.html",
    "title": "Class PluginUnloadingEvent | OpenMod Docs",
    "keywords": "Class PluginUnloadingEvent Inheritance System.Object EventBase Event PluginUnloadingEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Plugins.Events Assembly : OpenMod.Core.dll Syntax public class PluginUnloadingEvent : Event, IEvent Constructors | Improve this Doc View Source PluginUnloadingEvent(IOpenModPlugin) Declaration public PluginUnloadingEvent(IOpenModPlugin plugin) Parameters Type Name Description IOpenModPlugin plugin Properties | Improve this Doc View Source Plugin Declaration public IOpenModPlugin Plugin { get; } Property Value Type Description IOpenModPlugin Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.FileSystemPluginAssembliesSource.html": {
    "href": "api/OpenMod.Core.Plugins.FileSystemPluginAssembliesSource.html",
    "title": "Class FileSystemPluginAssembliesSource | OpenMod Docs",
    "keywords": "Class FileSystemPluginAssembliesSource Inheritance System.Object FileSystemPluginAssembliesSource Implements IPluginAssembliesSource Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public class FileSystemPluginAssembliesSource : object, IPluginAssembliesSource Constructors | Improve this Doc View Source FileSystemPluginAssembliesSource(ILogger, String) Declaration public FileSystemPluginAssembliesSource(ILogger logger, string pluginsDirectory) Parameters Type Name Description ILogger logger System.String pluginsDirectory Methods | Improve this Doc View Source LoadPluginAssembliesAsync() Declaration public virtual Task<ICollection<Assembly>> LoadPluginAssembliesAsync() Returns Type Description Task < ICollection < Assembly >> Implements IPluginAssembliesSource Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.html": {
    "href": "api/OpenMod.Core.Plugins.html",
    "title": "Namespace OpenMod.Core.Plugins | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Plugins Classes FileSystemPluginAssembliesSource OpenModPluginBase Base class for all OpenMod plugins. OpenModUniversalPlugin Base class for all OpenMod universal plugins. PluginAccessor<TPlugin> PluginActivator PluginAssemblyStore PluginHelper PluginHelpWriter PluginServiceConfigurationContext Enums PluginStatus The loading status of an OpenMod plugin."
  },
  "api/OpenMod.Core.Plugins.NuGet.html": {
    "href": "api/OpenMod.Core.Plugins.NuGet.html",
    "title": "Namespace OpenMod.Core.Plugins.NuGet | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Plugins.NuGet Classes NuGetPluginAssembliesSource OpenModNuGetLogger"
  },
  "api/OpenMod.Core.Plugins.NuGet.NuGetPluginAssembliesSource.html": {
    "href": "api/OpenMod.Core.Plugins.NuGet.NuGetPluginAssembliesSource.html",
    "title": "Class NuGetPluginAssembliesSource | OpenMod Docs",
    "keywords": "Class NuGetPluginAssembliesSource Inheritance System.Object NuGetPluginAssembliesSource Implements IPluginAssembliesSource IDisposable Namespace : OpenMod.Core.Plugins.NuGet Assembly : OpenMod.Core.dll Syntax public class NuGetPluginAssembliesSource : object, IPluginAssembliesSource, IDisposable Constructors | Improve this Doc View Source NuGetPluginAssembliesSource(NuGetPackageManager) Declaration public NuGetPluginAssembliesSource(NuGetPackageManager packageManager) Parameters Type Name Description NuGetPackageManager packageManager Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source InstallPackageAsync(String, Nullable<String>, Boolean) Declaration public Task<NuGetInstallResult> InstallPackageAsync(string packageName, string? version = null, bool isPreRelease = false) Parameters Type Name Description System.String packageName System.Nullable < System.String > version System.Boolean isPreRelease Returns Type Description Task < NuGetInstallResult > | Improve this Doc View Source IsPackageInstalledAsync(String) Declaration public virtual Task<bool> IsPackageInstalledAsync(string packageName) Parameters Type Name Description System.String packageName Returns Type Description Task < System.Boolean > | Improve this Doc View Source LoadPluginAssembliesAsync() Declaration public virtual Task<ICollection<Assembly>> LoadPluginAssembliesAsync() Returns Type Description Task < ICollection < Assembly >> | Improve this Doc View Source UninstallPackageAsync(String) Declaration public Task<bool> UninstallPackageAsync(string packageName) Parameters Type Name Description System.String packageName Returns Type Description Task < System.Boolean > | Improve this Doc View Source UpdatePackageAsync(String, Nullable<String>, Boolean) Declaration public Task<NuGetInstallResult> UpdatePackageAsync(string packageName, string? version = null, bool isPreRelease = false) Parameters Type Name Description System.String packageName System.Nullable < System.String > version System.Boolean isPreRelease Returns Type Description Task < NuGetInstallResult > Implements IPluginAssembliesSource IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.NuGet.OpenModNuGetLogger.html": {
    "href": "api/OpenMod.Core.Plugins.NuGet.OpenModNuGetLogger.html",
    "title": "Class OpenModNuGetLogger | OpenMod Docs",
    "keywords": "Class OpenModNuGetLogger Inheritance System.Object OpenModNuGetLogger Namespace : OpenMod.Core.Plugins.NuGet Assembly : OpenMod.Core.dll Syntax public class OpenModNuGetLogger : LoggerBase Constructors | Improve this Doc View Source OpenModNuGetLogger(Logging.ILogger) Declaration public OpenModNuGetLogger(Logging.ILogger logger) Parameters Type Name Description Microsoft.Extensions.Logging.ILogger logger Methods | Improve this Doc View Source Log(ILogMessage) Declaration public override void Log(ILogMessage message) Parameters Type Name Description ILogMessage message | Improve this Doc View Source LogAsync(ILogMessage) Declaration public override Task LogAsync(ILogMessage message) Parameters Type Name Description ILogMessage message Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.OpenModPluginBase.html": {
    "href": "api/OpenMod.Core.Plugins.OpenModPluginBase.html",
    "title": "Class OpenModPluginBase | OpenMod Docs",
    "keywords": "Class OpenModPluginBase Base class for all OpenMod plugins. Inheritance System.Object OpenModPluginBase OpenModUniversalPlugin OpenModUnityEnginePlugin Implements IOpenModPlugin IOpenModComponent IAsyncDisposable Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public abstract class OpenModPluginBase : object, IOpenModPlugin, IOpenModComponent, IAsyncDisposable Constructors | Improve this Doc View Source OpenModPluginBase(IServiceProvider) Declaration protected OpenModPluginBase(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Properties | Improve this Doc View Source Author Declaration public virtual string? Author { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Configuration Declaration public virtual IConfiguration Configuration { get; protected set; } Property Value Type Description IConfiguration | Improve this Doc View Source DataStore Declaration public virtual IDataStore DataStore { get; } Property Value Type Description IDataStore | Improve this Doc View Source Description Declaration public virtual string? Description { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source DisplayName Declaration public virtual string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source EventBus Declaration public IEventBus EventBus { get; } Property Value Type Description IEventBus | Improve this Doc View Source Harmony Declaration protected Harmony Harmony { get; } Property Value Type Description Harmony | Improve this Doc View Source IsComponentAlive Declaration public virtual bool IsComponentAlive { get; protected set; } Property Value Type Description System.Boolean | Improve this Doc View Source LifetimeScope Declaration public virtual ILifetimeScope LifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source Logger Declaration protected ILogger Logger { get; set; } Property Value Type Description ILogger | Improve this Doc View Source OpenModComponentId Declaration public virtual string OpenModComponentId { get; } Property Value Type Description System.String | Improve this Doc View Source Runtime Declaration public IRuntime Runtime { get; } Property Value Type Description IRuntime | Improve this Doc View Source Status Declaration public virtual PluginStatus Status { get; } Property Value Type Description PluginStatus | Improve this Doc View Source Version Declaration public virtual SemVersion Version { get; } Property Value Type Description SemVersion | Improve this Doc View Source Website Declaration public virtual string? Website { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source WorkingDirectory Declaration public virtual string WorkingDirectory { get; } Property Value Type Description System.String Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source GetPluginVersion() Declaration protected virtual SemVersion GetPluginVersion() Returns Type Description SemVersion | Improve this Doc View Source LoadAsync() Declaration public virtual Task LoadAsync() Returns Type Description Task | Improve this Doc View Source OnDispose() Declaration protected virtual ValueTask<bool> OnDispose() Returns Type Description ValueTask < System.Boolean > | Improve this Doc View Source UnloadAsync() Declaration public virtual Task UnloadAsync() Returns Type Description Task Implements IOpenModPlugin IOpenModComponent IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.OpenModUniversalPlugin.html": {
    "href": "api/OpenMod.Core.Plugins.OpenModUniversalPlugin.html",
    "title": "Class OpenModUniversalPlugin | OpenMod Docs",
    "keywords": "Class OpenModUniversalPlugin Base class for all OpenMod universal plugins. Inheritance System.Object OpenModPluginBase OpenModUniversalPlugin UserDatabasePlugin Implements IOpenModPlugin IOpenModComponent IAsyncDisposable Inherited Members OpenModPluginBase.OpenModComponentId OpenModPluginBase.WorkingDirectory OpenModPluginBase.IsComponentAlive OpenModPluginBase.Status OpenModPluginBase.DisplayName OpenModPluginBase.Author OpenModPluginBase.Website OpenModPluginBase.Description OpenModPluginBase.Version OpenModPluginBase.DataStore OpenModPluginBase.LifetimeScope OpenModPluginBase.Configuration OpenModPluginBase.Runtime OpenModPluginBase.EventBus OpenModPluginBase.Logger OpenModPluginBase.Harmony OpenModPluginBase.GetPluginVersion() OpenModPluginBase.DisposeAsync() OpenModPluginBase.OnDispose() Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public abstract class OpenModUniversalPlugin : OpenModPluginBase, IOpenModPlugin, IOpenModComponent, IAsyncDisposable Constructors | Improve this Doc View Source OpenModUniversalPlugin(IServiceProvider) Declaration protected OpenModUniversalPlugin(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source LoadAsync() Declaration public override sealed Task LoadAsync() Returns Type Description Task Overrides OpenModPluginBase.LoadAsync() | Improve this Doc View Source OnLoadAsync() Declaration protected virtual Task OnLoadAsync() Returns Type Description Task | Improve this Doc View Source OnUnloadAsync() Declaration protected virtual Task OnUnloadAsync() Returns Type Description Task | Improve this Doc View Source UnloadAsync() Declaration public override sealed Task UnloadAsync() Returns Type Description Task Overrides OpenModPluginBase.UnloadAsync() Implements IOpenModPlugin IOpenModComponent IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.PluginAccessor-1.html": {
    "href": "api/OpenMod.Core.Plugins.PluginAccessor-1.html",
    "title": "Class PluginAccessor<TPlugin> | OpenMod Docs",
    "keywords": "Class PluginAccessor<TPlugin> Inheritance System.Object PluginAccessor<TPlugin> Implements IPluginAccessor <TPlugin> Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public class PluginAccessor<TPlugin> : object, IPluginAccessor<TPlugin> where TPlugin : IOpenModPlugin Type Parameters Name Description TPlugin Constructors | Improve this Doc View Source PluginAccessor(IPluginActivator) Declaration public PluginAccessor(IPluginActivator pluginActivator) Parameters Type Name Description IPluginActivator pluginActivator Properties | Improve this Doc View Source Instance Declaration public TPlugin Instance { get; } Property Value Type Description TPlugin Implements IPluginAccessor<TPlugin> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.PluginActivator.html": {
    "href": "api/OpenMod.Core.Plugins.PluginActivator.html",
    "title": "Class PluginActivator | OpenMod Docs",
    "keywords": "Class PluginActivator Inheritance System.Object PluginActivator Implements IPluginActivator IAsyncDisposable Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public class PluginActivator : object, IPluginActivator, IAsyncDisposable Constructors | Improve this Doc View Source PluginActivator(IRuntime, ILogger<PluginActivator>, IStringLocalizerFactory, ILifetimeScope, IDataStoreFactory, IEventBus) Declaration public PluginActivator(IRuntime runtime, ILogger<PluginActivator> logger, IStringLocalizerFactory stringLocalizerFactory, ILifetimeScope lifetimeScope, IDataStoreFactory dataStoreFactory, IEventBus eventBus) Parameters Type Name Description IRuntime runtime ILogger < PluginActivator > logger IStringLocalizerFactory stringLocalizerFactory ILifetimeScope lifetimeScope IDataStoreFactory dataStoreFactory IEventBus eventBus Properties | Improve this Doc View Source ActivatedPlugins Declaration public IReadOnlyCollection<IOpenModPlugin> ActivatedPlugins { get; } Property Value Type Description IReadOnlyCollection < IOpenModPlugin > Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source TryActivatePluginAsync(Assembly) Declaration public Task<IOpenModPlugin> TryActivatePluginAsync(Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description Task < IOpenModPlugin > Implements IPluginActivator IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.PluginAssemblyStore.html": {
    "href": "api/OpenMod.Core.Plugins.PluginAssemblyStore.html",
    "title": "Class PluginAssemblyStore | OpenMod Docs",
    "keywords": "Class PluginAssemblyStore Inheritance System.Object PluginAssemblyStore Implements IPluginAssemblyStore IDisposable Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public class PluginAssemblyStore : object, IPluginAssemblyStore, IDisposable Constructors | Improve this Doc View Source PluginAssemblyStore(ILogger<PluginAssemblyStore>, NuGetPackageManager) Declaration public PluginAssemblyStore(ILogger<PluginAssemblyStore> logger, NuGetPackageManager nuGetPackageManager) Parameters Type Name Description ILogger < PluginAssemblyStore > logger NuGetPackageManager nuGetPackageManager Properties | Improve this Doc View Source LoadedPluginAssemblies Declaration public IReadOnlyCollection<Assembly> LoadedPluginAssemblies { get; } Property Value Type Description IReadOnlyCollection < Assembly > | Improve this Doc View Source TryInstallMissingDependencies Defines if OpenMod would try to install missing dependencies. Declaration public static bool TryInstallMissingDependencies { get; set; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source LoadPluginAssembliesAsync(IPluginAssembliesSource) Declaration public Task<ICollection<Assembly>> LoadPluginAssembliesAsync(IPluginAssembliesSource source) Parameters Type Name Description IPluginAssembliesSource source Returns Type Description Task < ICollection < Assembly >> Implements IPluginAssemblyStore IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.PluginHelper.html": {
    "href": "api/OpenMod.Core.Plugins.PluginHelper.html",
    "title": "Class PluginHelper | OpenMod Docs",
    "keywords": "Class PluginHelper Inheritance System.Object PluginHelper Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public static class PluginHelper : object Methods | Improve this Doc View Source GetWorkingDirectory(IRuntime, String) Declaration public static string GetWorkingDirectory(IRuntime runtime, string pluginId) Parameters Type Name Description IRuntime runtime System.String pluginId Returns Type Description System.String"
  },
  "api/OpenMod.Core.Plugins.PluginHelpWriter.html": {
    "href": "api/OpenMod.Core.Plugins.PluginHelpWriter.html",
    "title": "Class PluginHelpWriter | OpenMod Docs",
    "keywords": "Class PluginHelpWriter Inheritance System.Object PluginHelpWriter Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public class PluginHelpWriter : object Constructors | Improve this Doc View Source PluginHelpWriter(ICommandPermissionBuilder, IPermissionRegistry, IOpenModPlugin, ICommandStore) Declaration public PluginHelpWriter(ICommandPermissionBuilder permissionBuilder, IPermissionRegistry permissionRegistry, IOpenModPlugin plugin, ICommandStore commandStore) Parameters Type Name Description ICommandPermissionBuilder permissionBuilder IPermissionRegistry permissionRegistry IOpenModPlugin plugin ICommandStore commandStore Methods | Improve this Doc View Source WriteHelpFileAsync() Declaration public Task WriteHelpFileAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.PluginServiceConfigurationContext.html": {
    "href": "api/OpenMod.Core.Plugins.PluginServiceConfigurationContext.html",
    "title": "Class PluginServiceConfigurationContext | OpenMod Docs",
    "keywords": "Class PluginServiceConfigurationContext Inheritance System.Object PluginServiceConfigurationContext Implements IPluginServiceConfigurationContext Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public class PluginServiceConfigurationContext : object, IPluginServiceConfigurationContext Constructors | Improve this Doc View Source PluginServiceConfigurationContext(ILifetimeScope, IConfigurationRoot, ContainerBuilder, String) Declaration public PluginServiceConfigurationContext(ILifetimeScope parentLifetimeScope, IConfigurationRoot configuration, ContainerBuilder containerBuilder, string workingDirectory) Parameters Type Name Description ILifetimeScope parentLifetimeScope IConfigurationRoot configuration ContainerBuilder containerBuilder System.String workingDirectory Properties | Improve this Doc View Source Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration | Improve this Doc View Source ContainerBuilder Declaration public ContainerBuilder ContainerBuilder { get; } Property Value Type Description ContainerBuilder | Improve this Doc View Source ParentLifetimeScope Declaration public ILifetimeScope ParentLifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; } Property Value Type Description System.String Implements IPluginServiceConfigurationContext Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Plugins.PluginStatus.html": {
    "href": "api/OpenMod.Core.Plugins.PluginStatus.html",
    "title": "Enum PluginStatus | OpenMod Docs",
    "keywords": "Enum PluginStatus The loading status of an OpenMod plugin. Namespace : OpenMod.Core.Plugins Assembly : OpenMod.Core.dll Syntax public enum PluginStatus : int Fields Name Description ExceptionWhenLoading The plugin threw an exception during the loading process. ExceptionWhenUnloading The plugin threw an exception during the unloading process. Initialized The plugin instance has been created but hasn't been loaded yet. Loaded The plugin has finished loading. Loading The plugin is loading, but has not yet finished. Unloaded The plugin has finished unloading. Unloading The plugin is unloading, but has not yet finished."
  },
  "api/OpenMod.Core.Prioritization.html": {
    "href": "api/OpenMod.Core.Prioritization.html",
    "title": "Namespace OpenMod.Core.Prioritization | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Prioritization Classes PriorityComparer PriorityExtensions Enums PriortyComparisonMode"
  },
  "api/OpenMod.Core.Prioritization.PriorityComparer.html": {
    "href": "api/OpenMod.Core.Prioritization.PriorityComparer.html",
    "title": "Class PriorityComparer | OpenMod Docs",
    "keywords": "Class PriorityComparer Inheritance System.Object PriorityComparer Implements IComparer < ServiceRegistration > Namespace : OpenMod.Core.Prioritization Assembly : OpenMod.Core.dll Syntax public class PriorityComparer : Comparer<Priority>, IComparer<ServiceRegistration> Constructors | Improve this Doc View Source PriorityComparer(PriortyComparisonMode) Declaration public PriorityComparer(PriortyComparisonMode comparisonMode) Parameters Type Name Description PriortyComparisonMode comparisonMode Methods | Improve this Doc View Source Compare(Priority, Priority) Declaration public override int Compare(Priority x, Priority y) Parameters Type Name Description Priority x Priority y Returns Type Description System.Int32 | Improve this Doc View Source Compare(ServiceRegistration, ServiceRegistration) Declaration public int Compare(ServiceRegistration x, ServiceRegistration y) Parameters Type Name Description ServiceRegistration x ServiceRegistration y Returns Type Description System.Int32 Implements IComparer<> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Prioritization.PriorityExtensions.html": {
    "href": "api/OpenMod.Core.Prioritization.PriorityExtensions.html",
    "title": "Class PriorityExtensions | OpenMod Docs",
    "keywords": "Class PriorityExtensions Inheritance System.Object PriorityExtensions Namespace : OpenMod.Core.Prioritization Assembly : OpenMod.Core.dll Syntax public static class PriorityExtensions : object Methods | Improve this Doc View Source GetPriority(Type) Declaration public static Priority GetPriority(this Type t) Parameters Type Name Description Type t Returns Type Description Priority"
  },
  "api/OpenMod.Core.Prioritization.PriortyComparisonMode.html": {
    "href": "api/OpenMod.Core.Prioritization.PriortyComparisonMode.html",
    "title": "Enum PriortyComparisonMode | OpenMod Docs",
    "keywords": "Enum PriortyComparisonMode Namespace : OpenMod.Core.Prioritization Assembly : OpenMod.Core.dll Syntax public enum PriortyComparisonMode : int Fields Name Description HighestFirst LowestFirst"
  },
  "api/OpenMod.Core.Rcon.ConnectionCloseReason.html": {
    "href": "api/OpenMod.Core.Rcon.ConnectionCloseReason.html",
    "title": "Enum ConnectionCloseReason | OpenMod Docs",
    "keywords": "Enum ConnectionCloseReason Namespace : OpenMod.Core.Rcon Assembly : OpenMod.Core.dll Syntax public enum ConnectionCloseReason : int Fields Name Description Aborted Closed Reset Unknown"
  },
  "api/OpenMod.Core.Rcon.Events.html": {
    "href": "api/OpenMod.Core.Rcon.Events.html",
    "title": "Namespace OpenMod.Core.Rcon.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Rcon.Events Classes RconClientAuthenticatingEvent RconClientConnectedEvent RconClientConnectingEvent RconClientDisconnectedEvent RconClientEvent"
  },
  "api/OpenMod.Core.Rcon.Events.RconClientAuthenticatingEvent.html": {
    "href": "api/OpenMod.Core.Rcon.Events.RconClientAuthenticatingEvent.html",
    "title": "Class RconClientAuthenticatingEvent | OpenMod Docs",
    "keywords": "Class RconClientAuthenticatingEvent Inheritance System.Object EventBase Event RconClientEvent RconClientAuthenticatingEvent Implements IEvent Inherited Members RconClientEvent.Client Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Rcon.Events Assembly : OpenMod.Core.dll Syntax public class RconClientAuthenticatingEvent : RconClientEvent, IEvent Constructors | Improve this Doc View Source RconClientAuthenticatingEvent(IRconClient, Nullable<String>, Nullable<String>) Declaration public RconClientAuthenticatingEvent(IRconClient client, string? username, string? password) Parameters Type Name Description IRconClient client System.Nullable < System.String > username System.Nullable < System.String > password Properties | Improve this Doc View Source IsAuthenticated Declaration public bool IsAuthenticated { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Password Declaration public string? Password { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Username Declaration public string? Username { get; } Property Value Type Description System.Nullable < System.String > Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Events.RconClientConnectedEvent.html": {
    "href": "api/OpenMod.Core.Rcon.Events.RconClientConnectedEvent.html",
    "title": "Class RconClientConnectedEvent | OpenMod Docs",
    "keywords": "Class RconClientConnectedEvent Inheritance System.Object EventBase Event RconClientEvent RconClientConnectedEvent Implements IEvent Inherited Members RconClientEvent.Client Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Rcon.Events Assembly : OpenMod.Core.dll Syntax public class RconClientConnectedEvent : RconClientEvent, IEvent Constructors | Improve this Doc View Source RconClientConnectedEvent(IRconClient) Declaration public RconClientConnectedEvent(IRconClient client) Parameters Type Name Description IRconClient client Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Events.RconClientConnectingEvent.html": {
    "href": "api/OpenMod.Core.Rcon.Events.RconClientConnectingEvent.html",
    "title": "Class RconClientConnectingEvent | OpenMod Docs",
    "keywords": "Class RconClientConnectingEvent Inheritance System.Object EventBase Event RconClientEvent RconClientConnectingEvent Implements ICancellableEvent IEvent Inherited Members RconClientEvent.Client Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Rcon.Events Assembly : OpenMod.Core.dll Syntax public class RconClientConnectingEvent : RconClientEvent, ICancellableEvent, IEvent Constructors | Improve this Doc View Source RconClientConnectingEvent(IRconClient) Declaration public RconClientConnectingEvent(IRconClient client) Parameters Type Name Description IRconClient client Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RejectionReason Declaration public string? RejectionReason { get; set; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source RejectAsync(Nullable<String>) Declaration public Task RejectAsync(string? reason) Parameters Type Name Description System.Nullable < System.String > reason Returns Type Description Task Implements ICancellableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Events.RconClientDisconnectedEvent.html": {
    "href": "api/OpenMod.Core.Rcon.Events.RconClientDisconnectedEvent.html",
    "title": "Class RconClientDisconnectedEvent | OpenMod Docs",
    "keywords": "Class RconClientDisconnectedEvent Inheritance System.Object EventBase Event RconClientEvent RconClientDisconnectedEvent Implements IEvent Inherited Members RconClientEvent.Client Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Rcon.Events Assembly : OpenMod.Core.dll Syntax public class RconClientDisconnectedEvent : RconClientEvent, IEvent Constructors | Improve this Doc View Source RconClientDisconnectedEvent(IRconClient, ConnectionCloseReason) Declaration public RconClientDisconnectedEvent(IRconClient client, ConnectionCloseReason connectionCloseReason) Parameters Type Name Description IRconClient client ConnectionCloseReason connectionCloseReason Properties | Improve this Doc View Source ConnectionCloseReason Declaration public ConnectionCloseReason ConnectionCloseReason { get; } Property Value Type Description ConnectionCloseReason Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Events.RconClientEvent.html": {
    "href": "api/OpenMod.Core.Rcon.Events.RconClientEvent.html",
    "title": "Class RconClientEvent | OpenMod Docs",
    "keywords": "Class RconClientEvent Inheritance System.Object EventBase Event RconClientEvent RconClientAuthenticatingEvent RconClientConnectedEvent RconClientConnectingEvent RconClientDisconnectedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Core.Rcon.Events Assembly : OpenMod.Core.dll Syntax public abstract class RconClientEvent : Event, IEvent Constructors | Improve this Doc View Source RconClientEvent(IRconClient) Declaration protected RconClientEvent(IRconClient client) Parameters Type Name Description IRconClient client Properties | Improve this Doc View Source Client Declaration public IRconClient Client { get; } Property Value Type Description IRconClient Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.html": {
    "href": "api/OpenMod.Core.Rcon.html",
    "title": "Namespace OpenMod.Core.Rcon | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Rcon Classes RconStartListener Interfaces IRconClient IRconHost Enums ConnectionCloseReason"
  },
  "api/OpenMod.Core.Rcon.IRconClient.html": {
    "href": "api/OpenMod.Core.Rcon.IRconClient.html",
    "title": "Interface IRconClient | OpenMod Docs",
    "keywords": "Interface IRconClient Inherited Members ICommandActor.PrintMessageAsync(String) ICommandActor.PrintMessageAsync(String, Color) IPermissionActor.Id IPermissionActor.Type IPermissionActor.DisplayName IPermissionActor.FullActorName Namespace : OpenMod.Core.Rcon Assembly : OpenMod.Core.dll Syntax public interface IRconClient : ICommandActor, IPermissionActor Properties | Improve this Doc View Source EndPoint Declaration EndPoint EndPoint { get; } Property Value Type Description EndPoint | Improve this Doc View Source Host Declaration IRconHost Host { get; } Property Value Type Description IRconHost | Improve this Doc View Source IsAuthenticated Declaration bool IsAuthenticated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsConnected Declaration bool IsConnected { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source DisconnectAsync(Nullable<String>, CancellationToken) Declaration Task DisconnectAsync(string? reason = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.Nullable < System.String > reason CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendMessageAsync(String, CancellationToken) Declaration Task SendMessageAsync(string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.String message CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source StartAsync(CancellationToken) Declaration Task StartAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.IRconHost.html": {
    "href": "api/OpenMod.Core.Rcon.IRconHost.html",
    "title": "Interface IRconHost | OpenMod Docs",
    "keywords": "Interface IRconHost Namespace : OpenMod.Core.Rcon Assembly : OpenMod.Core.dll Syntax public interface IRconHost Properties | Improve this Doc View Source IsListening Declaration bool IsListening { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source StartListeningAsync(IPEndPoint, CancellationToken) Declaration Task StartListeningAsync(IPEndPoint bind, CancellationToken cancellationToken = null) Parameters Type Name Description IPEndPoint bind CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source StopListeningAsync() Declaration Task StopListeningAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Minecraft.html": {
    "href": "api/OpenMod.Core.Rcon.Minecraft.html",
    "title": "Namespace OpenMod.Core.Rcon.Minecraft | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Rcon.Minecraft Classes MinecraftRconClient MinecraftRconHost MinecraftRconPacket Enums MinecraftPacketType"
  },
  "api/OpenMod.Core.Rcon.Minecraft.MinecraftPacketType.html": {
    "href": "api/OpenMod.Core.Rcon.Minecraft.MinecraftPacketType.html",
    "title": "Enum MinecraftPacketType | OpenMod Docs",
    "keywords": "Enum MinecraftPacketType Namespace : OpenMod.Core.Rcon.Minecraft Assembly : OpenMod.Core.dll Syntax public enum MinecraftPacketType : int Fields Name Description Command Login Response"
  },
  "api/OpenMod.Core.Rcon.Minecraft.MinecraftRconClient.html": {
    "href": "api/OpenMod.Core.Rcon.Minecraft.MinecraftRconClient.html",
    "title": "Class MinecraftRconClient | OpenMod Docs",
    "keywords": "Class MinecraftRconClient Inheritance System.Object BaseTcpRconClient MinecraftRconClient Implements IRconClient ICommandActor IPermissionActor Inherited Members BaseTcpRconClient.Id BaseTcpRconClient.Type BaseTcpRconClient.DisplayName BaseTcpRconClient.FullActorName BaseTcpRconClient.TcpClient BaseTcpRconClient.Host BaseTcpRconClient.EndPoint BaseTcpRconClient.IsConnected BaseTcpRconClient.IsAuthenticated BaseTcpRconClient.StartAsync(CancellationToken) BaseTcpRconClient.PrintMessageAsync(String) BaseTcpRconClient.PrintMessageAsync(String, Color) BaseTcpRconClient.DisconnectAsync(Nullable<String>, CancellationToken) BaseTcpRconClient.OnConnectionClosedAsync(ConnectionCloseReason) BaseTcpRconClient.OnExecuteCommandAsync(String) BaseTcpRconClient.SendDataAsync(Byte[], CancellationToken) BaseTcpRconClient.DisconnectOnFailedLoginAttemptsAsync() BaseTcpRconClient.OnAuthenticatingAsync(String, String) BaseTcpRconClient.IncreaseFailedAuthAttempts() BaseTcpRconClient.DisposeAsync(CancellationToken) BaseTcpRconClient.DisposeAsync() Namespace : OpenMod.Core.Rcon.Minecraft Assembly : OpenMod.Core.dll Syntax public class MinecraftRconClient : BaseTcpRconClient, IRconClient, ICommandActor, IPermissionActor Constructors | Improve this Doc View Source MinecraftRconClient(TcpClient, IRconHost, ILogger<MinecraftRconClient>, IConfiguration, IServiceProvider) Declaration public MinecraftRconClient(TcpClient tcpClient, IRconHost host, ILogger<MinecraftRconClient> logger, IConfiguration configuration, IServiceProvider serviceProvider) Parameters Type Name Description TcpClient tcpClient IRconHost host ILogger < MinecraftRconClient > logger IConfiguration configuration IServiceProvider serviceProvider Methods | Improve this Doc View Source OnClientAuthenticatedAsync() Declaration protected override Task OnClientAuthenticatedAsync() Returns Type Description Task Overrides BaseTcpRconClient.OnClientAuthenticatedAsync() | Improve this Doc View Source OnClientAuthenticationFailedAsync() Declaration protected override Task OnClientAuthenticationFailedAsync() Returns Type Description Task Overrides BaseTcpRconClient.OnClientAuthenticationFailedAsync() | Improve this Doc View Source OnDataReceivedAsync(ArraySegment<Byte>) Declaration protected override Task OnDataReceivedAsync(ArraySegment<byte> data) Parameters Type Name Description ArraySegment < System.Byte > data Returns Type Description Task Overrides BaseTcpRconClient.OnDataReceivedAsync(ArraySegment<Byte>) | Improve this Doc View Source SendMessageAsync(Int32, String, CancellationToken) Declaration protected virtual Task SendMessageAsync(int requestId, string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 requestId System.String message CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendMessageAsync(String, CancellationToken) Declaration public override Task SendMessageAsync(string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.String message CancellationToken cancellationToken Returns Type Description Task Overrides BaseTcpRconClient.SendMessageAsync(String, CancellationToken) | Improve this Doc View Source SendPacketAsync(MinecraftRconPacket, CancellationToken) Declaration protected virtual Task SendPacketAsync(MinecraftRconPacket packet, CancellationToken cancellationToken = null) Parameters Type Name Description MinecraftRconPacket packet CancellationToken cancellationToken Returns Type Description Task Implements IRconClient ICommandActor IPermissionActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Minecraft.MinecraftRconHost.html": {
    "href": "api/OpenMod.Core.Rcon.Minecraft.MinecraftRconHost.html",
    "title": "Class MinecraftRconHost | OpenMod Docs",
    "keywords": "Class MinecraftRconHost Inheritance System.Object BaseTcpRconHost < MinecraftRconClient > MinecraftRconHost Implements IRconHost IAsyncDisposable Inherited Members BaseTcpRconHost<MinecraftRconClient>.Bind BaseTcpRconHost<MinecraftRconClient>.IsListening BaseTcpRconHost<MinecraftRconClient>.StartListeningAsync(IPEndPoint, CancellationToken) BaseTcpRconHost<MinecraftRconClient>.OnClientConnected(TcpClient) BaseTcpRconHost<MinecraftRconClient>.StopListeningAsync() BaseTcpRconHost<MinecraftRconClient>.CreateRconClientAsync(TcpClient) BaseTcpRconHost<MinecraftRconClient>.DisposeAsync() Namespace : OpenMod.Core.Rcon.Minecraft Assembly : OpenMod.Core.dll Syntax public class MinecraftRconHost : BaseTcpRconHost<MinecraftRconClient>, IRconHost, IAsyncDisposable Constructors | Improve this Doc View Source MinecraftRconHost(IServiceProvider) Declaration public MinecraftRconHost(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IRconHost IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Minecraft.MinecraftRconPacket.html": {
    "href": "api/OpenMod.Core.Rcon.Minecraft.MinecraftRconPacket.html",
    "title": "Class MinecraftRconPacket | OpenMod Docs",
    "keywords": "Class MinecraftRconPacket Inheritance System.Object MinecraftRconPacket Namespace : OpenMod.Core.Rcon.Minecraft Assembly : OpenMod.Core.dll Syntax public class MinecraftRconPacket : object Properties | Improve this Doc View Source Payload Declaration public byte[] Payload { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source RequestId Declaration public int RequestId { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public MinecraftPacketType Type { get; set; } Property Value Type Description MinecraftPacketType Methods | Improve this Doc View Source ReadFromStreamAsync(Stream) Declaration public static Task<List<MinecraftRconPacket>> ReadFromStreamAsync(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Task < List < MinecraftRconPacket >> | Improve this Doc View Source Serialize() Declaration public byte[] Serialize() Returns Type Description System.Byte [] Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.RconStartListener.html": {
    "href": "api/OpenMod.Core.Rcon.RconStartListener.html",
    "title": "Class RconStartListener | OpenMod Docs",
    "keywords": "Class RconStartListener Inheritance System.Object RconStartListener Implements IEventListener < OpenModInitializedEvent > IEventListener Namespace : OpenMod.Core.Rcon Assembly : OpenMod.Core.dll Syntax public class RconStartListener : object, IEventListener<OpenModInitializedEvent>, IEventListener Constructors | Improve this Doc View Source RconStartListener(IEventBus, IRuntime, IConfiguration) Declaration public RconStartListener(IEventBus eventBus, IRuntime runtime, IConfiguration openModConfiguration) Parameters Type Name Description IEventBus eventBus IRuntime runtime IConfiguration openModConfiguration Methods | Improve this Doc View Source HandleEventAsync(Nullable<Object>, OpenModInitializedEvent) Declaration public Task HandleEventAsync(object? sender, OpenModInitializedEvent event) Parameters Type Name Description System.Nullable < System.Object > sender OpenModInitializedEvent event Returns Type Description Task Implements IEventListener<TEvent> IEventListener Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Source.html": {
    "href": "api/OpenMod.Core.Rcon.Source.html",
    "title": "Namespace OpenMod.Core.Rcon.Source | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Rcon.Source Classes SourceRconClient SourceRconHost SourceRconPacket"
  },
  "api/OpenMod.Core.Rcon.Source.SourceRconClient.html": {
    "href": "api/OpenMod.Core.Rcon.Source.SourceRconClient.html",
    "title": "Class SourceRconClient | OpenMod Docs",
    "keywords": "Class SourceRconClient Inheritance System.Object BaseTcpRconClient SourceRconClient Implements IRconClient ICommandActor IPermissionActor Inherited Members BaseTcpRconClient.Id BaseTcpRconClient.Type BaseTcpRconClient.DisplayName BaseTcpRconClient.FullActorName BaseTcpRconClient.TcpClient BaseTcpRconClient.Host BaseTcpRconClient.EndPoint BaseTcpRconClient.IsConnected BaseTcpRconClient.IsAuthenticated BaseTcpRconClient.StartAsync(CancellationToken) BaseTcpRconClient.PrintMessageAsync(String) BaseTcpRconClient.PrintMessageAsync(String, Color) BaseTcpRconClient.DisconnectAsync(Nullable<String>, CancellationToken) BaseTcpRconClient.OnConnectionClosedAsync(ConnectionCloseReason) BaseTcpRconClient.OnExecuteCommandAsync(String) BaseTcpRconClient.SendDataAsync(Byte[], CancellationToken) BaseTcpRconClient.DisconnectOnFailedLoginAttemptsAsync() BaseTcpRconClient.OnAuthenticatingAsync(String, String) BaseTcpRconClient.IncreaseFailedAuthAttempts() BaseTcpRconClient.DisposeAsync(CancellationToken) BaseTcpRconClient.DisposeAsync() Namespace : OpenMod.Core.Rcon.Source Assembly : OpenMod.Core.dll Syntax public class SourceRconClient : BaseTcpRconClient, IRconClient, ICommandActor, IPermissionActor Constructors | Improve this Doc View Source SourceRconClient(TcpClient, IRconHost, IServiceProvider, ILogger<SourceRconClient>) Declaration public SourceRconClient(TcpClient tcpClient, IRconHost host, IServiceProvider serviceProvider, ILogger<SourceRconClient> logger) Parameters Type Name Description TcpClient tcpClient IRconHost host IServiceProvider serviceProvider ILogger < SourceRconClient > logger Methods | Improve this Doc View Source OnClientAuthenticatedAsync() Declaration protected override Task OnClientAuthenticatedAsync() Returns Type Description Task Overrides BaseTcpRconClient.OnClientAuthenticatedAsync() | Improve this Doc View Source OnClientAuthenticationFailedAsync() Declaration protected override Task OnClientAuthenticationFailedAsync() Returns Type Description Task Overrides BaseTcpRconClient.OnClientAuthenticationFailedAsync() | Improve this Doc View Source OnDataReceivedAsync(ArraySegment<Byte>) Declaration protected override Task OnDataReceivedAsync(ArraySegment<byte> data) Parameters Type Name Description ArraySegment < System.Byte > data Returns Type Description Task Overrides BaseTcpRconClient.OnDataReceivedAsync(ArraySegment<Byte>) | Improve this Doc View Source ProcessPacketAsync(SourceRconPacket) Declaration protected virtual Task ProcessPacketAsync(SourceRconPacket packet) Parameters Type Name Description SourceRconPacket packet Returns Type Description Task | Improve this Doc View Source SendMessageAsync(Int32, String, CancellationToken) Declaration protected virtual Task SendMessageAsync(int requestId, string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 requestId System.String message CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendMessageAsync(String, CancellationToken) Declaration public override Task SendMessageAsync(string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.String message CancellationToken cancellationToken Returns Type Description Task Overrides BaseTcpRconClient.SendMessageAsync(String, CancellationToken) | Improve this Doc View Source SendPacketAsync(SourceRconPacket, CancellationToken) Declaration protected virtual Task SendPacketAsync(SourceRconPacket packet, CancellationToken cancellationToken = null) Parameters Type Name Description SourceRconPacket packet CancellationToken cancellationToken Returns Type Description Task Implements IRconClient ICommandActor IPermissionActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Source.SourceRconHost.html": {
    "href": "api/OpenMod.Core.Rcon.Source.SourceRconHost.html",
    "title": "Class SourceRconHost | OpenMod Docs",
    "keywords": "Class SourceRconHost Inheritance System.Object BaseTcpRconHost < SourceRconClient > SourceRconHost Implements IRconHost IAsyncDisposable Inherited Members BaseTcpRconHost<SourceRconClient>.Bind BaseTcpRconHost<SourceRconClient>.IsListening BaseTcpRconHost<SourceRconClient>.StartListeningAsync(IPEndPoint, CancellationToken) BaseTcpRconHost<SourceRconClient>.OnClientConnected(TcpClient) BaseTcpRconHost<SourceRconClient>.StopListeningAsync() BaseTcpRconHost<SourceRconClient>.CreateRconClientAsync(TcpClient) BaseTcpRconHost<SourceRconClient>.DisposeAsync() Namespace : OpenMod.Core.Rcon.Source Assembly : OpenMod.Core.dll Syntax public class SourceRconHost : BaseTcpRconHost<SourceRconClient>, IRconHost, IAsyncDisposable Constructors | Improve this Doc View Source SourceRconHost(IServiceProvider) Declaration public SourceRconHost(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Implements IRconHost IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Source.SourceRconPacket.html": {
    "href": "api/OpenMod.Core.Rcon.Source.SourceRconPacket.html",
    "title": "Class SourceRconPacket | OpenMod Docs",
    "keywords": "Class SourceRconPacket Inheritance System.Object SourceRconPacket Namespace : OpenMod.Core.Rcon.Source Assembly : OpenMod.Core.dll Syntax public class SourceRconPacket : object Fields | Improve this Doc View Source ServerDataAuthPacket Declaration public const string ServerDataAuthPacket = null Field Value Type Description System.String | Improve this Doc View Source ServerDataAuthResponsePacket Declaration public const string ServerDataAuthResponsePacket = null Field Value Type Description System.String | Improve this Doc View Source ServerDataExecuteCommandPacket Declaration public const string ServerDataExecuteCommandPacket = null Field Value Type Description System.String | Improve this Doc View Source ServerDataResponsePacket Declaration public const string ServerDataResponsePacket = null Field Value Type Description System.String Properties | Improve this Doc View Source Body Declaration public string? Body { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source RequestId Declaration public int RequestId { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public string? Type { get; set; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source ReadFromStreamAsync(Stream) Declaration public static Task<List<SourceRconPacket>> ReadFromStreamAsync(Stream stream) Parameters Type Name Description Stream stream Returns Type Description Task < List < SourceRconPacket >> | Improve this Doc View Source Serialize() Declaration public byte[] Serialize() Returns Type Description System.Byte [] Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Tcp.BaseTcpRconClient.html": {
    "href": "api/OpenMod.Core.Rcon.Tcp.BaseTcpRconClient.html",
    "title": "Class BaseTcpRconClient | OpenMod Docs",
    "keywords": "Class BaseTcpRconClient Inheritance System.Object BaseTcpRconClient MinecraftRconClient SourceRconClient Implements IRconClient ICommandActor IPermissionActor Namespace : OpenMod.Core.Rcon.Tcp Assembly : OpenMod.Core.dll Syntax public abstract class BaseTcpRconClient : IAsyncDisposable, IRconClient, ICommandActor, IPermissionActor Constructors | Improve this Doc View Source BaseTcpRconClient(TcpClient, IRconHost, IServiceProvider) Declaration protected BaseTcpRconClient(TcpClient tcpClient, IRconHost host, IServiceProvider serviceProvider) Parameters Type Name Description TcpClient tcpClient IRconHost host IServiceProvider serviceProvider Properties | Improve this Doc View Source DisplayName Declaration public virtual string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source EndPoint Declaration public EndPoint EndPoint { get; } Property Value Type Description EndPoint | Improve this Doc View Source FullActorName Declaration public virtual string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Host Declaration public IRconHost Host { get; } Property Value Type Description IRconHost | Improve this Doc View Source Id Declaration public virtual string Id { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source IsAuthenticated Declaration public bool IsAuthenticated { get; protected set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsConnected Declaration public bool IsConnected { get; } Property Value Type Description System.Boolean | Improve this Doc View Source TcpClient Declaration public TcpClient TcpClient { get; set; } Property Value Type Description TcpClient | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description System.String Methods | Improve this Doc View Source DisconnectAsync(Nullable<String>, CancellationToken) Declaration public virtual Task DisconnectAsync(string? reason = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.Nullable < System.String > reason CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DisconnectOnFailedLoginAttemptsAsync() Declaration protected Task<bool> DisconnectOnFailedLoginAttemptsAsync() Returns Type Description Task < System.Boolean > | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source DisposeAsync(CancellationToken) Declaration public virtual ValueTask DisposeAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description ValueTask | Improve this Doc View Source IncreaseFailedAuthAttempts() Declaration protected void IncreaseFailedAuthAttempts() | Improve this Doc View Source OnAuthenticatingAsync(String, String) Declaration protected virtual Task OnAuthenticatingAsync(string username, string password) Parameters Type Name Description System.String username System.String password Returns Type Description Task | Improve this Doc View Source OnClientAuthenticatedAsync() Declaration protected virtual Task OnClientAuthenticatedAsync() Returns Type Description Task | Improve this Doc View Source OnClientAuthenticationFailedAsync() Declaration protected virtual Task OnClientAuthenticationFailedAsync() Returns Type Description Task | Improve this Doc View Source OnConnectionClosedAsync(ConnectionCloseReason) Declaration protected virtual Task OnConnectionClosedAsync(ConnectionCloseReason connectionCloseReason) Parameters Type Name Description ConnectionCloseReason connectionCloseReason Returns Type Description Task | Improve this Doc View Source OnDataReceivedAsync(ArraySegment<Byte>) Declaration protected abstract Task OnDataReceivedAsync(ArraySegment<byte> data) Parameters Type Name Description ArraySegment < System.Byte > data Returns Type Description Task | Improve this Doc View Source OnExecuteCommandAsync(String) Declaration protected virtual Task OnExecuteCommandAsync(string command) Parameters Type Name Description System.String command Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String) Declaration public virtual Task PrintMessageAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, Color) Declaration public virtual Task PrintMessageAsync(string message, Color color) Parameters Type Name Description System.String message Color color Returns Type Description Task | Improve this Doc View Source SendDataAsync(Byte[], CancellationToken) Declaration public virtual Task SendDataAsync(byte[] data, CancellationToken cancellationToken = null) Parameters Type Name Description System.Byte [] data CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendMessageAsync(String, CancellationToken) Declaration public abstract Task SendMessageAsync(string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.String message CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source StartAsync(CancellationToken) Declaration public virtual Task StartAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Implements IRconClient ICommandActor IPermissionActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Tcp.BaseTcpRconHost-1.html": {
    "href": "api/OpenMod.Core.Rcon.Tcp.BaseTcpRconHost-1.html",
    "title": "Class BaseTcpRconHost<TClient> | OpenMod Docs",
    "keywords": "Class BaseTcpRconHost<TClient> Inheritance System.Object BaseTcpRconHost<TClient> MinecraftRconHost SourceRconHost Implements IRconHost IAsyncDisposable Namespace : OpenMod.Core.Rcon.Tcp Assembly : OpenMod.Core.dll Syntax public abstract class BaseTcpRconHost<TClient> : object, IRconHost, IAsyncDisposable where TClient : class, IRconClient Type Parameters Name Description TClient Constructors | Improve this Doc View Source BaseTcpRconHost(IServiceProvider) Declaration protected BaseTcpRconHost(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Properties | Improve this Doc View Source Bind Declaration public IPEndPoint? Bind { get; } Property Value Type Description System.Nullable < IPEndPoint > | Improve this Doc View Source IsListening Declaration public bool IsListening { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CreateRconClientAsync(TcpClient) Declaration protected virtual Task<TClient> CreateRconClientAsync(TcpClient tcpClient) Parameters Type Name Description TcpClient tcpClient Returns Type Description Task <TClient> | Improve this Doc View Source DisposeAsync() Declaration public virtual ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source OnClientConnected(TcpClient) Declaration protected virtual Task<TClient> OnClientConnected(TcpClient tcpClient) Parameters Type Name Description TcpClient tcpClient Returns Type Description Task <TClient> | Improve this Doc View Source StartListeningAsync(IPEndPoint, CancellationToken) Declaration public virtual Task StartListeningAsync(IPEndPoint bind, CancellationToken cancellationToken = null) Parameters Type Name Description IPEndPoint bind CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source StopListeningAsync() Declaration public virtual Task StopListeningAsync() Returns Type Description Task Implements IRconHost IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Rcon.Tcp.html": {
    "href": "api/OpenMod.Core.Rcon.Tcp.html",
    "title": "Namespace OpenMod.Core.Rcon.Tcp | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Rcon.Tcp Classes BaseTcpRconClient BaseTcpRconHost<TClient>"
  },
  "api/OpenMod.Core.ServiceConfigurator.html": {
    "href": "api/OpenMod.Core.ServiceConfigurator.html",
    "title": "Class ServiceConfigurator | OpenMod Docs",
    "keywords": "Class ServiceConfigurator Inheritance System.Object ServiceConfigurator Implements IServiceConfigurator Namespace : OpenMod.Core Assembly : OpenMod.Core.dll Syntax public class ServiceConfigurator : object, IServiceConfigurator Methods | Improve this Doc View Source ConfigureServices(IOpenModServiceConfigurationContext, IServiceCollection) Declaration public void ConfigureServices(IOpenModServiceConfigurationContext openModStartupContext, IServiceCollection serviceCollection) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext IServiceCollection serviceCollection Implements IServiceConfigurator Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Tests.Commands.html": {
    "href": "api/OpenMod.Core.Tests.Commands.html",
    "title": "Namespace OpenMod.Core.Tests.Commands | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Tests.Commands Classes TypeDescriptorCommandParameterResolveProviderTests"
  },
  "api/OpenMod.Core.Tests.Commands.TypeDescriptorCommandParameterResolveProviderTests.html": {
    "href": "api/OpenMod.Core.Tests.Commands.TypeDescriptorCommandParameterResolveProviderTests.html",
    "title": "Class TypeDescriptorCommandParameterResolveProviderTests | OpenMod Docs",
    "keywords": "Class TypeDescriptorCommandParameterResolveProviderTests Inheritance System.Object TypeDescriptorCommandParameterResolveProviderTests Namespace : OpenMod.Core.Tests.Commands Assembly : OpenMod.Core.Tests.dll Syntax public class TypeDescriptorCommandParameterResolveProviderTests : object Methods | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source ResolveAsync_ShouldReturnValidObject(String, Object) Declaration public Task ResolveAsync_ShouldReturnValidObject(string input, object expected) Parameters Type Name Description System.String input System.Object expected Returns Type Description Task | Improve this Doc View Source ResolveAsync_ShouldThrowArgumentException_WhenTypeIsNotSupported(Type) Declaration public Task ResolveAsync_ShouldThrowArgumentException_WhenTypeIsNotSupported(Type type) Parameters Type Name Description Type type Returns Type Description Task | Improve this Doc View Source ResolveAsync_ShouldThrowCommandParameterParseException_WhenPassingInvalidArgument(Type, String) Declaration public Task ResolveAsync_ShouldThrowCommandParameterParseException_WhenPassingInvalidArgument(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task | Improve this Doc View Source Supports_ShouldReturnFalse_WhenTypeIsNotSupported(Type) Declaration public void Supports_ShouldReturnFalse_WhenTypeIsNotSupported(Type type) Parameters Type Name Description Type type | Improve this Doc View Source Supports_ShouldReturnTrue_WhenTypeIsSupported(Type) Declaration public void Supports_ShouldReturnTrue_WhenTypeIsSupported(Type type) Parameters Type Name Description Type type Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Tests.Users.html": {
    "href": "api/OpenMod.Core.Tests.Users.html",
    "title": "Namespace OpenMod.Core.Tests.Users | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Tests.Users Classes UserCommandParameterResolveProviderTests"
  },
  "api/OpenMod.Core.Tests.Users.UserCommandParameterResolveProviderTests.html": {
    "href": "api/OpenMod.Core.Tests.Users.UserCommandParameterResolveProviderTests.html",
    "title": "Class UserCommandParameterResolveProviderTests | OpenMod Docs",
    "keywords": "Class UserCommandParameterResolveProviderTests Inheritance System.Object UserCommandParameterResolveProviderTests Namespace : OpenMod.Core.Tests.Users Assembly : OpenMod.Core.Tests.dll Syntax public class UserCommandParameterResolveProviderTests : object Methods | Improve this Doc View Source Initialize() Declaration public void Initialize() | Improve this Doc View Source ResolveAsync_ShouldReturnUser_WhenUserExists(String, String, String) Declaration public Task ResolveAsync_ShouldReturnUser_WhenUserExists(string input, string actorType, string actorNameOrId) Parameters Type Name Description System.String input System.String actorType System.String actorNameOrId Returns Type Description Task | Improve this Doc View Source ResolveAsync_ShouldThrowArgumentException_WhenTypeIsNotSupported(Type) Declaration public Task ResolveAsync_ShouldThrowArgumentException_WhenTypeIsNotSupported(Type type) Parameters Type Name Description Type type Returns Type Description Task | Improve this Doc View Source Supports_ShouldReturnFalse_WhenTypeIsNotSupported(Type) Declaration public void Supports_ShouldReturnFalse_WhenTypeIsNotSupported(Type type) Parameters Type Name Description Type type | Improve this Doc View Source Supports_ShouldReturnTrue_WhenTypeIsSupported(Type) Declaration public void Supports_ShouldReturnTrue_WhenTypeIsSupported(Type type) Parameters Type Name Description Type type Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.Events.html": {
    "href": "api/OpenMod.Core.Users.Events.html",
    "title": "Namespace OpenMod.Core.Users.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Users.Events Interfaces IUserConnectedEvent IUserConnectingEvent The event that is triggered when a user attempts to connect to the server. IUserDisconnectedEvent IUserEvent The base interface for all user related events. IUserFirstConnectingEvent The event that is triggered when a user connects for the first time."
  },
  "api/OpenMod.Core.Users.Events.IUserConnectedEvent.html": {
    "href": "api/OpenMod.Core.Users.Events.IUserConnectedEvent.html",
    "title": "Interface IUserConnectedEvent | OpenMod Docs",
    "keywords": "Interface IUserConnectedEvent Inherited Members IUserEvent.User IEvent.Arguments IEvent.Data Namespace : OpenMod.Core.Users.Events Assembly : OpenMod.Core.dll Syntax public interface IUserConnectedEvent : IUserEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.Events.IUserConnectingEvent.html": {
    "href": "api/OpenMod.Core.Users.Events.IUserConnectingEvent.html",
    "title": "Interface IUserConnectingEvent | OpenMod Docs",
    "keywords": "Interface IUserConnectingEvent The event that is triggered when a user attempts to connect to the server. Inherited Members IUserEvent.User ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Core.Users.Events Assembly : OpenMod.Core.dll Syntax public interface IUserConnectingEvent : IUserEvent, ICancellableEvent, IEvent Properties | Improve this Doc View Source RejectionReason Gets the rejection reason. If not null; will reject the user. Use RejectAsync(String) to set the value. Declaration string? RejectionReason { get; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source RejectAsync(String) Rejects a players connection attempt. Declaration Task RejectAsync(string reason) Parameters Type Name Description System.String reason The reason of the rejection. Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.Events.IUserDisconnectedEvent.html": {
    "href": "api/OpenMod.Core.Users.Events.IUserDisconnectedEvent.html",
    "title": "Interface IUserDisconnectedEvent | OpenMod Docs",
    "keywords": "Interface IUserDisconnectedEvent Inherited Members IUserEvent.User IEvent.Arguments IEvent.Data Namespace : OpenMod.Core.Users.Events Assembly : OpenMod.Core.dll Syntax public interface IUserDisconnectedEvent : IUserEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.Events.IUserEvent.html": {
    "href": "api/OpenMod.Core.Users.Events.IUserEvent.html",
    "title": "Interface IUserEvent | OpenMod Docs",
    "keywords": "Interface IUserEvent The base interface for all user related events. Inherited Members IEvent.Arguments IEvent.Data Namespace : OpenMod.Core.Users.Events Assembly : OpenMod.Core.dll Syntax public interface IUserEvent : IEvent Properties | Improve this Doc View Source User Gets the user related to the event. Declaration IUser User { get; } Property Value Type Description IUser Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.Events.IUserFirstConnectingEvent.html": {
    "href": "api/OpenMod.Core.Users.Events.IUserFirstConnectingEvent.html",
    "title": "Interface IUserFirstConnectingEvent | OpenMod Docs",
    "keywords": "Interface IUserFirstConnectingEvent The event that is triggered when a user connects for the first time. Inherited Members IUserConnectingEvent.RejectionReason IUserConnectingEvent.RejectAsync(String) IUserEvent.User ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Core.Users.Events Assembly : OpenMod.Core.dll Syntax public interface IUserFirstConnectingEvent : IUserConnectingEvent, IUserEvent, ICancellableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.html": {
    "href": "api/OpenMod.Core.Users.html",
    "title": "Namespace OpenMod.Core.Users | OpenMod Docs",
    "keywords": "Namespace OpenMod.Core.Users Classes KnownActorTypes OfflineUser OfflineUserProvider UserBase UserCommandParameterResolveProvider UserDataSeeder UserDataStore UserManager UserManagerOptions UsersData UserSessionBase"
  },
  "api/OpenMod.Core.Users.KnownActorTypes.html": {
    "href": "api/OpenMod.Core.Users.KnownActorTypes.html",
    "title": "Class KnownActorTypes | OpenMod Docs",
    "keywords": "Class KnownActorTypes Inheritance System.Object KnownActorTypes Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public static class KnownActorTypes : object Fields | Improve this Doc View Source Console Declaration public const string Console = null Field Value Type Description System.String | Improve this Doc View Source Player Declaration public const string Player = null Field Value Type Description System.String | Improve this Doc View Source Rcon Declaration public const string Rcon = null Field Value Type Description System.String"
  },
  "api/OpenMod.Core.Users.OfflineUser.html": {
    "href": "api/OpenMod.Core.Users.OfflineUser.html",
    "title": "Class OfflineUser | OpenMod Docs",
    "keywords": "Class OfflineUser Inheritance System.Object UserBase OfflineUser Implements IUser ICommandActor IPermissionActor Inherited Members UserBase.Id UserBase.Type UserBase.DisplayName UserBase.FullActorName UserBase.Provider UserBase.Session UserBase.SavePersistentDataAsync<T>(String, T) UserBase.GetPersistentDataAsync<T>(String) UserBase.ToString() Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public class OfflineUser : UserBase, IUser, ICommandActor, IPermissionActor Constructors | Improve this Doc View Source OfflineUser(IUserProvider, IUserDataStore, UserData) Declaration public OfflineUser(IUserProvider userProvider, IUserDataStore userDataStore, UserData data) Parameters Type Name Description IUserProvider userProvider IUserDataStore userDataStore UserData data Methods | Improve this Doc View Source PrintMessageAsync(String) Declaration public override Task PrintMessageAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task Overrides UserBase.PrintMessageAsync(String) | Improve this Doc View Source PrintMessageAsync(String, Color) Declaration public override Task PrintMessageAsync(string message, Color color) Parameters Type Name Description System.String message Color color Returns Type Description Task Overrides UserBase.PrintMessageAsync(String, Color) Implements IUser ICommandActor IPermissionActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.OfflineUserProvider.html": {
    "href": "api/OpenMod.Core.Users.OfflineUserProvider.html",
    "title": "Class OfflineUserProvider | OpenMod Docs",
    "keywords": "Class OfflineUserProvider Inheritance System.Object OfflineUserProvider Implements IUserProvider Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public class OfflineUserProvider : object, IUserProvider Constructors | Improve this Doc View Source OfflineUserProvider(IOpenModStringLocalizer, IUserDataStore) Declaration public OfflineUserProvider(IOpenModStringLocalizer stringLocalizer, IUserDataStore userDataStore) Parameters Type Name Description IOpenModStringLocalizer stringLocalizer IUserDataStore userDataStore Methods | Improve this Doc View Source BanAsync(IUser, IUser, Nullable<String>, Nullable<DateTime>) Declaration public Task<bool> BanAsync(IUser user, IUser instigator = null, string? reason = null, DateTime? expireDate = null) Parameters Type Name Description IUser user IUser instigator System.Nullable < System.String > reason System.Nullable < DateTime > expireDate Returns Type Description Task < System.Boolean > | Improve this Doc View Source BanAsync(IUser, Nullable<String>, Nullable<DateTime>) Declaration public Task<bool> BanAsync(IUser user, string? reason = null, DateTime? endTime = null) Parameters Type Name Description IUser user System.Nullable < System.String > reason System.Nullable < DateTime > endTime Returns Type Description Task < System.Boolean > | Improve this Doc View Source BroadcastAsync(String, Nullable<Color>) Declaration public Task BroadcastAsync(string message, Color? color) Parameters Type Name Description System.String message System.Nullable < Color > color Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, String, Nullable<Color>) Declaration public Task BroadcastAsync(string userType, string message, Color? color) Parameters Type Name Description System.String userType System.String message System.Nullable < Color > color Returns Type Description Task | Improve this Doc View Source FindUserAsync(String, String, UserSearchMode) Declaration public Task<IUser> FindUserAsync(string userType, string searchString, UserSearchMode searchMode) Parameters Type Name Description System.String userType System.String searchString UserSearchMode searchMode Returns Type Description Task < IUser > | Improve this Doc View Source GetUsersAsync(String) Declaration public Task<IReadOnlyCollection<IUser>> GetUsersAsync(string userType) Parameters Type Name Description System.String userType Returns Type Description Task < IReadOnlyCollection < IUser >> | Improve this Doc View Source KickAsync(IUser, Nullable<String>) Declaration public Task<bool> KickAsync(IUser user, string? reason = null) Parameters Type Name Description IUser user System.Nullable < System.String > reason Returns Type Description Task < System.Boolean > | Improve this Doc View Source SupportsUserType(String) Declaration public bool SupportsUserType(string userType) Parameters Type Name Description System.String userType Returns Type Description System.Boolean Implements IUserProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.UserBase.html": {
    "href": "api/OpenMod.Core.Users.UserBase.html",
    "title": "Class UserBase | OpenMod Docs",
    "keywords": "Class UserBase Inheritance System.Object UserBase OfflineUser Implements IUser ICommandActor IPermissionActor Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public abstract class UserBase : object, IUser, ICommandActor, IPermissionActor Constructors | Improve this Doc View Source UserBase(IUserProvider, IUserDataStore) Declaration protected UserBase(IUserProvider userProvider, IUserDataStore userDataStore) Parameters Type Name Description IUserProvider userProvider IUserDataStore userDataStore Properties | Improve this Doc View Source DisplayName Declaration public virtual string DisplayName { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source FullActorName Declaration public virtual string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public virtual string Id { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source Provider Declaration public virtual IUserProvider Provider { get; } Property Value Type Description IUserProvider | Improve this Doc View Source Session Declaration public virtual IUserSession Session { get; protected set; } Property Value Type Description IUserSession | Improve this Doc View Source Type Declaration public virtual string Type { get; protected set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetPersistentDataAsync<T>(String) Declaration public Task<T> GetPersistentDataAsync<T>(string key) Parameters Type Name Description System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source PrintMessageAsync(String) Declaration public abstract Task PrintMessageAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, Color) Declaration public abstract Task PrintMessageAsync(string message, Color color) Parameters Type Name Description System.String message Color color Returns Type Description Task | Improve this Doc View Source SavePersistentDataAsync<T>(String, T) Declaration public Task SavePersistentDataAsync<T>(string key, T data) Parameters Type Name Description System.String key T data Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Implements IUser ICommandActor IPermissionActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.UserCommandParameterResolveProvider.html": {
    "href": "api/OpenMod.Core.Users.UserCommandParameterResolveProvider.html",
    "title": "Class UserCommandParameterResolveProvider | OpenMod Docs",
    "keywords": "Class UserCommandParameterResolveProvider Inheritance System.Object UserCommandParameterResolveProvider Implements ICommandParameterResolveProvider Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public class UserCommandParameterResolveProvider : object, ICommandParameterResolveProvider Constructors | Improve this Doc View Source UserCommandParameterResolveProvider(IUserManager, String, Char) Declaration public UserCommandParameterResolveProvider(IUserManager userProvider, string defaultActorType = null, char separator = ':') Parameters Type Name Description IUserManager userProvider System.String defaultActorType System.Char separator Methods | Improve this Doc View Source ResolveAsync(Type, String) Declaration public Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source Supports(Type) Declaration public bool Supports(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Implements ICommandParameterResolveProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.UserDataSeeder.html": {
    "href": "api/OpenMod.Core.Users.UserDataSeeder.html",
    "title": "Class UserDataSeeder | OpenMod Docs",
    "keywords": "Class UserDataSeeder Inheritance System.Object UserDataSeeder Implements IUserDataSeeder Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public class UserDataSeeder : object, IUserDataSeeder Constructors | Improve this Doc View Source UserDataSeeder(IUserDataStore, IPermissionRoleStore) Declaration public UserDataSeeder(IUserDataStore userDataStore, IPermissionRoleStore permissionRoleStore) Parameters Type Name Description IUserDataStore userDataStore IPermissionRoleStore permissionRoleStore Methods | Improve this Doc View Source SeedUserDataAsync(String, String, Nullable<String>, Nullable<Dictionary<String, Nullable<Object>>>) Declaration public Task SeedUserDataAsync(string actorId, string actorType, string? displayName, Dictionary<string, object?>? data = null) Parameters Type Name Description System.String actorId System.String actorType System.Nullable < System.String > displayName System.Nullable < Dictionary < System.String , System.Nullable < System.Object >>> data Returns Type Description Task Implements IUserDataSeeder Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.UserDataStore.html": {
    "href": "api/OpenMod.Core.Users.UserDataStore.html",
    "title": "Class UserDataStore | OpenMod Docs",
    "keywords": "Class UserDataStore Inheritance System.Object UserDataStore Implements IUserDataStore IAsyncDisposable Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public class UserDataStore : object, IUserDataStore, IAsyncDisposable Constructors | Improve this Doc View Source UserDataStore(IOpenModDataStoreAccessor, IRuntime) Declaration public UserDataStore(IOpenModDataStoreAccessor dataStoreAccessor, IRuntime runtime) Parameters Type Name Description IOpenModDataStoreAccessor dataStoreAccessor IRuntime runtime Fields | Improve this Doc View Source UsersKey Declaration public const string UsersKey = null Field Value Type Description System.String Methods | Improve this Doc View Source DisposeAsync() Declaration public ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source GetUserDataAsync(String, String) Declaration public Task<UserData> GetUserDataAsync(string userId, string userType) Parameters Type Name Description System.String userId System.String userType Returns Type Description Task < UserData > | Improve this Doc View Source GetUserDataAsync<T>(String, String, String) Declaration public Task<T> GetUserDataAsync<T>(string userId, string userType, string key) Parameters Type Name Description System.String userId System.String userType System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source GetUsersDataAsync(String) Declaration public Task<IReadOnlyCollection<UserData>> GetUsersDataAsync(string type) Parameters Type Name Description System.String type Returns Type Description Task < IReadOnlyCollection < UserData >> | Improve this Doc View Source SetUserDataAsync(UserData) Declaration public Task SetUserDataAsync(UserData userData) Parameters Type Name Description UserData userData Returns Type Description Task | Improve this Doc View Source SetUserDataAsync<T>(String, String, String, T) Declaration public Task SetUserDataAsync<T>(string userId, string userType, string key, T value) Parameters Type Name Description System.String userId System.String userType System.String key T value Returns Type Description Task Type Parameters Name Description T Implements IUserDataStore IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.UserManager.html": {
    "href": "api/OpenMod.Core.Users.UserManager.html",
    "title": "Class UserManager | OpenMod Docs",
    "keywords": "Class UserManager Inheritance System.Object UserManager Implements IUserManager IAsyncDisposable Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public class UserManager : object, IUserManager, IAsyncDisposable Constructors | Improve this Doc View Source UserManager(IOptions<UserManagerOptions>, ILifetimeScope) Declaration public UserManager(IOptions<UserManagerOptions> options, ILifetimeScope lifetimeScope) Parameters Type Name Description IOptions < UserManagerOptions > options ILifetimeScope lifetimeScope Properties | Improve this Doc View Source UserProviders Declaration public IReadOnlyCollection<IUserProvider> UserProviders { get; } Property Value Type Description IReadOnlyCollection < IUserProvider > Methods | Improve this Doc View Source BanAsync(IUser, IUser, Nullable<String>, Nullable<DateTime>) Declaration public Task<bool> BanAsync(IUser user, IUser instigator = null, string? reason = null, DateTime? endTime = null) Parameters Type Name Description IUser user IUser instigator System.Nullable < System.String > reason System.Nullable < DateTime > endTime Returns Type Description Task < System.Boolean > | Improve this Doc View Source BanAsync(IUser, Nullable<String>, Nullable<DateTime>) Declaration public Task<bool> BanAsync(IUser user, string? reason = null, DateTime? endTime = null) Parameters Type Name Description IUser user System.Nullable < System.String > reason System.Nullable < DateTime > endTime Returns Type Description Task < System.Boolean > | Improve this Doc View Source BroadcastAsync(String) Declaration public virtual Task BroadcastAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, Nullable<Color>) Declaration public virtual Task BroadcastAsync(string message, Color? color) Parameters Type Name Description System.String message System.Nullable < Color > color Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, String) Declaration public virtual Task BroadcastAsync(string userType, string message) Parameters Type Name Description System.String userType System.String message Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, String, Nullable<Color>) Declaration public virtual Task BroadcastAsync(string userType, string message, Color? color) Parameters Type Name Description System.String userType System.String message System.Nullable < Color > color Returns Type Description Task | Improve this Doc View Source DisposeAsync() Declaration public virtual ValueTask DisposeAsync() Returns Type Description ValueTask | Improve this Doc View Source FindUserAsync(String, String, UserSearchMode) Declaration public virtual Task<IUser> FindUserAsync(string userType, string searchString, UserSearchMode searchMode) Parameters Type Name Description System.String userType System.String searchString UserSearchMode searchMode Returns Type Description Task < IUser > | Improve this Doc View Source GetUsersAsync(String) Declaration public virtual Task<IReadOnlyCollection<IUser>> GetUsersAsync(string userType) Parameters Type Name Description System.String userType Returns Type Description Task < IReadOnlyCollection < IUser >> | Improve this Doc View Source KickAsync(IUser, Nullable<String>) Declaration public Task<bool> KickAsync(IUser user, string? reason = null) Parameters Type Name Description IUser user System.Nullable < System.String > reason Returns Type Description Task < System.Boolean > Implements IUserManager IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.UserManagerOptions.html": {
    "href": "api/OpenMod.Core.Users.UserManagerOptions.html",
    "title": "Class UserManagerOptions | OpenMod Docs",
    "keywords": "Class UserManagerOptions Inheritance System.Object UserManagerOptions Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public class UserManagerOptions : object Constructors | Improve this Doc View Source UserManagerOptions() Declaration public UserManagerOptions() Properties | Improve this Doc View Source UserProviderTypes Declaration public IReadOnlyCollection<Type> UserProviderTypes { get; } Property Value Type Description IReadOnlyCollection < Type > Methods | Improve this Doc View Source AddUserProvider(Type) Declaration public void AddUserProvider(Type type) Parameters Type Name Description Type type | Improve this Doc View Source AddUserProvider<TProvider>() Declaration public void AddUserProvider<TProvider>() where TProvider : IUserProvider Type Parameters Name Description TProvider | Improve this Doc View Source RemoveUserProvider(Type) Declaration public bool RemoveUserProvider(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean | Improve this Doc View Source RemoveUserProvider<TProvider>() Declaration public void RemoveUserProvider<TProvider>() where TProvider : IUserProvider Type Parameters Name Description TProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.UsersData.html": {
    "href": "api/OpenMod.Core.Users.UsersData.html",
    "title": "Class UsersData | OpenMod Docs",
    "keywords": "Class UsersData Inheritance System.Object UsersData Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public sealed class UsersData : object Properties | Improve this Doc View Source Users Declaration public List<UserData>? Users { get; set; } Property Value Type Description System.Nullable < List < UserData >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Core.Users.UserSessionBase.html": {
    "href": "api/OpenMod.Core.Users.UserSessionBase.html",
    "title": "Class UserSessionBase | OpenMod Docs",
    "keywords": "Class UserSessionBase Inheritance System.Object UserSessionBase Implements IUserSession Namespace : OpenMod.Core.Users Assembly : OpenMod.Core.dll Syntax public abstract class UserSessionBase : object, IUserSession Constructors | Improve this Doc View Source UserSessionBase(IUser) Declaration protected UserSessionBase(IUser user) Parameters Type Name Description IUser user Properties | Improve this Doc View Source InstanceData Declaration public Dictionary<string, object?> InstanceData { get; } Property Value Type Description Dictionary < System.String , System.Nullable < System.Object >> | Improve this Doc View Source SessionData Declaration public virtual Dictionary<string, object?> SessionData { get; protected set; } Property Value Type Description Dictionary < System.String , System.Nullable < System.Object >> | Improve this Doc View Source SessionEndTime Declaration public virtual DateTime? SessionEndTime { get; protected set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source SessionStartTime Declaration public virtual DateTime? SessionStartTime { get; protected set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source User Declaration public IUser User { get; } Property Value Type Description IUser Methods | Improve this Doc View Source DisconnectAsync(String) Declaration public abstract Task DisconnectAsync(string reason = \"\") Parameters Type Name Description System.String reason Returns Type Description Task Implements IUserSession Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.ConfigurationBasedConnectionStringAccessor.html": {
    "href": "api/OpenMod.EntityFrameworkCore.ConfigurationBasedConnectionStringAccessor.html",
    "title": "Class ConfigurationBasedConnectionStringAccessor | OpenMod Docs",
    "keywords": "Class ConfigurationBasedConnectionStringAccessor Inheritance System.Object ConfigurationBasedConnectionStringAccessor Implements IConnectionStringAccessor Namespace : OpenMod.EntityFrameworkCore Assembly : OpenMod.EntityFrameworkCore.dll Syntax public class ConfigurationBasedConnectionStringAccessor : object, IConnectionStringAccessor Constructors | Improve this Doc View Source ConfigurationBasedConnectionStringAccessor(IConfiguration) Declaration public ConfigurationBasedConnectionStringAccessor(IConfiguration configuration) Parameters Type Name Description IConfiguration configuration Methods | Improve this Doc View Source GetConnectionString(String) Declaration public string? GetConnectionString(string name) Parameters Type Name Description System.String name Returns Type Description System.Nullable < System.String > Implements IConnectionStringAccessor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.Configurator.DbContextConfiguratorCompilation.html": {
    "href": "api/OpenMod.EntityFrameworkCore.Configurator.DbContextConfiguratorCompilation.html",
    "title": "Class DbContextConfiguratorCompilation | OpenMod Docs",
    "keywords": "Class DbContextConfiguratorCompilation Inheritance System.Object DbContextConfiguratorCompilation Implements IDbContextConfigurator Namespace : OpenMod.EntityFrameworkCore.Configurator Assembly : OpenMod.EntityFrameworkCore.dll Syntax public class DbContextConfiguratorCompilation : object, IDbContextConfigurator Constructors | Improve this Doc View Source DbContextConfiguratorCompilation(IDbContextConfigurator[]) Declaration public DbContextConfiguratorCompilation(params IDbContextConfigurator[] configurators) Parameters Type Name Description IDbContextConfigurator [] configurators Methods | Improve this Doc View Source Configure<TDbContext>(OpenModDbContext<TDbContext>, DbContextOptionsBuilder) Declaration public void Configure<TDbContext>(OpenModDbContext<TDbContext> dbContext, DbContextOptionsBuilder optionsBuilder) where TDbContext : OpenModDbContext<TDbContext> Parameters Type Name Description OpenModDbContext <TDbContext> dbContext DbContextOptionsBuilder optionsBuilder Type Parameters Name Description TDbContext | Improve this Doc View Source Configure<TDbContext>(OpenModDbContext<TDbContext>, ModelBuilder) Declaration public void Configure<TDbContext>(OpenModDbContext<TDbContext> dbContext, ModelBuilder modelBuilder) where TDbContext : OpenModDbContext<TDbContext> Parameters Type Name Description OpenModDbContext <TDbContext> dbContext ModelBuilder modelBuilder Type Parameters Name Description TDbContext Implements IDbContextConfigurator Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.Configurator.DbContextOptionsBuilderActionContextConfigurator.html": {
    "href": "api/OpenMod.EntityFrameworkCore.Configurator.DbContextOptionsBuilderActionContextConfigurator.html",
    "title": "Class DbContextOptionsBuilderActionContextConfigurator | OpenMod Docs",
    "keywords": "Class DbContextOptionsBuilderActionContextConfigurator Inheritance System.Object DbContextOptionsBuilderActionContextConfigurator Implements IDbContextConfigurator Namespace : OpenMod.EntityFrameworkCore.Configurator Assembly : OpenMod.EntityFrameworkCore.dll Syntax public class DbContextOptionsBuilderActionContextConfigurator : object, IDbContextConfigurator Constructors | Improve this Doc View Source DbContextOptionsBuilderActionContextConfigurator(Action<DbContextOptionsBuilder>) Declaration public DbContextOptionsBuilderActionContextConfigurator(Action<DbContextOptionsBuilder> optionsBuilderAction) Parameters Type Name Description Action < DbContextOptionsBuilder > optionsBuilderAction Methods | Improve this Doc View Source Configure<TDbContext>(OpenModDbContext<TDbContext>, DbContextOptionsBuilder) Declaration public void Configure<TDbContext>(OpenModDbContext<TDbContext> dbContext, DbContextOptionsBuilder optionsBuilder) where TDbContext : OpenModDbContext<TDbContext> Parameters Type Name Description OpenModDbContext <TDbContext> dbContext DbContextOptionsBuilder optionsBuilder Type Parameters Name Description TDbContext | Improve this Doc View Source Configure<TDbContext>(OpenModDbContext<TDbContext>, ModelBuilder) Declaration public void Configure<TDbContext>(OpenModDbContext<TDbContext> dbContext, ModelBuilder modelBuilder) where TDbContext : OpenModDbContext<TDbContext> Parameters Type Name Description OpenModDbContext <TDbContext> dbContext ModelBuilder modelBuilder Type Parameters Name Description TDbContext Implements IDbContextConfigurator Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.Configurator.html": {
    "href": "api/OpenMod.EntityFrameworkCore.Configurator.html",
    "title": "Namespace OpenMod.EntityFrameworkCore.Configurator | OpenMod Docs",
    "keywords": "Namespace OpenMod.EntityFrameworkCore.Configurator Classes DbContextConfiguratorCompilation DbContextOptionsBuilderActionContextConfigurator Interfaces IDbContextConfigurator"
  },
  "api/OpenMod.EntityFrameworkCore.Configurator.IDbContextConfigurator.html": {
    "href": "api/OpenMod.EntityFrameworkCore.Configurator.IDbContextConfigurator.html",
    "title": "Interface IDbContextConfigurator | OpenMod Docs",
    "keywords": "Interface IDbContextConfigurator Namespace : OpenMod.EntityFrameworkCore.Configurator Assembly : OpenMod.EntityFrameworkCore.dll Syntax public interface IDbContextConfigurator Methods | Improve this Doc View Source Configure<TDbContext>(OpenModDbContext<TDbContext>, DbContextOptionsBuilder) Declaration void Configure<TDbContext>(OpenModDbContext<TDbContext> dbContext, DbContextOptionsBuilder optionsBuilder) where TDbContext : OpenModDbContext<TDbContext> Parameters Type Name Description OpenModDbContext <TDbContext> dbContext DbContextOptionsBuilder optionsBuilder Type Parameters Name Description TDbContext | Improve this Doc View Source Configure<TDbContext>(OpenModDbContext<TDbContext>, ModelBuilder) Declaration void Configure<TDbContext>(OpenModDbContext<TDbContext> dbContext, ModelBuilder modelBuilder) where TDbContext : OpenModDbContext<TDbContext> Parameters Type Name Description OpenModDbContext <TDbContext> dbContext ModelBuilder modelBuilder Type Parameters Name Description TDbContext Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.ConnectionStringAttribute.html": {
    "href": "api/OpenMod.EntityFrameworkCore.ConnectionStringAttribute.html",
    "title": "Class ConnectionStringAttribute | OpenMod Docs",
    "keywords": "Class ConnectionStringAttribute Sets the connection string to use for a OpenModDbContext<TSelf> . Inheritance System.Object ConnectionStringAttribute Namespace : OpenMod.EntityFrameworkCore Assembly : OpenMod.EntityFrameworkCore.dll Syntax public class ConnectionStringAttribute : Attribute Constructors | Improve this Doc View Source ConnectionStringAttribute(String) Sets the connection string to use for a OpenModDbContext<TSelf> . Declaration public ConnectionStringAttribute(string name) Parameters Type Name Description System.String name The connection string name. Properties | Improve this Doc View Source Name The connection string name. Declaration public string Name { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.ConnectionStrings.html": {
    "href": "api/OpenMod.EntityFrameworkCore.ConnectionStrings.html",
    "title": "Class ConnectionStrings | OpenMod Docs",
    "keywords": "Class ConnectionStrings Common connection strings. Inheritance System.Object ConnectionStrings Namespace : OpenMod.EntityFrameworkCore Assembly : OpenMod.EntityFrameworkCore.dll Syntax public static class ConnectionStrings : object Fields | Improve this Doc View Source Default Gets the default connection string. Declaration public const string Default = null Field Value Type Description System.String"
  },
  "api/OpenMod.EntityFrameworkCore.Extensions.EntityFrameworkCoreContainerBuilderExtensions.html": {
    "href": "api/OpenMod.EntityFrameworkCore.Extensions.EntityFrameworkCoreContainerBuilderExtensions.html",
    "title": "Class EntityFrameworkCoreContainerBuilderExtensions | OpenMod Docs",
    "keywords": "Class EntityFrameworkCoreContainerBuilderExtensions Inheritance System.Object EntityFrameworkCoreContainerBuilderExtensions Namespace : OpenMod.EntityFrameworkCore.Extensions Assembly : OpenMod.EntityFrameworkCore.dll Syntax public static class EntityFrameworkCoreContainerBuilderExtensions : object Methods | Improve this Doc View Source AddDbContext(ContainerBuilder, Type) Declaration public static ContainerBuilder AddDbContext(this ContainerBuilder containerBuilder, Type dbContextType) Parameters Type Name Description ContainerBuilder containerBuilder Type dbContextType Returns Type Description ContainerBuilder | Improve this Doc View Source AddDbContext(ContainerBuilder, Type, ServiceLifetime) Declaration public static ContainerBuilder AddDbContext(this ContainerBuilder containerBuilder, Type dbContextType, ServiceLifetime serviceLifetime) Parameters Type Name Description ContainerBuilder containerBuilder Type dbContextType ServiceLifetime serviceLifetime Returns Type Description ContainerBuilder | Improve this Doc View Source AddDbContext(ContainerBuilder, Type, Nullable<Action<DbContextOptionsBuilder>>) Declaration public static ContainerBuilder AddDbContext(this ContainerBuilder containerBuilder, Type dbContextType, Action<DbContextOptionsBuilder>? optionsBuilder) Parameters Type Name Description ContainerBuilder containerBuilder Type dbContextType System.Nullable < Action < DbContextOptionsBuilder >> optionsBuilder Returns Type Description ContainerBuilder | Improve this Doc View Source AddDbContext(ContainerBuilder, Type, Nullable<Action<DbContextOptionsBuilder>>, ServiceLifetime) Declaration public static ContainerBuilder AddDbContext(this ContainerBuilder containerBuilder, Type dbContextType, Action<DbContextOptionsBuilder>? optionsBuilder, ServiceLifetime serviceLifetime) Parameters Type Name Description ContainerBuilder containerBuilder Type dbContextType System.Nullable < Action < DbContextOptionsBuilder >> optionsBuilder ServiceLifetime serviceLifetime Returns Type Description ContainerBuilder | Improve this Doc View Source AddDbContext(ContainerBuilder, Type, Nullable<Action<DbContextOptionsBuilder>>, ServiceLifetime, IDbContextConfigurator) Declaration public static ContainerBuilder AddDbContext(this ContainerBuilder containerBuilder, Type dbContextType, Action<DbContextOptionsBuilder>? optionsBuilder, ServiceLifetime serviceLifetime, IDbContextConfigurator configurator) Parameters Type Name Description ContainerBuilder containerBuilder Type dbContextType System.Nullable < Action < DbContextOptionsBuilder >> optionsBuilder ServiceLifetime serviceLifetime IDbContextConfigurator configurator Returns Type Description ContainerBuilder | Improve this Doc View Source AddDbContext<T>(ContainerBuilder) Declaration public static ContainerBuilder AddDbContext<T>(this ContainerBuilder containerBuilder) where T : OpenModDbContext<T> Parameters Type Name Description ContainerBuilder containerBuilder Returns Type Description ContainerBuilder Type Parameters Name Description T | Improve this Doc View Source AddDbContext<T>(ContainerBuilder, ServiceLifetime) Declaration public static ContainerBuilder AddDbContext<T>(this ContainerBuilder containerBuilder, ServiceLifetime serviceLifetime) where T : OpenModDbContext<T> Parameters Type Name Description ContainerBuilder containerBuilder ServiceLifetime serviceLifetime Returns Type Description ContainerBuilder Type Parameters Name Description T | Improve this Doc View Source AddDbContext<T>(ContainerBuilder, Nullable<Action<DbContextOptionsBuilder>>) Declaration public static ContainerBuilder AddDbContext<T>(this ContainerBuilder containerBuilder, Action<DbContextOptionsBuilder>? optionsBuilder) where T : OpenModDbContext<T> Parameters Type Name Description ContainerBuilder containerBuilder System.Nullable < Action < DbContextOptionsBuilder >> optionsBuilder Returns Type Description ContainerBuilder Type Parameters Name Description T | Improve this Doc View Source AddDbContext<T>(ContainerBuilder, Nullable<Action<DbContextOptionsBuilder>>, ServiceLifetime) Declaration public static ContainerBuilder AddDbContext<T>(this ContainerBuilder containerBuilder, Action<DbContextOptionsBuilder>? optionsBuilder, ServiceLifetime serviceLifetime) where T : OpenModDbContext<T> Parameters Type Name Description ContainerBuilder containerBuilder System.Nullable < Action < DbContextOptionsBuilder >> optionsBuilder ServiceLifetime serviceLifetime Returns Type Description ContainerBuilder Type Parameters Name Description T"
  },
  "api/OpenMod.EntityFrameworkCore.Extensions.html": {
    "href": "api/OpenMod.EntityFrameworkCore.Extensions.html",
    "title": "Namespace OpenMod.EntityFrameworkCore.Extensions | OpenMod Docs",
    "keywords": "Namespace OpenMod.EntityFrameworkCore.Extensions Classes EntityFrameworkCoreContainerBuilderExtensions"
  },
  "api/OpenMod.EntityFrameworkCore.html": {
    "href": "api/OpenMod.EntityFrameworkCore.html",
    "title": "Namespace OpenMod.EntityFrameworkCore | OpenMod Docs",
    "keywords": "Namespace OpenMod.EntityFrameworkCore Classes ConfigurationBasedConnectionStringAccessor ConnectionStringAttribute Sets the connection string to use for a OpenModDbContext<TSelf> . ConnectionStrings Common connection strings. OpenModDbContext<TSelf> Interfaces IConnectionStringAccessor The service for resolving connection strings."
  },
  "api/OpenMod.EntityFrameworkCore.IConnectionStringAccessor.html": {
    "href": "api/OpenMod.EntityFrameworkCore.IConnectionStringAccessor.html",
    "title": "Interface IConnectionStringAccessor | OpenMod Docs",
    "keywords": "Interface IConnectionStringAccessor The service for resolving connection strings. Namespace : OpenMod.EntityFrameworkCore Assembly : OpenMod.EntityFrameworkCore.dll Syntax public interface IConnectionStringAccessor Methods | Improve this Doc View Source GetConnectionString(String) Gets a connection string. Declaration string? GetConnectionString(string name) Parameters Type Name Description System.String name The name of the connection string. Returns Type Description System.Nullable < System.String > The connection string if found; otherwise, null . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.MySql.Configurator.html": {
    "href": "api/OpenMod.EntityFrameworkCore.MySql.Configurator.html",
    "title": "Namespace OpenMod.EntityFrameworkCore.MySql.Configurator | OpenMod Docs",
    "keywords": "Namespace OpenMod.EntityFrameworkCore.MySql.Configurator Classes MySqlDbContextConfigurator"
  },
  "api/OpenMod.EntityFrameworkCore.MySql.Configurator.MySqlDbContextConfigurator.html": {
    "href": "api/OpenMod.EntityFrameworkCore.MySql.Configurator.MySqlDbContextConfigurator.html",
    "title": "Class MySqlDbContextConfigurator | OpenMod Docs",
    "keywords": "Class MySqlDbContextConfigurator Inheritance System.Object MySqlDbContextConfigurator Implements IDbContextConfigurator Namespace : OpenMod.EntityFrameworkCore.MySql.Configurator Assembly : OpenMod.EntityFrameworkCore.MySql.dll Syntax public class MySqlDbContextConfigurator : object, IDbContextConfigurator Methods | Improve this Doc View Source Configure<TDbContext>(OpenModDbContext<TDbContext>, DbContextOptionsBuilder) Declaration public void Configure<TDbContext>(OpenModDbContext<TDbContext> dbContext, DbContextOptionsBuilder optionsBuilder) where TDbContext : OpenModDbContext<TDbContext> Parameters Type Name Description OpenModDbContext <TDbContext> dbContext DbContextOptionsBuilder optionsBuilder Type Parameters Name Description TDbContext | Improve this Doc View Source Configure<TDbContext>(OpenModDbContext<TDbContext>, ModelBuilder) Declaration public void Configure<TDbContext>(OpenModDbContext<TDbContext> dbContext, ModelBuilder modelBuilder) where TDbContext : OpenModDbContext<TDbContext> Parameters Type Name Description OpenModDbContext <TDbContext> dbContext ModelBuilder modelBuilder Type Parameters Name Description TDbContext Implements IDbContextConfigurator Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.MySql.Extensions.html": {
    "href": "api/OpenMod.EntityFrameworkCore.MySql.Extensions.html",
    "title": "Namespace OpenMod.EntityFrameworkCore.MySql.Extensions | OpenMod Docs",
    "keywords": "Namespace OpenMod.EntityFrameworkCore.MySql.Extensions Classes MySqlContainerBuilderExtensions"
  },
  "api/OpenMod.EntityFrameworkCore.MySql.Extensions.MySqlContainerBuilderExtensions.html": {
    "href": "api/OpenMod.EntityFrameworkCore.MySql.Extensions.MySqlContainerBuilderExtensions.html",
    "title": "Class MySqlContainerBuilderExtensions | OpenMod Docs",
    "keywords": "Class MySqlContainerBuilderExtensions Inheritance System.Object MySqlContainerBuilderExtensions Namespace : OpenMod.EntityFrameworkCore.MySql.Extensions Assembly : OpenMod.EntityFrameworkCore.MySql.dll Syntax public static class MySqlContainerBuilderExtensions : object Methods | Improve this Doc View Source AddMySqlDbContext(ContainerBuilder, Type) Declaration public static ContainerBuilder AddMySqlDbContext(this ContainerBuilder containerBuilder, Type dbContextType) Parameters Type Name Description ContainerBuilder containerBuilder Type dbContextType Returns Type Description ContainerBuilder | Improve this Doc View Source AddMySqlDbContext(ContainerBuilder, Type, ServiceLifetime) Declaration public static ContainerBuilder AddMySqlDbContext(this ContainerBuilder containerBuilder, Type dbContextType, ServiceLifetime serviceLifetime) Parameters Type Name Description ContainerBuilder containerBuilder Type dbContextType ServiceLifetime serviceLifetime Returns Type Description ContainerBuilder | Improve this Doc View Source AddMySqlDbContext(ContainerBuilder, Type, Nullable<Action<DbContextOptionsBuilder>>) Declaration public static ContainerBuilder AddMySqlDbContext(this ContainerBuilder containerBuilder, Type dbContextType, Action<DbContextOptionsBuilder>? optionsBuilder) Parameters Type Name Description ContainerBuilder containerBuilder Type dbContextType System.Nullable < Action < DbContextOptionsBuilder >> optionsBuilder Returns Type Description ContainerBuilder | Improve this Doc View Source AddMySqlDbContext(ContainerBuilder, Type, Nullable<Action<DbContextOptionsBuilder>>, ServiceLifetime) Declaration public static ContainerBuilder AddMySqlDbContext(this ContainerBuilder containerBuilder, Type dbContextType, Action<DbContextOptionsBuilder>? optionsBuilder, ServiceLifetime serviceLifetime) Parameters Type Name Description ContainerBuilder containerBuilder Type dbContextType System.Nullable < Action < DbContextOptionsBuilder >> optionsBuilder ServiceLifetime serviceLifetime Returns Type Description ContainerBuilder | Improve this Doc View Source AddMySqlDbContext<T>(ContainerBuilder) Declaration public static ContainerBuilder AddMySqlDbContext<T>(this ContainerBuilder containerBuilder) where T : OpenModDbContext<T> Parameters Type Name Description ContainerBuilder containerBuilder Returns Type Description ContainerBuilder Type Parameters Name Description T | Improve this Doc View Source AddMySqlDbContext<T>(ContainerBuilder, ServiceLifetime) Declaration public static ContainerBuilder AddMySqlDbContext<T>(this ContainerBuilder containerBuilder, ServiceLifetime serviceLifetime) where T : OpenModDbContext<T> Parameters Type Name Description ContainerBuilder containerBuilder ServiceLifetime serviceLifetime Returns Type Description ContainerBuilder Type Parameters Name Description T | Improve this Doc View Source AddMySqlDbContext<T>(ContainerBuilder, Nullable<Action<DbContextOptionsBuilder>>) Declaration public static ContainerBuilder AddMySqlDbContext<T>(this ContainerBuilder containerBuilder, Action<DbContextOptionsBuilder>? optionsBuilder) where T : OpenModDbContext<T> Parameters Type Name Description ContainerBuilder containerBuilder System.Nullable < Action < DbContextOptionsBuilder >> optionsBuilder Returns Type Description ContainerBuilder Type Parameters Name Description T | Improve this Doc View Source AddMySqlDbContext<T>(ContainerBuilder, Nullable<Action<DbContextOptionsBuilder>>, ServiceLifetime) Declaration public static ContainerBuilder AddMySqlDbContext<T>(this ContainerBuilder containerBuilder, Action<DbContextOptionsBuilder>? optionsBuilder, ServiceLifetime serviceLifetime) where T : OpenModDbContext<T> Parameters Type Name Description ContainerBuilder containerBuilder System.Nullable < Action < DbContextOptionsBuilder >> optionsBuilder ServiceLifetime serviceLifetime Returns Type Description ContainerBuilder Type Parameters Name Description T"
  },
  "api/OpenMod.EntityFrameworkCore.MySql.html": {
    "href": "api/OpenMod.EntityFrameworkCore.MySql.html",
    "title": "Namespace OpenMod.EntityFrameworkCore.MySql | OpenMod Docs",
    "keywords": "Namespace OpenMod.EntityFrameworkCore.MySql Classes OpenModMySqlDbContextFactory<TDbContext> Boilerplate code for design time context factories. Must be implemented to support EF Core commands. PomeloMySqlConnectorResolver"
  },
  "api/OpenMod.EntityFrameworkCore.MySql.OpenModMySqlDbContextFactory-1.html": {
    "href": "api/OpenMod.EntityFrameworkCore.MySql.OpenModMySqlDbContextFactory-1.html",
    "title": "Class OpenModMySqlDbContextFactory<TDbContext> | OpenMod Docs",
    "keywords": "Class OpenModMySqlDbContextFactory<TDbContext> Boilerplate code for design time context factories. Must be implemented to support EF Core commands. Inheritance System.Object OpenModMySqlDbContextFactory<TDbContext> UserDatabaseDbContextFactory Namespace : OpenMod.EntityFrameworkCore.MySql Assembly : OpenMod.EntityFrameworkCore.MySql.dll Syntax public abstract class OpenModMySqlDbContextFactory<TDbContext> : IDesignTimeDbContextFactory<TDbContext> where TDbContext : OpenModDbContext<TDbContext> Type Parameters Name Description TDbContext The DbContext the factory is for. Examples public class MyDbContextFactory : OpenModMySqlDbContextFactory<MyDbContext> { // that's all needed } Methods | Improve this Doc View Source CreateDbContext(String[]) Declaration public TDbContext CreateDbContext(string[] args) Parameters Type Name Description System.String [] args Returns Type Description TDbContext Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.MySql.PomeloMySqlConnectorResolver.html": {
    "href": "api/OpenMod.EntityFrameworkCore.MySql.PomeloMySqlConnectorResolver.html",
    "title": "Class PomeloMySqlConnectorResolver | OpenMod Docs",
    "keywords": "Class PomeloMySqlConnectorResolver Inheritance System.Object PomeloMySqlConnectorResolver Namespace : OpenMod.EntityFrameworkCore.MySql Assembly : OpenMod.EntityFrameworkCore.MySql.dll Syntax public sealed class PomeloMySqlConnectorResolver : object Constructors | Improve this Doc View Source PomeloMySqlConnectorResolver(NuGetPackageManager, ILogger<PomeloMySqlConnectorResolver>) Declaration public PomeloMySqlConnectorResolver(NuGetPackageManager nuGetPackageManager, ILogger<PomeloMySqlConnectorResolver> logger) Parameters Type Name Description NuGetPackageManager nuGetPackageManager ILogger < PomeloMySqlConnectorResolver > logger Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.EntityFrameworkCore.OpenModDbContext-1.html": {
    "href": "api/OpenMod.EntityFrameworkCore.OpenModDbContext-1.html",
    "title": "Class OpenModDbContext<TSelf> | OpenMod Docs",
    "keywords": "Class OpenModDbContext<TSelf> Inheritance System.Object OpenModDbContext<TSelf> Namespace : OpenMod.EntityFrameworkCore Assembly : OpenMod.EntityFrameworkCore.dll Syntax public abstract class OpenModDbContext<TSelf> : DbContext where TSelf : OpenModDbContext<TSelf> Type Parameters Name Description TSelf Constructors | Improve this Doc View Source OpenModDbContext(IServiceProvider) Declaration protected OpenModDbContext(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider | Improve this Doc View Source OpenModDbContext(IDbContextConfigurator, IServiceProvider) Declaration protected OpenModDbContext(IDbContextConfigurator configurator, IServiceProvider serviceProvider) Parameters Type Name Description IDbContextConfigurator configurator IServiceProvider serviceProvider Properties | Improve this Doc View Source MigrationsTableName Gets the name of the migrations table for supporting providers. Declaration protected virtual string MigrationsTableName { get; } Property Value Type Description System.String | Improve this Doc View Source TablePrefix Gets the prefix for the tables for supporting providers. Declaration protected virtual string? TablePrefix { get; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source GetConnectionStringName() Gets the name of the connection string used by supporting providers. Declaration protected virtual string GetConnectionStringName() Returns Type Description System.String | Improve this Doc View Source OnConfiguring(DbContextOptionsBuilder) Declaration protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) Parameters Type Name Description DbContextOptionsBuilder optionsBuilder | Improve this Doc View Source OnModelCreating(ModelBuilder) Declaration protected override void OnModelCreating(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Economy.Abstractions.BalanceUpdatedEvent.html": {
    "href": "api/OpenMod.Extensions.Economy.Abstractions.BalanceUpdatedEvent.html",
    "title": "Class BalanceUpdatedEvent | OpenMod Docs",
    "keywords": "Class BalanceUpdatedEvent Triggered when the balance of an account updates. Inheritance System.Object EventBase Event BalanceUpdatedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data Namespace : OpenMod.Extensions.Economy.Abstractions Assembly : OpenMod.Extensions.Economy.Abstractions.dll Syntax public class BalanceUpdatedEvent : Event, IEvent Constructors | Improve this Doc View Source BalanceUpdatedEvent(String, String, Decimal, Decimal, Nullable<String>) Declaration public BalanceUpdatedEvent(string ownerId, string ownerType, decimal oldBalance, decimal newBalance, string? reason) Parameters Type Name Description System.String ownerId System.String ownerType System.Decimal oldBalance System.Decimal newBalance System.Nullable < System.String > reason Properties | Improve this Doc View Source NewBalance Gets the new balance. Declaration public decimal NewBalance { get; } Property Value Type Description System.Decimal | Improve this Doc View Source OldBalance Gets the old balance. Declaration public decimal OldBalance { get; } Property Value Type Description System.Decimal | Improve this Doc View Source OwnerId Gets the ID of the account owner. Declaration public string OwnerId { get; } Property Value Type Description System.String | Improve this Doc View Source OwnerType Gets the actor type of the account owner. Declaration public string OwnerType { get; } Property Value Type Description System.String | Improve this Doc View Source Reason Gets the reason for the balance update. Declaration public string? Reason { get; } Property Value Type Description System.Nullable < System.String > Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Economy.Abstractions.html": {
    "href": "api/OpenMod.Extensions.Economy.Abstractions.html",
    "title": "Namespace OpenMod.Extensions.Economy.Abstractions | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Economy.Abstractions Classes BalanceUpdatedEvent Triggered when the balance of an account updates. NotEnoughBalanceException The exception that is thrown when an actor does not have enough balance. Interfaces IEconomyProvider"
  },
  "api/OpenMod.Extensions.Economy.Abstractions.IEconomyProvider.html": {
    "href": "api/OpenMod.Extensions.Economy.Abstractions.IEconomyProvider.html",
    "title": "Interface IEconomyProvider | OpenMod Docs",
    "keywords": "Interface IEconomyProvider Namespace : OpenMod.Extensions.Economy.Abstractions Assembly : OpenMod.Extensions.Economy.Abstractions.dll Syntax public interface IEconomyProvider Properties | Improve this Doc View Source CurrencyName Gets the name of the currency, e.g. \"Dollar\". Declaration string CurrencyName { get; } Property Value Type Description System.String | Improve this Doc View Source CurrencySymbol Gets the symbol of the currency, e.g. \"$\". Declaration string CurrencySymbol { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetBalanceAsync(String, String) Gets the balance of an user. Declaration Task<decimal> GetBalanceAsync(string ownerId, string ownerType) Parameters Type Name Description System.String ownerId The ID of the owner. System.String ownerType The actor type of the owner. Returns Type Description Task < System.Decimal > | Improve this Doc View Source SetBalanceAsync(String, String, Decimal) Sets balance for a user. Declaration Task SetBalanceAsync(string ownerId, string ownerType, decimal balance) Parameters Type Name Description System.String ownerId The ID of the owner. System.String ownerType The actor type of the owner. System.Decimal balance The balance to set to. Returns Type Description Task | Improve this Doc View Source UpdateBalanceAsync(String, String, Decimal, Nullable<String>) Creates a transaction and updates the balance of a user. Declaration Task<decimal> UpdateBalanceAsync(string ownerId, string ownerType, decimal changeAmount, string? reason) Parameters Type Name Description System.String ownerId The ID of the owner. System.String ownerType The actor type of the owner. System.Decimal changeAmount The amount to add or remove. System.Nullable < System.String > reason The optional reason for this transaction. Returns Type Description Task < System.Decimal > Exceptions Type Condition NotEnoughBalanceException if the balance would become negative Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Economy.Abstractions.NotEnoughBalanceException.html": {
    "href": "api/OpenMod.Extensions.Economy.Abstractions.NotEnoughBalanceException.html",
    "title": "Class NotEnoughBalanceException | OpenMod Docs",
    "keywords": "Class NotEnoughBalanceException The exception that is thrown when an actor does not have enough balance. Inheritance System.Object UserFriendlyException NotEnoughBalanceException Namespace : OpenMod.Extensions.Economy.Abstractions Assembly : OpenMod.Extensions.Economy.Abstractions.dll Syntax public class NotEnoughBalanceException : UserFriendlyException Constructors | Improve this Doc View Source NotEnoughBalanceException(String) Declaration public NotEnoughBalanceException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source NotEnoughBalanceException(String, Decimal) Declaration public NotEnoughBalanceException(string message, decimal balance) Parameters Type Name Description System.String message System.Decimal balance Properties | Improve this Doc View Source Balance Gets the current balance. Declaration public decimal? Balance { get; } Property Value Type Description System.Nullable < System.Decimal > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Acl.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Acl.html",
    "title": "Namespace OpenMod.Extensions.Games.Abstractions.Acl | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Games.Abstractions.Acl Interfaces IHasOwnership Defines that an object can have an owner. IOwnership Represts the ownership of an object."
  },
  "api/OpenMod.Extensions.Games.Abstractions.Acl.IHasOwnership.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Acl.IHasOwnership.html",
    "title": "Interface IHasOwnership | OpenMod Docs",
    "keywords": "Interface IHasOwnership Defines that an object can have an owner. Namespace : OpenMod.Extensions.Games.Abstractions.Acl Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IHasOwnership Properties | Improve this Doc View Source Ownership Gets the ownership of this object. Declaration IOwnership Ownership { get; } Property Value Type Description IOwnership Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Acl.IOwnership.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Acl.IOwnership.html",
    "title": "Interface IOwnership | OpenMod Docs",
    "keywords": "Interface IOwnership Represts the ownership of an object. Namespace : OpenMod.Extensions.Games.Abstractions.Acl Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IOwnership Properties | Improve this Doc View Source HasOwner Checks if the object has an owner. Either OwnerPlayerId or OwnerGroupId will not be null if true. Declaration bool HasOwner { get; } Property Value Type Description System.Boolean True if the object has an owner; otherwise, false . | Improve this Doc View Source OwnerGroupId Gets the ID of the group owning this object. Returns null if no group owns the object. Declaration string? OwnerGroupId { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source OwnerPlayerId Gets the ID of the player owning this object. Returns null if no player owns the object. Declaration string? OwnerPlayerId { get; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source HasAccessAsync(IPlayer) Checks if the given player has access to this object. Declaration Task<bool> HasAccessAsync(IPlayer player) Parameters Type Name Description IPlayer player The player to check against. Returns Type Description Task < System.Boolean > True if the player has access; otherwise, false. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.html",
    "title": "Namespace OpenMod.Extensions.Games.Abstractions.Building | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Games.Abstractions.Building Interfaces IBuildable Represents a buildable object players can place. IBuildableAsset Represents a buildable asset. IBuildableDeployedEvent The interface for any buildable deployed events. IBuildableDeployingEvent The interface for any buildable deploying events. IBuildableDestroyedEvent The interface for any buildable destroyed events. IBuildableDestroyingEvent The interface for any buildable destroying events. IBuildableDirectory The service for querying buildables and buildable assets. IBuildableEvent The base interface for all buildable related events. IBuildableSpawner The service for spawning buildables. IBuildableState Represents the state of a buildable. IBuildableTransformedEvent The interface for any buildable transformed events. IBuildableTransformingEvent The interface for any buildable transforming events."
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildable.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildable.html",
    "title": "Interface IBuildable | OpenMod Docs",
    "keywords": "Interface IBuildable Represents a buildable object players can place. Inherited Members IHasOwnership.Ownership IGameObject.Transform Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildable : IHasOwnership, IGameObject Properties | Improve this Doc View Source Asset Gets the asset of the object. Declaration IBuildableAsset Asset { get; } Property Value Type Description IBuildableAsset | Improve this Doc View Source BuildableInstanceId Gets the unique instance ID of the object. Declaration string BuildableInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source State Gets the state of the object. Declaration IBuildableState State { get; } Property Value Type Description IBuildableState Methods | Improve this Doc View Source DestroyAsync() Destroys the object. Declaration Task DestroyAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableAsset.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableAsset.html",
    "title": "Interface IBuildableAsset | OpenMod Docs",
    "keywords": "Interface IBuildableAsset Represents a buildable asset. Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableAsset Properties | Improve this Doc View Source BuildableAssetId Gets the ID of the asset. Declaration string BuildableAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source BuildableType Gets the type of the asset. Declaration string BuildableType { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDeployedEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDeployedEvent.html",
    "title": "Interface IBuildableDeployedEvent | OpenMod Docs",
    "keywords": "Interface IBuildableDeployedEvent The interface for any buildable deployed events. Inherited Members IBuildableEvent.Buildable IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableDeployedEvent : IBuildableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDeployingEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDeployingEvent.html",
    "title": "Interface IBuildableDeployingEvent | OpenMod Docs",
    "keywords": "Interface IBuildableDeployingEvent The interface for any buildable deploying events. Inherited Members ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableDeployingEvent : ICancellableEvent, IEvent Properties | Improve this Doc View Source BuildableAsset Gets the buildable asset that is going to be used whilst deploying. Declaration IBuildableAsset BuildableAsset { get; } Property Value Type Description IBuildableAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDestroyedEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDestroyedEvent.html",
    "title": "Interface IBuildableDestroyedEvent | OpenMod Docs",
    "keywords": "Interface IBuildableDestroyedEvent The interface for any buildable destroyed events. Inherited Members IBuildableEvent.Buildable IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableDestroyedEvent : IBuildableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDestroyingEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDestroyingEvent.html",
    "title": "Interface IBuildableDestroyingEvent | OpenMod Docs",
    "keywords": "Interface IBuildableDestroyingEvent The interface for any buildable destroying events. Inherited Members IBuildableEvent.Buildable ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableDestroyingEvent : IBuildableEvent, ICancellableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDirectory.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableDirectory.html",
    "title": "Interface IBuildableDirectory | OpenMod Docs",
    "keywords": "Interface IBuildableDirectory The service for querying buildables and buildable assets. Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableDirectory Methods | Improve this Doc View Source GetBuildableAssetsAsync() Gets all buildable assets. Declaration Task<IReadOnlyCollection<IBuildableAsset>> GetBuildableAssetsAsync() Returns Type Description Task < IReadOnlyCollection < IBuildableAsset >> | Improve this Doc View Source GetBuildablesAsync() Gets all placed buildables. Declaration Task<IReadOnlyCollection<IBuildable>> GetBuildablesAsync() Returns Type Description Task < IReadOnlyCollection < IBuildable >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableEvent.html",
    "title": "Interface IBuildableEvent | OpenMod Docs",
    "keywords": "Interface IBuildableEvent The base interface for all buildable related events. Inherited Members IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableEvent : IEvent Properties | Improve this Doc View Source Buildable Gets the buildable related to the event. Declaration IBuildable Buildable { get; } Property Value Type Description IBuildable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableSpawner.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableSpawner.html",
    "title": "Interface IBuildableSpawner | OpenMod Docs",
    "keywords": "Interface IBuildableSpawner The service for spawning buildables. Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableSpawner Methods | Improve this Doc View Source SpawnBuildableAsync(Vector3, String, IBuildableState) Spawns a buildable at the given position. Declaration Task<IBuildable> SpawnBuildableAsync(Vector3 position, string buildableAssetId, IBuildableState state = null) Parameters Type Name Description Vector3 position The position to spawn the buildable at. System.String buildableAssetId The ID of the buildable asset. IBuildableState state The optional state for the buildable. Returns Type Description Task < IBuildable > The created buildable if successful; otherwise, >null . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableState.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableState.html",
    "title": "Interface IBuildableState | OpenMod Docs",
    "keywords": "Interface IBuildableState Represents the state of a buildable. Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableState Properties | Improve this Doc View Source Health Gets the healh of the buildable. Declaration double Health { get; } Property Value Type Description System.Double | Improve this Doc View Source StateData Gets the state of the buildable. Declaration byte[] StateData { get; } Property Value Type Description System.Byte [] Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableTransformedEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableTransformedEvent.html",
    "title": "Interface IBuildableTransformedEvent | OpenMod Docs",
    "keywords": "Interface IBuildableTransformedEvent The interface for any buildable transformed events. Inherited Members IBuildableEvent.Buildable IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableTransformedEvent : IBuildableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableTransformingEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Building.IBuildableTransformingEvent.html",
    "title": "Interface IBuildableTransformingEvent | OpenMod Docs",
    "keywords": "Interface IBuildableTransformingEvent The interface for any buildable transforming events. Inherited Members IBuildableEvent.Buildable ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Building Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBuildableTransformingEvent : IBuildableEvent, ICancellableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.html",
    "title": "Namespace OpenMod.Extensions.Games.Abstractions.Entities | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Games.Abstractions.Entities Classes KnownEntityTypes Represents common entity types. Support depends on the game. NullEntityState Represents the null entity state for entities that do not have a state. Interfaces IDamageSource Represents a damage source. IEntity Represents an entity such as players, NPCs, cars, etc. IEntityAsset Represents an entity asset. IEntityDirectory The service for querying entities and entity assets. IEntityEvent The base interface for all entity related events. IEntitySpawner The service for spawning entities. IEntityState Represents the state of an entity. IGameObject Represents a physical object in the game. IHasHealth Represents an object that has health. IHasHunger IHasThirst"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IDamageSource.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IDamageSource.html",
    "title": "Interface IDamageSource | OpenMod Docs",
    "keywords": "Interface IDamageSource Represents a damage source. Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IDamageSource Properties | Improve this Doc View Source DamageSourceName Gets the human-readable name of the damage source. Declaration string DamageSourceName { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntity.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntity.html",
    "title": "Interface IEntity | OpenMod Docs",
    "keywords": "Interface IEntity Represents an entity such as players, NPCs, cars, etc. Inherited Members IGameObject.Transform Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IEntity : IGameObject Properties | Improve this Doc View Source Asset Gets the asset of the entity. Declaration IEntityAsset Asset { get; } Property Value Type Description IEntityAsset | Improve this Doc View Source EntityInstanceId Gets the unique instance ID of the entity. Declaration string EntityInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source State Gets the state of the entity. Declaration IEntityState State { get; } Property Value Type Description IEntityState Methods | Improve this Doc View Source SetPositionAsync(Vector3) Sets the position of an entity. Declaration Task<bool> SetPositionAsync(Vector3 position) Parameters Type Name Description Vector3 position The position to set to. Returns Type Description Task < System.Boolean > True if successful; otherwise, false . | Improve this Doc View Source SetPositionAsync(Vector3, Quaternion) Sets the position and rotation of an entity. Declaration Task<bool> SetPositionAsync(Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 position The position to set to. Quaternion rotation The rotation to set to. Returns Type Description Task < System.Boolean > True if successful; otherwise, false . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntityAsset.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntityAsset.html",
    "title": "Interface IEntityAsset | OpenMod Docs",
    "keywords": "Interface IEntityAsset Represents an entity asset. Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IEntityAsset Properties | Improve this Doc View Source EntityAssetId Gets the ID of the asset. Declaration string EntityAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source EntityType Gets the type of the asset. Declaration string EntityType { get; } Property Value Type Description System.String | Improve this Doc View Source Name Gets the human-readable name of the asset. Declaration string Name { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntityDirectory.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntityDirectory.html",
    "title": "Interface IEntityDirectory | OpenMod Docs",
    "keywords": "Interface IEntityDirectory The service for querying entities and entity assets. Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IEntityDirectory Methods | Improve this Doc View Source GetEntitiesAsync() Gets all entities. Declaration Task<IReadOnlyCollection<IEntity>> GetEntitiesAsync() Returns Type Description Task < IReadOnlyCollection < IEntity >> | Improve this Doc View Source GetEntityAssetsAsync() Gets all entity assets. Declaration Task<IReadOnlyCollection<IEntityAsset>> GetEntityAssetsAsync() Returns Type Description Task < IReadOnlyCollection < IEntityAsset >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntityEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntityEvent.html",
    "title": "Interface IEntityEvent | OpenMod Docs",
    "keywords": "Interface IEntityEvent The base interface for all entity related events. Inherited Members IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IEntityEvent : IEvent Properties | Improve this Doc View Source Entity Gets the entity related to the event. Declaration IEntity Entity { get; } Property Value Type Description IEntity Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntitySpawner.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntitySpawner.html",
    "title": "Interface IEntitySpawner | OpenMod Docs",
    "keywords": "Interface IEntitySpawner The service for spawning entities. Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IEntitySpawner Methods | Improve this Doc View Source SpawnEntityAsync(Vector3, String, IEntityState) Spawns an entity at the given position. Declaration Task<IEntity> SpawnEntityAsync(Vector3 position, string entityAssetId, IEntityState state = null) Parameters Type Name Description Vector3 position The position to spawn the entity at. System.String entityAssetId The ID of the entity asset. IEntityState state The optional state for the entity to spawn. Returns Type Description Task < IEntity > The spawn entity if successful; otherwise null . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntityState.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IEntityState.html",
    "title": "Interface IEntityState | OpenMod Docs",
    "keywords": "Interface IEntityState Represents the state of an entity. Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IEntityState Properties | Improve this Doc View Source StateData The state of the entity. Declaration byte[] StateData { get; } Property Value Type Description System.Byte [] Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IGameObject.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IGameObject.html",
    "title": "Interface IGameObject | OpenMod Docs",
    "keywords": "Interface IGameObject Represents a physical object in the game. Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IGameObject Properties | Improve this Doc View Source Transform Gets the transform of the object. Declaration IWorldTransform Transform { get; } Property Value Type Description IWorldTransform Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IHasHealth.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IHasHealth.html",
    "title": "Interface IHasHealth | OpenMod Docs",
    "keywords": "Interface IHasHealth Represents an object that has health. Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IHasHealth Properties | Improve this Doc View Source Health Gets the health of the entity. Declaration double Health { get; } Property Value Type Description System.Double | Improve this Doc View Source IsAlive Checks if the entity is alive. Declaration bool IsAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Gets the max health the entity can have. Declaration double MaxHealth { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source DamageAsync(Double) Damages the entity. Depending on game support, it will trigger damage effects. Declaration Task DamageAsync(double amount) Parameters Type Name Description System.Double amount The amount to damage. Returns Type Description Task | Improve this Doc View Source KillAsync() Kills the entity. Depending on game support, it will trigger death effects. Declaration Task KillAsync() Returns Type Description Task | Improve this Doc View Source SetFullHealthAsync() This should set the life/health stats to max (this should include food, water, etc if supported) Declaration Task SetFullHealthAsync() Returns Type Description Task | Improve this Doc View Source SetHealthAsync(Double) Sets the health of the entity. Depending on game support, it will not trigger damage effects. Declaration Task SetHealthAsync(double health) Parameters Type Name Description System.Double health The health to set to. Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IHasHunger.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IHasHunger.html",
    "title": "Interface IHasHunger | OpenMod Docs",
    "keywords": "Interface IHasHunger Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IHasHunger Properties | Improve this Doc View Source Hunger Gets the hunger of the entity. Declaration double Hunger { get; } Property Value Type Description System.Double | Improve this Doc View Source MaxHunger Gets the max hunger the entity can have. Declaration double MaxHunger { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source SetHungerAsync(Double) Sets the hunger of the entity. Declaration Task SetHungerAsync(double hunger) Parameters Type Name Description System.Double hunger The hunger to set to. Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.IHasThirst.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.IHasThirst.html",
    "title": "Interface IHasThirst | OpenMod Docs",
    "keywords": "Interface IHasThirst Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IHasThirst Properties | Improve this Doc View Source MaxThirst Gets the max thirst the entity can have. Declaration double MaxThirst { get; } Property Value Type Description System.Double | Improve this Doc View Source Thirst Gets the thirst of the entity. Declaration double Thirst { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source SetThirstAsync(Double) Sets the thirst of the entity. Declaration Task SetThirstAsync(double thirst) Parameters Type Name Description System.Double thirst The thirst to set to. Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.KnownEntityTypes.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.KnownEntityTypes.html",
    "title": "Class KnownEntityTypes | OpenMod Docs",
    "keywords": "Class KnownEntityTypes Represents common entity types. Support depends on the game. Inheritance System.Object KnownEntityTypes Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class KnownEntityTypes : object Fields | Improve this Doc View Source Npc Declaration public const string Npc = null Field Value Type Description System.String | Improve this Doc View Source Player Declaration public const string Player = null Field Value Type Description System.String | Improve this Doc View Source Vehicle Declaration public const string Vehicle = null Field Value Type Description System.String | Improve this Doc View Source Zombie Declaration public const string Zombie = null Field Value Type Description System.String"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Entities.NullEntityState.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Entities.NullEntityState.html",
    "title": "Class NullEntityState | OpenMod Docs",
    "keywords": "Class NullEntityState Represents the null entity state for entities that do not have a state. Inheritance System.Object NullEntityState Implements IEntityState Namespace : OpenMod.Extensions.Games.Abstractions.Entities Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public sealed class NullEntityState : object, IEntityState Properties | Improve this Doc View Source Instance Declaration public static NullEntityState Instance { get; } Property Value Type Description NullEntityState | Improve this Doc View Source StateData Declaration public byte[] StateData { get; } Property Value Type Description System.Byte [] Implements IEntityState Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.html",
    "title": "Namespace OpenMod.Extensions.Games.Abstractions | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Games.Abstractions Classes KnownGameCapabilities Represents common game capabilities. Can be used to check if the current game supports specific features. See HasCapability(String) . Interfaces IGameHostInformation Provides information about the current game."
  },
  "api/OpenMod.Extensions.Games.Abstractions.IGameHostInformation.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.IGameHostInformation.html",
    "title": "Interface IGameHostInformation | OpenMod Docs",
    "keywords": "Interface IGameHostInformation Provides information about the current game. Inherited Members IHostInformation.HostVersion IHostInformation.HostName Namespace : OpenMod.Extensions.Games.Abstractions Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IGameHostInformation : IHostInformation Properties | Improve this Doc View Source GameDisplayName Gets the name of the game. Declaration string GameDisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source GameVersion Gets the version of the running game. Declaration string GameVersion { get; } Property Value Type Description System.String | Improve this Doc View Source IsClient Checks if the current host is a client. Declaration bool IsClient { get; } Property Value Type Description System.Boolean Remarks A host can be both server and client at the same time. | Improve this Doc View Source IsServer Checks if the current host is a server. Declaration bool IsServer { get; } Property Value Type Description System.Boolean Remarks A host can be both server and client at the same time. | Improve this Doc View Source ServerAddress Gets the address used to connect to the server. Null if the current host is not a server or is not listening yet. Declaration IPAddress? ServerAddress { get; } Property Value Type Description System.Nullable < IPAddress > | Improve this Doc View Source ServerInstance Gets the current server instance for games that support multiple server instances per installation. Returns default for games that do not support multiple instances. Returns null if the host is not a server. Declaration string ServerInstance { get; } Property Value Type Description System.String | Improve this Doc View Source ServerName Gets the name of the server. Returns null if the host is not a server. Declaration string? ServerName { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source ServerPort Gets the port used to connect to the server. Null if the current host is not a server or is not listening yet. Declaration ushort? ServerPort { get; } Property Value Type Description System.Nullable < System.UInt16 > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.html",
    "title": "Namespace OpenMod.Extensions.Games.Abstractions.Items | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Games.Abstractions.Items Classes InventoryExtensions ItemDirectoryExtensions ItemSpawnerExtensions KnownItemTypes Represents common item types. Support depends on the game. NullItemState Represents the null item state for items that do not have a state. Interfaces IHasInventory Represents an object that may have an inventory. IInventory Represents an inventory. IInventoryItem Represents an item stored in the inventory. IInventoryPage Represents a page of an inventory. IItem Represents an item. IItemAsset Represents an item asset. IItemDirectory The service for querying items and item assets. IItemDrop Represents an item dropped at ground. IItemEvent The base interface used for all item related events. IItemInstance Represents the instance of an item. IItemSpawner The service for spawning items. IItemState Represents the state of an item."
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IHasInventory.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IHasInventory.html",
    "title": "Interface IHasInventory | OpenMod Docs",
    "keywords": "Interface IHasInventory Represents an object that may have an inventory. Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IHasInventory Properties | Improve this Doc View Source Inventory Gets the inventory of the object. Declaration IInventory Inventory { get; } Property Value Type Description IInventory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IInventory.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IInventory.html",
    "title": "Interface IInventory | OpenMod Docs",
    "keywords": "Interface IInventory Represents an inventory. Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IInventory : IReadOnlyCollection<IInventoryPage> Properties | Improve this Doc View Source IsFull Checks if the inventory is full. Declaration bool IsFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Pages Gets the pages of the inventory. Page support depends on the game and owner object. Some games and objects only suppport a single page. Declaration IReadOnlyCollection<IInventoryPage> Pages { get; } Property Value Type Description IReadOnlyCollection < IInventoryPage > Examples In the game Unturned, the player inventory consists of multiple pages. These pages are: * Hands * Clothing slots * Primary slot * Secondary slot * Clothing pages Extension Methods InventoryExtensions.ClearAsync(IInventory) InventoryExtensions.FindByType(IInventory, String, Nullable<IComparer<IInventoryItem>>) InventoryExtensions.FindByAssetId(IInventory, String, Nullable<IComparer<IInventoryItem>>) DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IInventoryItem.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IInventoryItem.html",
    "title": "Interface IInventoryItem | OpenMod Docs",
    "keywords": "Interface IInventoryItem Represents an item stored in the inventory. Inherited Members IItemInstance.Item Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IInventoryItem : IItemInstance Methods | Improve this Doc View Source DestroyAsync() Destroys the item. Declaration Task<bool> DestroyAsync() Returns Type Description Task < System.Boolean > | Improve this Doc View Source DropAsync() Drops the item to the ground. Declaration Task DropAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IInventoryPage.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IInventoryPage.html",
    "title": "Interface IInventoryPage | OpenMod Docs",
    "keywords": "Interface IInventoryPage Represents a page of an inventory. Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IInventoryPage : IReadOnlyCollection<IInventoryItem> Properties | Improve this Doc View Source Capacity Gets the maximum amount of items this page can hold. Declaration int Capacity { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Inventory The inventory this page belongs to. Declaration IInventory Inventory { get; } Property Value Type Description IInventory | Improve this Doc View Source IsFull Checks if the page is full. Declaration bool IsFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReadOnly Checks if the player can only view the content. Declaration bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Items Gets the items this page holds. Declaration IReadOnlyCollection<IInventoryItem> Items { get; } Property Value Type Description IReadOnlyCollection < IInventoryItem > | Improve this Doc View Source Name Gets the name of this page. Declaration string Name { get; } Property Value Type Description System.String Extension Methods InventoryExtensions.FindByType(IInventoryPage, String, Nullable<IComparer<IInventoryItem>>) InventoryExtensions.FindByAssetId(IInventoryPage, String, Nullable<IComparer<IInventoryItem>>) DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IItem.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IItem.html",
    "title": "Interface IItem | OpenMod Docs",
    "keywords": "Interface IItem Represents an item. Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IItem Properties | Improve this Doc View Source Asset Gets the asset of the item. Declaration IItemAsset Asset { get; } Property Value Type Description IItemAsset | Improve this Doc View Source ItemInstanceId Gets the unique instance ID of the item. Declaration string ItemInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source State Gets the state of the item. Declaration IItemState State { get; } Property Value Type Description IItemState Methods | Improve this Doc View Source SetItemAmountAsync(Double) Sets the amount of the item. Declaration Task SetItemAmountAsync(double amount) Parameters Type Name Description System.Double amount The amount to set to. Returns Type Description Task | Improve this Doc View Source SetItemDurabilityAsync(Double) Sets the durability of the item. Declaration Task SetItemDurabilityAsync(double durability) Parameters Type Name Description System.Double durability The amount to set to. Returns Type Description Task | Improve this Doc View Source SetItemQualityAsync(Double) Sets the quality of the item. Declaration Task SetItemQualityAsync(double quality) Parameters Type Name Description System.Double quality The quality to set to. Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IItemAsset.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IItemAsset.html",
    "title": "Interface IItemAsset | OpenMod Docs",
    "keywords": "Interface IItemAsset Represents an item asset. Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IItemAsset Properties | Improve this Doc View Source ItemAssetId The ID of the asset. Declaration string ItemAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source ItemName The human readable name of the asset. Declaration string ItemName { get; } Property Value Type Description System.String | Improve this Doc View Source ItemType The type of the item. Declaration string ItemType { get; } Property Value Type Description System.String | Improve this Doc View Source MaxAmount The maximum quality of the item. null if item doesn't support amounts. Declaration double? MaxAmount { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source MaxDurability The maximum durability of the item. null if item doesn't support durabilities. Declaration double? MaxDurability { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source MaxQuality The maximum quality of the item. null if item doesn't support qualities. Declaration double? MaxQuality { get; } Property Value Type Description System.Nullable < System.Double > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IItemDirectory.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IItemDirectory.html",
    "title": "Interface IItemDirectory | OpenMod Docs",
    "keywords": "Interface IItemDirectory The service for querying items and item assets. Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IItemDirectory Methods | Improve this Doc View Source GetItemAssetsAsync() Gets all item assets. Declaration Task<IReadOnlyCollection<IItemAsset>> GetItemAssetsAsync() Returns Type Description Task < IReadOnlyCollection < IItemAsset >> | Improve this Doc View Source GetItemDropsAsync() Gets all items currently dropped on ground. Declaration Task<IReadOnlyCollection<IItemDrop>> GetItemDropsAsync() Returns Type Description Task < IReadOnlyCollection < IItemDrop >> Extension Methods ItemDirectoryExtensions.FindByIdAsync(IItemDirectory, String) ItemDirectoryExtensions.FindByNameAsync(IItemDirectory, String, Boolean) DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IItemDrop.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IItemDrop.html",
    "title": "Interface IItemDrop | OpenMod Docs",
    "keywords": "Interface IItemDrop Represents an item dropped at ground. Inherited Members IItemInstance.Item Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IItemDrop : IItemInstance Properties | Improve this Doc View Source Position Gets the position of the item. Declaration Vector3 Position { get; } Property Value Type Description Vector3 Methods | Improve this Doc View Source DestroyAsync() Destroys the item. Declaration Task<bool> DestroyAsync() Returns Type Description Task < System.Boolean > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IItemEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IItemEvent.html",
    "title": "Interface IItemEvent | OpenMod Docs",
    "keywords": "Interface IItemEvent The base interface used for all item related events. Inherited Members IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IItemEvent : IEvent Properties | Improve this Doc View Source Item Gets the item related to the event. Declaration IItem Item { get; } Property Value Type Description IItem Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IItemInstance.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IItemInstance.html",
    "title": "Interface IItemInstance | OpenMod Docs",
    "keywords": "Interface IItemInstance Represents the instance of an item. Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IItemInstance Properties | Improve this Doc View Source Item Gets the item. Declaration IItem Item { get; } Property Value Type Description IItem Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IItemSpawner.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IItemSpawner.html",
    "title": "Interface IItemSpawner | OpenMod Docs",
    "keywords": "Interface IItemSpawner The service for spawning items. Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IItemSpawner Methods | Improve this Doc View Source GiveItemAsync(IInventory, String, IItemState) Adds an item to the given inventory. The item will be dropped if the inventory is full. Declaration Task<IItemInstance> GiveItemAsync(IInventory inventory, string itemAssetId, IItemState state = null) Parameters Type Name Description IInventory inventory The inventory to add the item to. System.String itemAssetId The ID of the item asset. IItemState state The optional state of the item. Returns Type Description Task < IItemInstance > IInventoryItem if the inventory was not full; otherwise, IItemDrop . If spawning was not successful, null . | Improve this Doc View Source SpawnItemAsync(Vector3, String, IItemState) Spawns an item. Declaration Task<IItemDrop> SpawnItemAsync(Vector3 position, string itemAssetId, IItemState state = null) Parameters Type Name Description Vector3 position The position to spawn the item at. System.String itemAssetId The ID of the item asset. IItemState state The optional state of the item. Returns Type Description Task < IItemDrop > The dropped item if successful; otherwise, null . Extension Methods ItemSpawnerExtensions.GiveItemAsync(IItemSpawner, IInventory, IItemAsset, IItemState) ItemSpawnerExtensions.SpawnItemAsync(IItemSpawner, Vector3, IItemAsset, IItemState) DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.IItemState.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.IItemState.html",
    "title": "Interface IItemState | OpenMod Docs",
    "keywords": "Interface IItemState Represents the state of an item. Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IItemState Properties | Improve this Doc View Source ItemAmount Gets the amount of the item. Declaration double ItemAmount { get; } Property Value Type Description System.Double | Improve this Doc View Source ItemDurability Gets the durability of the item. Declaration double ItemDurability { get; } Property Value Type Description System.Double | Improve this Doc View Source ItemQuality Gets the quality of the item. Declaration double ItemQuality { get; } Property Value Type Description System.Double | Improve this Doc View Source StateData Gets the state of the item. Declaration byte[] StateData { get; } Property Value Type Description System.Byte [] Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.InventoryExtensions.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.InventoryExtensions.html",
    "title": "Class InventoryExtensions | OpenMod Docs",
    "keywords": "Class InventoryExtensions Inheritance System.Object InventoryExtensions Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class InventoryExtensions : object Methods | Improve this Doc View Source ClearAsync(IInventory) Removes all items from the given inventory. Declaration public static Task ClearAsync(this IInventory inventory) Parameters Type Name Description IInventory inventory The inventory to clear. Returns Type Description Task | Improve this Doc View Source FindByAssetId(IInventory, String, Nullable<IComparer<IInventoryItem>>) Searches for items by the item asset id. Declaration public static IEnumerable<IInventoryItem> FindByAssetId(this IInventory inventory, string itemAssetId, IComparer<IInventoryItem>? comparer = null) Parameters Type Name Description IInventory inventory The inventory to search in. System.String itemAssetId The ID of the item to search for. System.Nullable < IComparer < IInventoryItem >> comparer The optional item comparer. Returns Type Description IEnumerable < IInventoryItem > | Improve this Doc View Source FindByAssetId(IInventoryPage, String, Nullable<IComparer<IInventoryItem>>) Searches for items by the item asset id. Declaration public static IEnumerable<IInventoryItem> FindByAssetId(this IInventoryPage page, string itemAssetId, IComparer<IInventoryItem>? comparer = null) Parameters Type Name Description IInventoryPage page The inventory page to search in. System.String itemAssetId The ID of the item to search for. System.Nullable < IComparer < IInventoryItem >> comparer The optional item comparer. Returns Type Description IEnumerable < IInventoryItem > | Improve this Doc View Source FindByType(IInventory, String, Nullable<IComparer<IInventoryItem>>) Searches for items by the item type. Declaration public static IEnumerable<IInventoryItem> FindByType(this IInventory inventory, string itemType, IComparer<IInventoryItem>? comparer = null) Parameters Type Name Description IInventory inventory The inventory to search in. System.String itemType The type of the item to search for. System.Nullable < IComparer < IInventoryItem >> comparer The optional item comparer. Returns Type Description IEnumerable < IInventoryItem > | Improve this Doc View Source FindByType(IInventoryPage, String, Nullable<IComparer<IInventoryItem>>) Searches for items by the item type. Declaration public static IEnumerable<IInventoryItem> FindByType(this IInventoryPage page, string itemType, IComparer<IInventoryItem>? comparer = null) Parameters Type Name Description IInventoryPage page The inventory page to search in. System.String itemType The type of the item to search for. System.Nullable < IComparer < IInventoryItem >> comparer The optional item comparer. Returns Type Description IEnumerable < IInventoryItem >"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.ItemDirectoryExtensions.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.ItemDirectoryExtensions.html",
    "title": "Class ItemDirectoryExtensions | OpenMod Docs",
    "keywords": "Class ItemDirectoryExtensions Inheritance System.Object ItemDirectoryExtensions Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class ItemDirectoryExtensions : object Methods | Improve this Doc View Source FindByIdAsync(IItemDirectory, String) Searches for items by the item asset id. Declaration public static Task<IItemAsset> FindByIdAsync(this IItemDirectory directory, string itemAssetId) Parameters Type Name Description IItemDirectory directory The item directory service. System.String itemAssetId The item asset id to search for. Returns Type Description Task < IItemAsset > The IItemAsset if found; otherwise, null . | Improve this Doc View Source FindByNameAsync(IItemDirectory, String, Boolean) Searches for items by the item asset name. Declaration public static Task<IItemAsset> FindByNameAsync(this IItemDirectory directory, string itemName, bool exact = true) Parameters Type Name Description IItemDirectory directory The item directory service. System.String itemName The name of the item asset. System.Boolean exact If true, only exact name matches will be used. Returns Type Description Task < IItemAsset > The IItemAsset if found; otherwise, null ."
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.ItemSpawnerExtensions.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.ItemSpawnerExtensions.html",
    "title": "Class ItemSpawnerExtensions | OpenMod Docs",
    "keywords": "Class ItemSpawnerExtensions Inheritance System.Object ItemSpawnerExtensions Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class ItemSpawnerExtensions : object Methods | Improve this Doc View Source GiveItemAsync(IItemSpawner, IInventory, IItemAsset, IItemState) Declaration public static Task<IItemInstance> GiveItemAsync(this IItemSpawner spawner, IInventory inventory, IItemAsset asset, IItemState state = null) Parameters Type Name Description IItemSpawner spawner IInventory inventory IItemAsset asset IItemState state Returns Type Description Task < IItemInstance > | Improve this Doc View Source SpawnItemAsync(IItemSpawner, Vector3, IItemAsset, IItemState) Declaration public static Task<IItemDrop> SpawnItemAsync(this IItemSpawner spawner, Vector3 position, IItemAsset asset, IItemState state = null) Parameters Type Name Description IItemSpawner spawner Vector3 position IItemAsset asset IItemState state Returns Type Description Task < IItemDrop >"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.KnownItemTypes.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.KnownItemTypes.html",
    "title": "Class KnownItemTypes | OpenMod Docs",
    "keywords": "Class KnownItemTypes Represents common item types. Support depends on the game. Inheritance System.Object KnownItemTypes Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class KnownItemTypes : object Fields | Improve this Doc View Source Drinkable Declaration public const string Drinkable = null Field Value Type Description System.String | Improve this Doc View Source Food Declaration public const string Food = null Field Value Type Description System.String | Improve this Doc View Source Grenade Declaration public const string Grenade = null Field Value Type Description System.String | Improve this Doc View Source Melee Declaration public const string Melee = null Field Value Type Description System.String | Improve this Doc View Source Tool Declaration public const string Tool = null Field Value Type Description System.String | Improve this Doc View Source Weapon Declaration public const string Weapon = null Field Value Type Description System.String"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Items.NullItemState.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Items.NullItemState.html",
    "title": "Class NullItemState | OpenMod Docs",
    "keywords": "Class NullItemState Represents the null item state for items that do not have a state. Inheritance System.Object NullItemState Implements IItemState Namespace : OpenMod.Extensions.Games.Abstractions.Items Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public class NullItemState : object, IItemState Properties | Improve this Doc View Source Instance Declaration public static NullItemState Instance { get; } Property Value Type Description NullItemState | Improve this Doc View Source ItemAmount Declaration public double ItemAmount { get; } Property Value Type Description System.Double | Improve this Doc View Source ItemDurability Declaration public double ItemDurability { get; } Property Value Type Description System.Double | Improve this Doc View Source ItemQuality Declaration public double ItemQuality { get; } Property Value Type Description System.Double | Improve this Doc View Source StateData Declaration public byte[] StateData { get; } Property Value Type Description System.Byte [] Implements IItemState Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.KnownGameCapabilities.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.KnownGameCapabilities.html",
    "title": "Class KnownGameCapabilities | OpenMod Docs",
    "keywords": "Class KnownGameCapabilities Represents common game capabilities. Can be used to check if the current game supports specific features. See HasCapability(String) . Inheritance System.Object KnownGameCapabilities Namespace : OpenMod.Extensions.Games.Abstractions Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class KnownGameCapabilities : object Fields | Improve this Doc View Source Health Declaration public static readonly string Health Field Value Type Description System.String | Improve this Doc View Source Inventory Declaration public static readonly string Inventory Field Value Type Description System.String | Improve this Doc View Source Vehicles Declaration public static readonly string Vehicles Field Value Type Description System.String"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Persistence.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Persistence.html",
    "title": "Namespace OpenMod.Extensions.Games.Abstractions.Persistence | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Games.Abstractions.Persistence Interfaces IGameSaveEvent The event that is triggered when the game performs a save."
  },
  "api/OpenMod.Extensions.Games.Abstractions.Persistence.IGameSaveEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Persistence.IGameSaveEvent.html",
    "title": "Interface IGameSaveEvent | OpenMod Docs",
    "keywords": "Interface IGameSaveEvent The event that is triggered when the game performs a save. Inherited Members IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Persistence Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IGameSaveEvent : IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.html",
    "title": "Namespace OpenMod.Extensions.Games.Abstractions.Players | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Games.Abstractions.Players Classes KnownDamageSources Represents common damage sources. Support depends on the game. KnownPlayerStances Represents common player stances. Support depends on the game. Interfaces IBanningPlayerEvent IPlayer Represents a player entity. IPlayerChattingEvent The event that is triggered before a player message is broadcasted. IPlayerDamagedEvent The event that is triggered when damage has been dealt to a player. IPlayerDamagingEvent The event that is triggered when damage is to be dealt to a player. IPlayerDeathEvent The event that is triggered when a player death occurs. IPlayerDyingEvent The event that is triggered when a player is dying. IPlayerEnteredVehicleEvent The event that is triggered when a player has entered a vehicle. IPlayerEnteringVehicleEvent The event that is triggered when a player is entering a vehicle. IPlayerEvent The base interface for all player related events. IPlayerExitedVehicleEvent The event that is triggered when a player has exited a vehicle. IPlayerExitingVehicleEvent The event that is triggered when a player is exiting a vehicle. IPlayerItemEquippedEvent The event that is triggered when a player has equipped an item. IPlayerItemEquippingEvent The event that is triggered when a player is equpping an item. IPlayerItemUnequippedEvent The event that is triggered when a player has unequipped an item. IPlayerItemUnequippingEvent The event that is triggered when a player is unequipping an item. IPlayerSpawnedEvent The event that is triggered when a player has spawned. IPlayerUser Represents a player user. IPlayerUser<T> Represents a player user."
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IBanningPlayerEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IBanningPlayerEvent.html",
    "title": "Interface IBanningPlayerEvent | OpenMod Docs",
    "keywords": "Interface IBanningPlayerEvent Inherited Members IPlayerEvent.Player ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IBanningPlayerEvent : IPlayerEvent, ICancellableEvent, IEvent Properties | Improve this Doc View Source Duration Declaration TimeSpan Duration { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source InstigatorId Declaration string InstigatorId { get; } Property Value Type Description System.String | Improve this Doc View Source InstigatorType Declaration string InstigatorType { get; } Property Value Type Description System.String | Improve this Doc View Source Reason Declaration string? Reason { get; set; } Property Value Type Description System.Nullable < System.String > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayer.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayer.html",
    "title": "Interface IPlayer | OpenMod Docs",
    "keywords": "Interface IPlayer Represents a player entity. Inherited Members IEntity.Asset IEntity.State IEntity.EntityInstanceId IEntity.SetPositionAsync(Vector3) IEntity.SetPositionAsync(Vector3, Quaternion) IGameObject.Transform Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayer : IEntity, IGameObject Properties | Improve this Doc View Source Address The address of the player. Declaration IPAddress? Address { get; } Property Value Type Description System.Nullable < IPAddress > | Improve this Doc View Source Stance The stance of the player. Declaration string Stance { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerChattingEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerChattingEvent.html",
    "title": "Interface IPlayerChattingEvent | OpenMod Docs",
    "keywords": "Interface IPlayerChattingEvent The event that is triggered before a player message is broadcasted. Inherited Members IPlayerEvent.Player ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerChattingEvent : IPlayerEvent, ICancellableEvent, IEvent Properties | Improve this Doc View Source Message Gets the chat message to be broadcasted. Declaration string Message { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerDamagedEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerDamagedEvent.html",
    "title": "Interface IPlayerDamagedEvent | OpenMod Docs",
    "keywords": "Interface IPlayerDamagedEvent The event that is triggered when damage has been dealt to a player. Inherited Members IPlayerEvent.Player IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerDamagedEvent : IPlayerEvent, IEvent Properties | Improve this Doc View Source DamageAmount Gets the amount of the damage dealt. Declaration double DamageAmount { get; } Property Value Type Description System.Double | Improve this Doc View Source DamageSource GEts the damage source. Declaration IDamageSource DamageSource { get; } Property Value Type Description IDamageSource Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerDamagingEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerDamagingEvent.html",
    "title": "Interface IPlayerDamagingEvent | OpenMod Docs",
    "keywords": "Interface IPlayerDamagingEvent The event that is triggered when damage is to be dealt to a player. Inherited Members IPlayerEvent.Player ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerDamagingEvent : IPlayerEvent, ICancellableEvent, IEvent Properties | Improve this Doc View Source DamageAmount The amount of the damage. Declaration double DamageAmount { get; set; } Property Value Type Description System.Double | Improve this Doc View Source DamageSource The damage source. Declaration IDamageSource DamageSource { get; } Property Value Type Description IDamageSource Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerDeathEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerDeathEvent.html",
    "title": "Interface IPlayerDeathEvent | OpenMod Docs",
    "keywords": "Interface IPlayerDeathEvent The event that is triggered when a player death occurs. Inherited Members IPlayerEvent.Player IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerDeathEvent : IPlayerEvent, IEvent Properties | Improve this Doc View Source DeathPosition The position the player died at. Declaration Vector3 DeathPosition { get; } Property Value Type Description Vector3 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerDyingEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerDyingEvent.html",
    "title": "Interface IPlayerDyingEvent | OpenMod Docs",
    "keywords": "Interface IPlayerDyingEvent The event that is triggered when a player is dying. Inherited Members IPlayerDamagingEvent.DamageSource IPlayerDamagingEvent.DamageAmount IPlayerEvent.Player ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerDyingEvent : IPlayerDamagingEvent, IPlayerEvent, ICancellableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerEnteredVehicleEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerEnteredVehicleEvent.html",
    "title": "Interface IPlayerEnteredVehicleEvent | OpenMod Docs",
    "keywords": "Interface IPlayerEnteredVehicleEvent The event that is triggered when a player has entered a vehicle. Inherited Members IPlayerEvent.Player IVehicleEvent.Vehicle IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerEnteredVehicleEvent : IPlayerEvent, IVehicleEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerEnteringVehicleEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerEnteringVehicleEvent.html",
    "title": "Interface IPlayerEnteringVehicleEvent | OpenMod Docs",
    "keywords": "Interface IPlayerEnteringVehicleEvent The event that is triggered when a player is entering a vehicle. Inherited Members IPlayerEvent.Player IVehicleEvent.Vehicle ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerEnteringVehicleEvent : IPlayerEvent, IVehicleEvent, ICancellableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerEvent.html",
    "title": "Interface IPlayerEvent | OpenMod Docs",
    "keywords": "Interface IPlayerEvent The base interface for all player related events. Inherited Members IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerEvent : IEvent Properties | Improve this Doc View Source Player The player related to the event. Declaration IPlayer Player { get; } Property Value Type Description IPlayer Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerExitedVehicleEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerExitedVehicleEvent.html",
    "title": "Interface IPlayerExitedVehicleEvent | OpenMod Docs",
    "keywords": "Interface IPlayerExitedVehicleEvent The event that is triggered when a player has exited a vehicle. Inherited Members IPlayerEvent.Player IVehicleEvent.Vehicle IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerExitedVehicleEvent : IPlayerEvent, IVehicleEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerExitingVehicleEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerExitingVehicleEvent.html",
    "title": "Interface IPlayerExitingVehicleEvent | OpenMod Docs",
    "keywords": "Interface IPlayerExitingVehicleEvent The event that is triggered when a player is exiting a vehicle. Inherited Members IPlayerEvent.Player IVehicleEvent.Vehicle ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerExitingVehicleEvent : IPlayerEvent, IVehicleEvent, ICancellableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerItemEquippedEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerItemEquippedEvent.html",
    "title": "Interface IPlayerItemEquippedEvent | OpenMod Docs",
    "keywords": "Interface IPlayerItemEquippedEvent The event that is triggered when a player has equipped an item. Inherited Members IPlayerEvent.Player IItemEvent.Item IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerItemEquippedEvent : IPlayerEvent, IItemEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerItemEquippingEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerItemEquippingEvent.html",
    "title": "Interface IPlayerItemEquippingEvent | OpenMod Docs",
    "keywords": "Interface IPlayerItemEquippingEvent The event that is triggered when a player is equpping an item. Inherited Members IPlayerEvent.Player IItemEvent.Item ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerItemEquippingEvent : IPlayerEvent, IItemEvent, ICancellableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerItemUnequippedEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerItemUnequippedEvent.html",
    "title": "Interface IPlayerItemUnequippedEvent | OpenMod Docs",
    "keywords": "Interface IPlayerItemUnequippedEvent The event that is triggered when a player has unequipped an item. Inherited Members IPlayerEvent.Player IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerItemUnequippedEvent : IPlayerEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerItemUnequippingEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerItemUnequippingEvent.html",
    "title": "Interface IPlayerItemUnequippingEvent | OpenMod Docs",
    "keywords": "Interface IPlayerItemUnequippingEvent The event that is triggered when a player is unequipping an item. Inherited Members IPlayerEvent.Player IItemEvent.Item ICancellableEvent.IsCancelled IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerItemUnequippingEvent : IPlayerEvent, IItemEvent, ICancellableEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerSpawnedEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerSpawnedEvent.html",
    "title": "Interface IPlayerSpawnedEvent | OpenMod Docs",
    "keywords": "Interface IPlayerSpawnedEvent The event that is triggered when a player has spawned. Inherited Members IPlayerEvent.Player IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerSpawnedEvent : IPlayerEvent, IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerUser.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerUser.html",
    "title": "Interface IPlayerUser | OpenMod Docs",
    "keywords": "Interface IPlayerUser Represents a player user. Inherited Members IUser.SavePersistentDataAsync<T>(String, T) IUser.GetPersistentDataAsync<T>(String) IUser.Session IUser.Provider ICommandActor.PrintMessageAsync(String) ICommandActor.PrintMessageAsync(String, Color) IPermissionActor.Id IPermissionActor.Type IPermissionActor.DisplayName IPermissionActor.FullActorName Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerUser : IUser, ICommandActor, IPermissionActor Properties | Improve this Doc View Source Player Gets the player. Declaration IPlayer Player { get; } Property Value Type Description IPlayer Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerUser-1.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.IPlayerUser-1.html",
    "title": "Interface IPlayerUser<T> | OpenMod Docs",
    "keywords": "Interface IPlayerUser<T> Represents a player user. Inherited Members IUser.SavePersistentDataAsync<T>(String, T) IUser.GetPersistentDataAsync<T>(String) IUser.Session IUser.Provider ICommandActor.PrintMessageAsync(String) ICommandActor.PrintMessageAsync(String, Color) IPermissionActor.Id IPermissionActor.Type IPermissionActor.DisplayName IPermissionActor.FullActorName Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IPlayerUser<out T> : IPlayerUser, IUser, ICommandActor, IPermissionActor where T : IPlayer Type Parameters Name Description T The player type. Properties | Improve this Doc View Source Player Gets the player. Declaration T Player { get; } Property Value Type Description T Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.KnownDamageSources.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.KnownDamageSources.html",
    "title": "Class KnownDamageSources | OpenMod Docs",
    "keywords": "Class KnownDamageSources Represents common damage sources. Support depends on the game. Inheritance System.Object KnownDamageSources Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public class KnownDamageSources : object Fields | Improve this Doc View Source Entity Declaration public const string Entity = null Field Value Type Description System.String | Improve this Doc View Source Environment Declaration public const string Environment = null Field Value Type Description System.String | Improve this Doc View Source Explosion Declaration public const string Explosion = null Field Value Type Description System.String | Improve this Doc View Source Vehicle Declaration public const string Vehicle = null Field Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Players.KnownPlayerStances.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Players.KnownPlayerStances.html",
    "title": "Class KnownPlayerStances | OpenMod Docs",
    "keywords": "Class KnownPlayerStances Represents common player stances. Support depends on the game. Inheritance System.Object KnownPlayerStances Namespace : OpenMod.Extensions.Games.Abstractions.Players Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public class KnownPlayerStances : object Fields | Improve this Doc View Source Climb Declaration public const string Climb = null Field Value Type Description System.String | Improve this Doc View Source Crouch Declaration public const string Crouch = null Field Value Type Description System.String | Improve this Doc View Source Driving Declaration public const string Driving = null Field Value Type Description System.String | Improve this Doc View Source Prone Declaration public const string Prone = null Field Value Type Description System.String | Improve this Doc View Source Sitting Declaration public const string Sitting = null Field Value Type Description System.String | Improve this Doc View Source Sprint Declaration public const string Sprint = null Field Value Type Description System.String | Improve this Doc View Source Stand Declaration public const string Stand = null Field Value Type Description System.String | Improve this Doc View Source Swim Declaration public const string Swim = null Field Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Transforms.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Transforms.html",
    "title": "Namespace OpenMod.Extensions.Games.Abstractions.Transforms | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Games.Abstractions.Transforms Classes QuaternionMathExtensions Interfaces IWorldTransform"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Transforms.IWorldTransform.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Transforms.IWorldTransform.html",
    "title": "Interface IWorldTransform | OpenMod Docs",
    "keywords": "Interface IWorldTransform Namespace : OpenMod.Extensions.Games.Abstractions.Transforms Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IWorldTransform : IReadOnlyCollection<IWorldTransform> Properties | Improve this Doc View Source ChildTransforms Gets the child transforms of this transform. Declaration IReadOnlyCollection<IWorldTransform> ChildTransforms { get; } Property Value Type Description IReadOnlyCollection < IWorldTransform > | Improve this Doc View Source ParentTransform Gets the parent transform of this transform. Declaration IWorldTransform ParentTransform { get; } Property Value Type Description IWorldTransform | Improve this Doc View Source Position Gets the position of the transform. Declaration Vector3 Position { get; } Property Value Type Description Vector3 | Improve this Doc View Source Rotation Gets the rotation of the transform. Declaration Quaternion Rotation { get; } Property Value Type Description Quaternion | Improve this Doc View Source TransformName Gets the name of the transform. Declaration string? TransformName { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source Velocity Gets the velocity of the transform. Declaration Vector3 Velocity { get; } Property Value Type Description Vector3 Methods | Improve this Doc View Source DestroyAsync() Destorys the transform. Declaration Task DestroyAsync() Returns Type Description Task | Improve this Doc View Source SetPositionAsync(Vector3) Sets the position of the transform. Declaration Task<bool> SetPositionAsync(Vector3 position) Parameters Type Name Description Vector3 position The position to set to. Returns Type Description Task < System.Boolean > True if successful; otherwise, false . | Improve this Doc View Source SetRotationAsync(Quaternion) Sets the rotation of the transform. Declaration Task<bool> SetRotationAsync(Quaternion rotation) Parameters Type Name Description Quaternion rotation The rotation to set to. Returns Type Description Task < System.Boolean > True if successful; otherwise, false . | Improve this Doc View Source SetVelocityAsync(Vector3) Sets the velocity of the transform. Declaration Task<bool> SetVelocityAsync(Vector3 velocity) Parameters Type Name Description Vector3 velocity The velocity to set. Returns Type Description Task < System.Boolean > True if successful; otherwise, false . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Transforms.QuaternionMathExtensions.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Transforms.QuaternionMathExtensions.html",
    "title": "Class QuaternionMathExtensions | OpenMod Docs",
    "keywords": "Class QuaternionMathExtensions Inheritance System.Object QuaternionMathExtensions Namespace : OpenMod.Extensions.Games.Abstractions.Transforms Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class QuaternionMathExtensions : object Methods | Improve this Doc View Source Rotate(Vector3, Quaternion) Rotates this point by the given rotation. Declaration public static Vector3 Rotate(this Vector3 point, Quaternion rotation) Parameters Type Name Description Vector3 point The point to rotate. Quaternion rotation The rotation to apply. Returns Type Description Vector3 The rotated point. | Improve this Doc View Source ToEulerAngles(Quaternion) Converts a quaternion to its euler angles where X is pitch, Y is yaw, and Z is roll. Declaration public static Vector3 ToEulerAngles(this Quaternion quaternion) Parameters Type Name Description Quaternion quaternion The quaternion to convert. Returns Type Description Vector3 Euler angles of the quaternion. | Improve this Doc View Source ToQuaternion(Vector3) Converts euler angles to its quaternion where where X is pitch, Y is yaw, and Z is roll. Declaration public static Quaternion ToQuaternion(this Vector3 eulerAngles) Parameters Type Name Description Vector3 eulerAngles Returns Type Description Quaternion"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.html",
    "title": "Namespace OpenMod.Extensions.Games.Abstractions.Vehicles | OpenMod Docs",
    "keywords": "Namespace OpenMod.Extensions.Games.Abstractions.Vehicles Classes KnownVehicleTypes Represents common vehicle types. Support depends on the game. NullVehicleState The null vehicle state for vehicles that do not have a state. VehicleDirectoryExtensions VehicleSpawnerExtensions Interfaces ICanEnterVehicle Represents entities that can enter vehicles. IVehicle Represents a vehicle. IVehicleAsset Represents a vehicle asset. IVehicleDirectory The service for querying vehicles and vehicle assets. IVehicleEvent The base interface for all vehicle related events. IVehicleSpawner The service for spawning vehicles. IVehicleState Represents the state of a vehicle."
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.ICanEnterVehicle.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.ICanEnterVehicle.html",
    "title": "Interface ICanEnterVehicle | OpenMod Docs",
    "keywords": "Interface ICanEnterVehicle Represents entities that can enter vehicles. Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface ICanEnterVehicle Properties | Improve this Doc View Source CurrentVehicle Gets the current vehicle. Returns null if the entity is not a passenger. Declaration IVehicle CurrentVehicle { get; } Property Value Type Description IVehicle Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicle.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicle.html",
    "title": "Interface IVehicle | OpenMod Docs",
    "keywords": "Interface IVehicle Represents a vehicle. Inherited Members IHasOwnership.Ownership Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IVehicle : IHasOwnership Properties | Improve this Doc View Source Asset Gets the asset of the vehicle. Declaration IVehicleAsset Asset { get; } Property Value Type Description IVehicleAsset | Improve this Doc View Source Driver Gets the driver of the vehicle. Declaration IEntity Driver { get; } Property Value Type Description IEntity | Improve this Doc View Source Passengers Gets the passengers of the vehicle. Declaration IReadOnlyCollection<IEntity> Passengers { get; } Property Value Type Description IReadOnlyCollection < IEntity > | Improve this Doc View Source State Gets the state of the vehicle. Declaration IVehicleState State { get; } Property Value Type Description IVehicleState | Improve this Doc View Source Transform Gets the transform of the vehicle. Declaration IWorldTransform Transform { get; } Property Value Type Description IWorldTransform | Improve this Doc View Source VehicleInstanceId Gets the unique instance ID of the vehicle. Declaration string VehicleInstanceId { get; } Property Value Type Description System.String Methods | Improve this Doc View Source AddPassengerAsync(IEntity) Adds a passenger to the vehicle. Declaration Task<bool> AddPassengerAsync(IEntity passenger) Parameters Type Name Description IEntity passenger The passenger to add. Returns Type Description Task < System.Boolean > True if the passenger was added; otherwise, false . | Improve this Doc View Source DestroyAsync() Destroys the vehicle. Declaration Task DestroyAsync() Returns Type Description Task | Improve this Doc View Source RemovePassengerAsync(IEntity) Removes a passenger from the vehicle. Declaration Task<bool> RemovePassengerAsync(IEntity passenger) Parameters Type Name Description IEntity passenger The passenger to remove. Returns Type Description Task < System.Boolean > True if the passenger was removed; otherwise, false . Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleAsset.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleAsset.html",
    "title": "Interface IVehicleAsset | OpenMod Docs",
    "keywords": "Interface IVehicleAsset Represents a vehicle asset. Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IVehicleAsset Properties | Improve this Doc View Source VehicleAssetId Gets the ID of the vehicle asset. Declaration string VehicleAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source VehicleName The human readable name of the asset. Declaration string VehicleName { get; } Property Value Type Description System.String | Improve this Doc View Source VehicleType Gets the type of the vehicle asset. Declaration string VehicleType { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleDirectory.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleDirectory.html",
    "title": "Interface IVehicleDirectory | OpenMod Docs",
    "keywords": "Interface IVehicleDirectory The service for querying vehicles and vehicle assets. Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IVehicleDirectory Methods | Improve this Doc View Source GetVehicleAssetsAsync() Gets all vehicle assets. Declaration Task<IReadOnlyCollection<IVehicleAsset>> GetVehicleAssetsAsync() Returns Type Description Task < IReadOnlyCollection < IVehicleAsset >> | Improve this Doc View Source GetVehiclesAsync() Gets all vehicles. Declaration Task<IReadOnlyCollection<IVehicle>> GetVehiclesAsync() Returns Type Description Task < IReadOnlyCollection < IVehicle >> Extension Methods VehicleDirectoryExtensions.FindByIdAsync(IVehicleDirectory, String) VehicleDirectoryExtensions.FindByNameAsync(IVehicleDirectory, String, Boolean) DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleEvent.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleEvent.html",
    "title": "Interface IVehicleEvent | OpenMod Docs",
    "keywords": "Interface IVehicleEvent The base interface for all vehicle related events. Inherited Members IEvent.Arguments IEvent.Data Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IVehicleEvent : IEvent Properties | Improve this Doc View Source Vehicle Gets the vehicle related to the event. Declaration IVehicle Vehicle { get; } Property Value Type Description IVehicle Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleSpawner.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleSpawner.html",
    "title": "Interface IVehicleSpawner | OpenMod Docs",
    "keywords": "Interface IVehicleSpawner The service for spawning vehicles. Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IVehicleSpawner Methods | Improve this Doc View Source SpawnVehicleAsync(IPlayer, String, IVehicleState) Spawns a vehicle for the given player. Declaration Task<IVehicle> SpawnVehicleAsync(IPlayer player, string vehicleAssetId, IVehicleState state = null) Parameters Type Name Description IPlayer player The player to spawn the vehicle for. System.String vehicleAssetId The ID of the vehicle asset. IVehicleState state The optional state of the vehicle. Returns Type Description Task < IVehicle > The spawned vehicle if successful; otherwise, null . | Improve this Doc View Source SpawnVehicleAsync(Vector3, Quaternion, String, IVehicleState) Spawns a vehicle at the given position. Declaration Task<IVehicle> SpawnVehicleAsync(Vector3 position, Quaternion rotation, string vehicleAssetId, IVehicleState state = null) Parameters Type Name Description Vector3 position The position to spawn the vehicle at. Quaternion rotation The rotation to spawn the vehicle in. System.String vehicleAssetId The ID of the vehicle asset. IVehicleState state The optional state of the vehicle. Returns Type Description Task < IVehicle > The spawned vehicle if successful; otherwise, null . Extension Methods VehicleSpawnerExtensions.SpawnVehicleAsync(IVehicleSpawner, IPlayer, String) VehicleSpawnerExtensions.SpawnVehicleAsync(IVehicleSpawner, Vector3, String, IVehicleState) DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleState.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.IVehicleState.html",
    "title": "Interface IVehicleState | OpenMod Docs",
    "keywords": "Interface IVehicleState Represents the state of a vehicle. Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public interface IVehicleState Properties | Improve this Doc View Source StateData The vehicle state. Declaration byte[] StateData { get; } Property Value Type Description System.Byte [] Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.KnownVehicleTypes.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.KnownVehicleTypes.html",
    "title": "Class KnownVehicleTypes | OpenMod Docs",
    "keywords": "Class KnownVehicleTypes Represents common vehicle types. Support depends on the game. Inheritance System.Object KnownVehicleTypes Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class KnownVehicleTypes : object Fields | Improve this Doc View Source Bike Declaration public const string Bike = null Field Value Type Description System.String | Improve this Doc View Source Car Declaration public const string Car = null Field Value Type Description System.String | Improve this Doc View Source Helicopter Declaration public const string Helicopter = null Field Value Type Description System.String | Improve this Doc View Source Motorcycle Declaration public const string Motorcycle = null Field Value Type Description System.String | Improve this Doc View Source Plane Declaration public const string Plane = null Field Value Type Description System.String | Improve this Doc View Source Train Declaration public const string Train = null Field Value Type Description System.String"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.NullVehicleState.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.NullVehicleState.html",
    "title": "Class NullVehicleState | OpenMod Docs",
    "keywords": "Class NullVehicleState The null vehicle state for vehicles that do not have a state. Inheritance System.Object NullVehicleState Implements IVehicleState Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public class NullVehicleState : object, IVehicleState Properties | Improve this Doc View Source StateData Declaration public byte[] StateData { get; } Property Value Type Description System.Byte [] Implements IVehicleState Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.VehicleDirectoryExtensions.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.VehicleDirectoryExtensions.html",
    "title": "Class VehicleDirectoryExtensions | OpenMod Docs",
    "keywords": "Class VehicleDirectoryExtensions Inheritance System.Object VehicleDirectoryExtensions Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class VehicleDirectoryExtensions : object Methods | Improve this Doc View Source FindByIdAsync(IVehicleDirectory, String) Searches for vehicles by the vehicle asset id. Declaration public static Task<IVehicleAsset> FindByIdAsync(this IVehicleDirectory directory, string vehicleAssetId) Parameters Type Name Description IVehicleDirectory directory The vehicle directory service. System.String vehicleAssetId The vehicle asset id to search for. Returns Type Description Task < IVehicleAsset > The IVehicleAsset if found; otherwise, null . | Improve this Doc View Source FindByNameAsync(IVehicleDirectory, String, Boolean) Searches for vehicles by the vehicle asset name. Declaration public static Task<IVehicleAsset> FindByNameAsync(this IVehicleDirectory directory, string vehicleName, bool exact = true) Parameters Type Name Description IVehicleDirectory directory The item directory service. System.String vehicleName The name of the vehicle asset. System.Boolean exact If true, only exact name matches will be used. Returns Type Description Task < IVehicleAsset > The IVehicleAsset if found; otherwise, null ."
  },
  "api/OpenMod.Extensions.Games.Abstractions.Vehicles.VehicleSpawnerExtensions.html": {
    "href": "api/OpenMod.Extensions.Games.Abstractions.Vehicles.VehicleSpawnerExtensions.html",
    "title": "Class VehicleSpawnerExtensions | OpenMod Docs",
    "keywords": "Class VehicleSpawnerExtensions Inheritance System.Object VehicleSpawnerExtensions Namespace : OpenMod.Extensions.Games.Abstractions.Vehicles Assembly : OpenMod.Extensions.Games.Abstractions.dll Syntax public static class VehicleSpawnerExtensions : object Methods | Improve this Doc View Source SpawnVehicleAsync(IVehicleSpawner, IPlayer, String) Declaration public static Task<IVehicle> SpawnVehicleAsync(this IVehicleSpawner vehicleSpawner, IPlayer player, string vehicleAssetId) Parameters Type Name Description IVehicleSpawner vehicleSpawner IPlayer player System.String vehicleAssetId Returns Type Description Task < IVehicle > | Improve this Doc View Source SpawnVehicleAsync(IVehicleSpawner, Vector3, String, IVehicleState) Spawns a vehicle at the given position. Declaration public static Task<IVehicle> SpawnVehicleAsync(this IVehicleSpawner vehicleSpawner, Vector3 position, string vehicleAssetId, IVehicleState state = null) Parameters Type Name Description IVehicleSpawner vehicleSpawner The vehicle spawner. Vector3 position The position to spawn the vehicle at. System.String vehicleAssetId The ID of the vehicle asset. IVehicleState state The optional state of the vehicle. Returns Type Description Task < IVehicle > The spawned vehicle if successful; otherwise, null ."
  },
  "api/OpenMod.NuGet.html": {
    "href": "api/OpenMod.NuGet.html",
    "title": "Namespace OpenMod.NuGet | OpenMod Docs",
    "keywords": "Namespace OpenMod.NuGet Classes NuGetAssembly NuGetConsoleLogger NuGetInstallResult NuGetPackageManager NuGetQueryResult PackagesDataStore SerializedNuGetPackage SerializedPackagesFile Enums NuGetInstallCode Delegates NuGetPackageManager.AssemblyLoader"
  },
  "api/OpenMod.NuGet.NuGetAssembly.html": {
    "href": "api/OpenMod.NuGet.NuGetAssembly.html",
    "title": "Class NuGetAssembly | OpenMod Docs",
    "keywords": "Class NuGetAssembly Inheritance System.Object NuGetAssembly Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public sealed class NuGetAssembly : object Properties | Improve this Doc View Source Assembly Declaration public WeakReference Assembly { get; set; } Property Value Type Description WeakReference | Improve this Doc View Source AssemblyName Declaration public string AssemblyName { get; set; } Property Value Type Description System.String | Improve this Doc View Source AssemblyName2 Declaration public AssemblyName AssemblyName2 { get; set; } Property Value Type Description AssemblyName | Improve this Doc View Source Package Declaration public PackageIdentity Package { get; set; } Property Value Type Description PackageIdentity | Improve this Doc View Source Version Declaration public Version Version { get; set; } Property Value Type Description Version Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.NuGet.NuGetConsoleLogger.html": {
    "href": "api/OpenMod.NuGet.NuGetConsoleLogger.html",
    "title": "Class NuGetConsoleLogger | OpenMod Docs",
    "keywords": "Class NuGetConsoleLogger Inheritance System.Object NuGetConsoleLogger Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public class NuGetConsoleLogger : LoggerBase Constructors | Improve this Doc View Source NuGetConsoleLogger() Declaration public NuGetConsoleLogger() | Improve this Doc View Source NuGetConsoleLogger(LogLevel) Declaration public NuGetConsoleLogger(LogLevel minimalLogLevel) Parameters Type Name Description LogLevel minimalLogLevel Methods | Improve this Doc View Source Log(ILogMessage) Declaration public override void Log(ILogMessage message) Parameters Type Name Description ILogMessage message | Improve this Doc View Source LogAsync(ILogMessage) Declaration public override Task LogAsync(ILogMessage message) Parameters Type Name Description ILogMessage message Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.NuGet.NuGetInstallCode.html": {
    "href": "api/OpenMod.NuGet.NuGetInstallCode.html",
    "title": "Enum NuGetInstallCode | OpenMod Docs",
    "keywords": "Enum NuGetInstallCode Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public enum NuGetInstallCode : int Fields Name Description InvalidVersion NoUpdatesFound PackageOrVersionNotFound Success"
  },
  "api/OpenMod.NuGet.NuGetInstallResult.html": {
    "href": "api/OpenMod.NuGet.NuGetInstallResult.html",
    "title": "Class NuGetInstallResult | OpenMod Docs",
    "keywords": "Class NuGetInstallResult Inheritance System.Object NuGetInstallResult Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public sealed class NuGetInstallResult : object Constructors | Improve this Doc View Source NuGetInstallResult(NuGetInstallCode) Declaration public NuGetInstallResult(NuGetInstallCode code) Parameters Type Name Description NuGetInstallCode code | Improve this Doc View Source NuGetInstallResult(NuGetInstallCode, Nullable<PackageIdentity>) Declaration public NuGetInstallResult(NuGetInstallCode code, PackageIdentity? identity) Parameters Type Name Description NuGetInstallCode code System.Nullable < PackageIdentity > identity | Improve this Doc View Source NuGetInstallResult(PackageIdentity) Declaration public NuGetInstallResult(PackageIdentity identity) Parameters Type Name Description PackageIdentity identity Properties | Improve this Doc View Source Code Declaration public NuGetInstallCode Code { get; set; } Property Value Type Description NuGetInstallCode | Improve this Doc View Source Identity Declaration public PackageIdentity? Identity { get; } Property Value Type Description System.Nullable < PackageIdentity > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.NuGet.NuGetPackageManager.AssemblyLoader.html": {
    "href": "api/OpenMod.NuGet.NuGetPackageManager.AssemblyLoader.html",
    "title": "Delegate NuGetPackageManager.AssemblyLoader | OpenMod Docs",
    "keywords": "Delegate NuGetPackageManager.AssemblyLoader Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public delegate Assembly AssemblyLoader(byte[] assemblyData, byte[] assemblySymbols); Parameters Type Name Description System.Byte [] assemblyData System.Byte [] assemblySymbols Returns Type Description Assembly Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.NuGet.NuGetPackageManager.html": {
    "href": "api/OpenMod.NuGet.NuGetPackageManager.html",
    "title": "Class NuGetPackageManager | OpenMod Docs",
    "keywords": "Class NuGetPackageManager Inheritance System.Object NuGetPackageManager Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public class NuGetPackageManager : IDisposable Constructors | Improve this Doc View Source NuGetPackageManager(String) Declaration public NuGetPackageManager(string packagesDirectory) Parameters Type Name Description System.String packagesDirectory | Improve this Doc View Source NuGetPackageManager(String, Boolean) Declaration public NuGetPackageManager(string packagesDirectory, bool usePackagesFiles) Parameters Type Name Description System.String packagesDirectory System.Boolean usePackagesFiles Properties | Improve this Doc View Source AssemblyResolverInstalled Declaration public bool AssemblyResolverInstalled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Logger Declaration public ILogger Logger { get; set; } Property Value Type Description ILogger | Improve this Doc View Source PackagesDirectory Declaration public string PackagesDirectory { get; } Property Value Type Description System.String Methods | Improve this Doc View Source ClearCache(Boolean) Declaration public void ClearCache(bool clearGlobalCache = false) Parameters Type Name Description System.Boolean clearGlobalCache | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetDependenciesAsync(PackageIdentity) Declaration public virtual Task<ICollection<PackageDependency>> GetDependenciesAsync(PackageIdentity identity) Parameters Type Name Description PackageIdentity identity Returns Type Description Task < ICollection < PackageDependency >> | Improve this Doc View Source GetLatestPackageIdentityAsync(String) Declaration public virtual Task<PackageIdentity?> GetLatestPackageIdentityAsync(string packageId) Parameters Type Name Description System.String packageId Returns Type Description Task < System.Nullable < PackageIdentity >> | Improve this Doc View Source GetLoadedAssemblies() Declaration public virtual ICollection<NuGetAssembly> GetLoadedAssemblies() Returns Type Description ICollection < NuGetAssembly > | Improve this Doc View Source GetNugetPackageFile(PackageIdentity) Declaration public virtual string GetNugetPackageFile(PackageIdentity identity) Parameters Type Name Description PackageIdentity identity Returns Type Description System.String | Improve this Doc View Source IgnoreDependencies(String[]) Declaration public void IgnoreDependencies(params string[] packageIds) Parameters Type Name Description System.String [] packageIds | Improve this Doc View Source InstallAssemblyResolver() Declaration public virtual void InstallAssemblyResolver() | Improve this Doc View Source InstallAsync(PackageIdentity, Boolean) Declaration public virtual Task<NuGetInstallResult> InstallAsync(PackageIdentity packageIdentity, bool allowPreReleaseVersions = false) Parameters Type Name Description PackageIdentity packageIdentity System.Boolean allowPreReleaseVersions Returns Type Description Task < NuGetInstallResult > | Improve this Doc View Source InstallMissingPackagesAsync(Boolean) Declaration public Task<int> InstallMissingPackagesAsync(bool updateExisting = true) Parameters Type Name Description System.Boolean updateExisting Returns Type Description Task < System.Int32 > | Improve this Doc View Source InstallPackagesAsync(ICollection<PackageIdentity>, Boolean) Declaration public Task InstallPackagesAsync(ICollection<PackageIdentity> packages, bool updateExisting = true) Parameters Type Name Description ICollection < PackageIdentity > packages System.Boolean updateExisting Returns Type Description Task | Improve this Doc View Source IsPackageInstalledAsync(String) Declaration public virtual Task<bool> IsPackageInstalledAsync(string packageId) Parameters Type Name Description System.String packageId Returns Type Description Task < System.Boolean > | Improve this Doc View Source LoadAssembliesFromNuGetPackageAsync(String) Declaration public virtual Task<IEnumerable<Assembly>> LoadAssembliesFromNuGetPackageAsync(string nupkgFile) Parameters Type Name Description System.String nupkgFile Returns Type Description Task < IEnumerable < Assembly >> | Improve this Doc View Source QueryDependenciesAsync(PackageIdentity, SourceCacheContext, Boolean) Declaration public virtual Task<NuGetQueryResult> QueryDependenciesAsync(PackageIdentity identity, SourceCacheContext cacheContext, bool allowPreReleaseVersions) Parameters Type Name Description PackageIdentity identity SourceCacheContext cacheContext System.Boolean allowPreReleaseVersions Returns Type Description Task < NuGetQueryResult > | Improve this Doc View Source QueryPackageDependenciesAsync(PackageIdentity, SourceCacheContext, IEnumerable<SourceRepository>, ISet<SourcePackageDependencyInfo>, Boolean) Declaration protected virtual Task QueryPackageDependenciesAsync(PackageIdentity package, SourceCacheContext cacheContext, IEnumerable<SourceRepository> repositories, ISet<SourcePackageDependencyInfo> availablePackages, bool allowPreReleaseVersions) Parameters Type Name Description PackageIdentity package SourceCacheContext cacheContext IEnumerable < SourceRepository > repositories ISet < SourcePackageDependencyInfo > availablePackages System.Boolean allowPreReleaseVersions Returns Type Description Task | Improve this Doc View Source QueryPackageExactAsync(String, Nullable<String>, Boolean) Declaration public virtual Task<IPackageSearchMetadata?> QueryPackageExactAsync(string packageId, string? version = null, bool includePreRelease = false) Parameters Type Name Description System.String packageId System.Nullable < System.String > version System.Boolean includePreRelease Returns Type Description Task < System.Nullable < IPackageSearchMetadata >> | Improve this Doc View Source QueryPackageLatestVersionAsync(PackageIdentity, SourceCacheContext, IEnumerable<SourceRepository>, Boolean) Declaration protected virtual Task<PackageIdentity> QueryPackageLatestVersionAsync(PackageIdentity package, SourceCacheContext cacheContext, IEnumerable<SourceRepository> repositories, bool allowPreReleaseVersions) Parameters Type Name Description PackageIdentity package SourceCacheContext cacheContext IEnumerable < SourceRepository > repositories System.Boolean allowPreReleaseVersions Returns Type Description Task < PackageIdentity > | Improve this Doc View Source QueryPackagesAsync(String, Nullable<String>, Boolean) Declaration public virtual Task<IEnumerable<IPackageSearchMetadata>> QueryPackagesAsync(string packageId, string? version = null, bool includePreRelease = false) Parameters Type Name Description System.String packageId System.Nullable < System.String > version System.Boolean includePreRelease Returns Type Description Task < IEnumerable < IPackageSearchMetadata >> | Improve this Doc View Source RemoveAsync(PackageIdentity) Declaration public Task<bool> RemoveAsync(PackageIdentity packageIdentity) Parameters Type Name Description PackageIdentity packageIdentity Returns Type Description Task < System.Boolean > | Improve this Doc View Source RemoveOutdatedPackagesAsync() Declaration public Task RemoveOutdatedPackagesAsync() Returns Type Description Task | Improve this Doc View Source SetAssemblyLoader(NuGetPackageManager.AssemblyLoader) Declaration public void SetAssemblyLoader(NuGetPackageManager.AssemblyLoader assemblyLoader) Parameters Type Name Description NuGetPackageManager.AssemblyLoader assemblyLoader Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.NuGet.NuGetQueryResult.html": {
    "href": "api/OpenMod.NuGet.NuGetQueryResult.html",
    "title": "Class NuGetQueryResult | OpenMod Docs",
    "keywords": "Class NuGetQueryResult Inheritance System.Object NuGetQueryResult Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public class NuGetQueryResult : object Constructors | Improve this Doc View Source NuGetQueryResult(ICollection<SourcePackageDependencyInfo>) Declaration public NuGetQueryResult(ICollection<SourcePackageDependencyInfo> packages) Parameters Type Name Description ICollection < SourcePackageDependencyInfo > packages | Improve this Doc View Source NuGetQueryResult(NuGetInstallCode) Declaration public NuGetQueryResult(NuGetInstallCode code) Parameters Type Name Description NuGetInstallCode code | Improve this Doc View Source NuGetQueryResult(PackageIdentity, NuGetInstallCode) Declaration public NuGetQueryResult(PackageIdentity identity, NuGetInstallCode code) Parameters Type Name Description PackageIdentity identity NuGetInstallCode code Properties | Improve this Doc View Source Code Declaration public NuGetInstallCode Code { get; } Property Value Type Description NuGetInstallCode | Improve this Doc View Source InstalledPackage Declaration public PackageIdentity? InstalledPackage { get; } Property Value Type Description System.Nullable < PackageIdentity > | Improve this Doc View Source Packages Declaration public ICollection<SourcePackageDependencyInfo>? Packages { get; } Property Value Type Description System.Nullable < ICollection < SourcePackageDependencyInfo >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.NuGet.PackagesDataStore.html": {
    "href": "api/OpenMod.NuGet.PackagesDataStore.html",
    "title": "Class PackagesDataStore | OpenMod Docs",
    "keywords": "Class PackagesDataStore Inheritance System.Object PackagesDataStore Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public class PackagesDataStore : object Constructors | Improve this Doc View Source PackagesDataStore(String) Declaration public PackagesDataStore(string path) Parameters Type Name Description System.String path Methods | Improve this Doc View Source AddOrUpdatePackageIdentity(PackageIdentity) Declaration public Task AddOrUpdatePackageIdentity(PackageIdentity id) Parameters Type Name Description PackageIdentity id Returns Type Description Task | Improve this Doc View Source EnsureExistsAsync() Declaration public Task EnsureExistsAsync() Returns Type Description Task | Improve this Doc View Source GetPackagesAsync() Declaration public Task<ICollection<PackageIdentity>> GetPackagesAsync() Returns Type Description Task < ICollection < PackageIdentity >> | Improve this Doc View Source RemovePackageAsync(String) Declaration public Task<bool> RemovePackageAsync(string packageId) Parameters Type Name Description System.String packageId Returns Type Description Task < System.Boolean > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.NuGet.SerializedNuGetPackage.html": {
    "href": "api/OpenMod.NuGet.SerializedNuGetPackage.html",
    "title": "Class SerializedNuGetPackage | OpenMod Docs",
    "keywords": "Class SerializedNuGetPackage Inheritance System.Object SerializedNuGetPackage Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public class SerializedNuGetPackage : object Properties | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source Version Declaration public string Version { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.NuGet.SerializedPackagesFile.html": {
    "href": "api/OpenMod.NuGet.SerializedPackagesFile.html",
    "title": "Class SerializedPackagesFile | OpenMod Docs",
    "keywords": "Class SerializedPackagesFile Inheritance System.Object SerializedPackagesFile Namespace : OpenMod.NuGet Assembly : OpenMod.NuGet.dll Syntax public class SerializedPackagesFile : object Properties | Improve this Doc View Source Packages Declaration public HashSet<SerializedNuGetPackage>? Packages { get; set; } Property Value Type Description System.Nullable < HashSet < SerializedNuGetPackage >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Runtime.html": {
    "href": "api/OpenMod.Runtime.html",
    "title": "Namespace OpenMod.Runtime | OpenMod Docs",
    "keywords": "Namespace OpenMod.Runtime Classes OpenModHostedService OpenModStartup OpenModStartupContext Runtime"
  },
  "api/OpenMod.Runtime.OpenModHostedService.html": {
    "href": "api/OpenMod.Runtime.OpenModHostedService.html",
    "title": "Class OpenModHostedService | OpenMod Docs",
    "keywords": "Class OpenModHostedService Inheritance System.Object OpenModHostedService Namespace : OpenMod.Runtime Assembly : OpenMod.Runtime.dll Syntax public class OpenModHostedService : IHostedService Constructors | Improve this Doc View Source OpenModHostedService(ILogger<OpenModHostedService>, IPermissionChecker, IHostInformation, IOpenModHost, IPluginAssemblyStore, IPluginActivator, IEventBus, IJobScheduler, IRuntime, IOptions<SmartFormatOptions>) Declaration public OpenModHostedService(ILogger<OpenModHostedService> logger, IPermissionChecker permissionChecker, IHostInformation hostInformation, IOpenModHost host, IPluginAssemblyStore pluginAssemblyStore, IPluginActivator pluginActivator, IEventBus eventBus, IJobScheduler jobScheduler, IRuntime runtime, IOptions<SmartFormatOptions> smartFormatOptions) Parameters Type Name Description ILogger < OpenModHostedService > logger IPermissionChecker permissionChecker IHostInformation hostInformation IOpenModHost host IPluginAssemblyStore pluginAssemblyStore IPluginActivator pluginActivator IEventBus eventBus IJobScheduler jobScheduler IRuntime runtime IOptions < SmartFormatOptions > smartFormatOptions Methods | Improve this Doc View Source StartAsync(CancellationToken) Declaration public Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source StopAsync(CancellationToken) Declaration public Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Runtime.OpenModStartup.html": {
    "href": "api/OpenMod.Runtime.OpenModStartup.html",
    "title": "Class OpenModStartup | OpenMod Docs",
    "keywords": "Class OpenModStartup Inheritance System.Object OpenModStartup Implements IOpenModStartup Namespace : OpenMod.Runtime Assembly : OpenMod.Runtime.dll Syntax public class OpenModStartup : object, IOpenModStartup Constructors | Improve this Doc View Source OpenModStartup(IOpenModServiceConfigurationContext) Declaration public OpenModStartup(IOpenModServiceConfigurationContext openModStartupContext) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext Properties | Improve this Doc View Source Context Declaration public IOpenModServiceConfigurationContext Context { get; } Property Value Type Description IOpenModServiceConfigurationContext Methods | Improve this Doc View Source RegisterIocAssemblyAndCopyResources(Assembly, String) Declaration public void RegisterIocAssemblyAndCopyResources(Assembly assembly, string assemblyDir) Parameters Type Name Description Assembly assembly System.String assemblyDir | Improve this Doc View Source RegisterPluginAssembliesAsync(IPluginAssembliesSource) Declaration public Task<ICollection<Assembly>> RegisterPluginAssembliesAsync(IPluginAssembliesSource source) Parameters Type Name Description IPluginAssembliesSource source Returns Type Description Task < ICollection < Assembly >> | Improve this Doc View Source RegisterServicesFromAssembly(Assembly) Declaration public void RegisterServicesFromAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly Implements IOpenModStartup Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Runtime.OpenModStartupContext.html": {
    "href": "api/OpenMod.Runtime.OpenModStartupContext.html",
    "title": "Class OpenModStartupContext | OpenMod Docs",
    "keywords": "Class OpenModStartupContext Inheritance System.Object OpenModStartupContext Implements IOpenModServiceConfigurationContext Namespace : OpenMod.Runtime Assembly : OpenMod.Runtime.dll Syntax public sealed class OpenModStartupContext : object, IOpenModServiceConfigurationContext Properties | Improve this Doc View Source Configuration Declaration public IConfigurationRoot Configuration { get; } Property Value Type Description IConfigurationRoot | Improve this Doc View Source DataStore Declaration public Dictionary<string, object> DataStore { get; } Property Value Type Description Dictionary < System.String , System.Object > | Improve this Doc View Source LoggerFactory Declaration public ILoggerFactory LoggerFactory { get; } Property Value Type Description ILoggerFactory | Improve this Doc View Source NuGetPackageManager Declaration public NuGetPackageManager NuGetPackageManager { get; } Property Value Type Description NuGetPackageManager | Improve this Doc View Source OpenModStartup Declaration public IOpenModStartup OpenModStartup { get; } Property Value Type Description IOpenModStartup | Improve this Doc View Source Runtime Declaration public IRuntime Runtime { get; } Property Value Type Description IRuntime Implements IOpenModServiceConfigurationContext Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Runtime.Runtime.html": {
    "href": "api/OpenMod.Runtime.Runtime.html",
    "title": "Class Runtime | OpenMod Docs",
    "keywords": "Class Runtime Inheritance System.Object Runtime Implements IRuntime IOpenModComponent Namespace : OpenMod.Runtime Assembly : OpenMod.Runtime.dll Syntax public sealed class Runtime : object, IRuntime, IOpenModComponent Constructors | Improve this Doc View Source Runtime() Declaration public Runtime() Properties | Improve this Doc View Source CommandlineArgs Declaration public string[] CommandlineArgs { get; } Property Value Type Description System.String [] | Improve this Doc View Source DataStore Declaration public IDataStore DataStore { get; } Property Value Type Description IDataStore | Improve this Doc View Source Host Declaration public IHost? Host { get; } Property Value Type Description System.Nullable < IHost > | Improve this Doc View Source HostAssemblies Declaration public IReadOnlyCollection<Assembly> HostAssemblies { get; } Property Value Type Description IReadOnlyCollection < Assembly > | Improve this Doc View Source HostInformation Declaration public IHostInformation HostInformation { get; } Property Value Type Description IHostInformation | Improve this Doc View Source IsComponentAlive Declaration public bool IsComponentAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDisposing Declaration public bool IsDisposing { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LifetimeScope Declaration public ILifetimeScope LifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source OpenModComponentId Declaration public string OpenModComponentId { get; } Property Value Type Description System.String | Improve this Doc View Source Status Declaration public RuntimeStatus Status { get; } Property Value Type Description RuntimeStatus | Improve this Doc View Source Version Declaration public SemVersion Version { get; } Property Value Type Description SemVersion | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Init(List<Assembly>, RuntimeInitParameters, Nullable<Func<IHostBuilder>>) Declaration public void Init(List<Assembly> openModAssemblies, RuntimeInitParameters parameters, Func<IHostBuilder>? hostBuilderFunc = null) Parameters Type Name Description List < Assembly > openModAssemblies RuntimeInitParameters parameters System.Nullable < Func < IHostBuilder >> hostBuilderFunc | Improve this Doc View Source InitAsync(List<Assembly>, RuntimeInitParameters, Nullable<Func<IHostBuilder>>) Declaration public Task<IHost> InitAsync(List<Assembly> openModHostAssemblies, RuntimeInitParameters parameters, Func<IHostBuilder>? hostBuilderFunc = null) Parameters Type Name Description List < Assembly > openModHostAssemblies RuntimeInitParameters parameters System.Nullable < Func < IHostBuilder >> hostBuilderFunc Returns Type Description Task < IHost > | Improve this Doc View Source PerformSoftReloadAsync() Declaration public Task PerformSoftReloadAsync() Returns Type Description Task | Improve this Doc View Source ShutdownAsync() Declaration public Task ShutdownAsync() Returns Type Description Task Implements IRuntime IOpenModComponent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.BaseOpenModRustHost.html": {
    "href": "api/OpenMod.Rust.BaseOpenModRustHost.html",
    "title": "Class BaseOpenModRustHost | OpenMod Docs",
    "keywords": "Class BaseOpenModRustHost Inheritance System.Object BaseOpenModRustHost OpenModRustOxideHost Implements System.IDisposable Namespace : OpenMod.Rust Assembly : OpenMod.Rust.dll Syntax public abstract class BaseOpenModRustHost : IOpenModHost, IDisposable Constructors | Improve this Doc View Source BaseOpenModRustHost(ILifetimeScope, IRuntime, IDataStoreFactory) Declaration protected BaseOpenModRustHost(ILifetimeScope lifetimeScope, IRuntime runtime, IDataStoreFactory dataStoreFactory) Parameters Type Name Description ILifetimeScope lifetimeScope IRuntime runtime IDataStoreFactory dataStoreFactory Properties | Improve this Doc View Source DataStore Declaration public IDataStore DataStore { get; } Property Value Type Description IDataStore | Improve this Doc View Source IsComponentAlive Declaration public bool IsComponentAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LifetimeScope Declaration public ILifetimeScope LifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source OpenModComponentId Declaration public string OpenModComponentId { get; } Property Value Type Description System.String | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source HasCapability(String) Declaration public bool HasCapability(string capability) Parameters Type Name Description System.String capability Returns Type Description System.Boolean | Improve this Doc View Source InitAsync() Declaration public Task InitAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source OnDispose() Declaration protected abstract void OnDispose() | Improve this Doc View Source OnInitAsync() Declaration protected abstract Task OnInitAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source PerformHardReloadAsync() Declaration public Task PerformHardReloadAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source ShutdownAsync() Declaration public Task ShutdownAsync() Returns Type Description System.Threading.Tasks.Task Implements System.IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Building.Events.html": {
    "href": "api/OpenMod.Rust.Building.Events.html",
    "title": "Namespace OpenMod.Rust.Building.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Building.Events Classes RustBuildingBlockEvent RustBuildingBlockUpgradingEvent"
  },
  "api/OpenMod.Rust.Building.Events.RustBuildingBlockEvent.html": {
    "href": "api/OpenMod.Rust.Building.Events.RustBuildingBlockEvent.html",
    "title": "Class RustBuildingBlockEvent | OpenMod Docs",
    "keywords": "Class RustBuildingBlockEvent Inheritance System.Object EventBase Event RustBuildingBlockEvent RustBuildingBlockUpgradingEvent Implements IBuildableEvent IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Building.Events Assembly : OpenMod.Rust.dll Syntax public class RustBuildingBlockEvent : Event, IBuildableEvent, IEvent Constructors | Improve this Doc View Source RustBuildingBlockEvent(RustBuildingBlock) Declaration public RustBuildingBlockEvent(RustBuildingBlock buildingBlock) Parameters Type Name Description RustBuildingBlock buildingBlock Properties | Improve this Doc View Source Buildable Declaration public IBuildable Buildable { get; } Property Value Type Description IBuildable | Improve this Doc View Source BuildingBlock Declaration public RustBuildingBlock BuildingBlock { get; } Property Value Type Description RustBuildingBlock Implements IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Building.Events.RustBuildingBlockUpgradingEvent.html": {
    "href": "api/OpenMod.Rust.Building.Events.RustBuildingBlockUpgradingEvent.html",
    "title": "Class RustBuildingBlockUpgradingEvent | OpenMod Docs",
    "keywords": "Class RustBuildingBlockUpgradingEvent Inheritance System.Object EventBase Event RustBuildingBlockEvent RustBuildingBlockUpgradingEvent Implements IBuildableEvent IEvent ICancellableEvent Inherited Members RustBuildingBlockEvent.BuildingBlock RustBuildingBlockEvent.Buildable Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Building.Events Assembly : OpenMod.Rust.dll Syntax public class RustBuildingBlockUpgradingEvent : RustBuildingBlockEvent, IBuildableEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustBuildingBlockUpgradingEvent(RustBuildingBlock, RustPlayer, BuildingGrade.Enum) Declaration public RustBuildingBlockUpgradingEvent(RustBuildingBlock buildingBlock, RustPlayer player, BuildingGrade.Enum grade) Parameters Type Name Description RustBuildingBlock buildingBlock RustPlayer player BuildingGrade.Enum grade Properties | Improve this Doc View Source Grade Declaration public BuildingGrade.Enum Grade { get; } Property Value Type Description BuildingGrade.Enum | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Player Declaration public RustPlayer Player { get; } Property Value Type Description RustPlayer Implements IBuildableEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Building.html": {
    "href": "api/OpenMod.Rust.Building.html",
    "title": "Namespace OpenMod.Rust.Building | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Building Classes RustBuildingBlock RustBuildingBlockState"
  },
  "api/OpenMod.Rust.Building.RustBuildingBlock.html": {
    "href": "api/OpenMod.Rust.Building.RustBuildingBlock.html",
    "title": "Class RustBuildingBlock | OpenMod Docs",
    "keywords": "Class RustBuildingBlock Inheritance System.Object RustBuildingBlock Implements IBuildable IHasOwnership IGameObject Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Building Assembly : OpenMod.Rust.dll Syntax public class RustBuildingBlock : IBuildable, IHasOwnership, IGameObject Constructors | Improve this Doc View Source RustBuildingBlock(BuildingBlock) Declaration public RustBuildingBlock(BuildingBlock buildingBlock) Parameters Type Name Description BuildingBlock buildingBlock Properties | Improve this Doc View Source Asset Declaration public IBuildableAsset Asset { get; } Property Value Type Description IBuildableAsset | Improve this Doc View Source BuildableInstanceId Declaration public string BuildableInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source BuildingBlock Declaration public BuildingBlock BuildingBlock { get; } Property Value Type Description BuildingBlock | Improve this Doc View Source Ownership Declaration public IOwnership Ownership { get; } Property Value Type Description IOwnership | Improve this Doc View Source State Declaration public IBuildableState State { get; } Property Value Type Description IBuildableState | Improve this Doc View Source Transform Declaration public IWorldTransform Transform { get; } Property Value Type Description IWorldTransform Methods | Improve this Doc View Source DestroyAsync() Declaration public Task DestroyAsync() Returns Type Description System.Threading.Tasks.Task Implements IBuildable IHasOwnership IGameObject Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Building.RustBuildingBlockState.html": {
    "href": "api/OpenMod.Rust.Building.RustBuildingBlockState.html",
    "title": "Class RustBuildingBlockState | OpenMod Docs",
    "keywords": "Class RustBuildingBlockState Inheritance System.Object RustBuildingBlockState Implements IBuildableState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Building Assembly : OpenMod.Rust.dll Syntax public class RustBuildingBlockState : IBuildableState Constructors | Improve this Doc View Source RustBuildingBlockState(BuildingBlock) Declaration public RustBuildingBlockState(BuildingBlock buildingBlock) Parameters Type Name Description BuildingBlock buildingBlock | Improve this Doc View Source RustBuildingBlockState(Byte[]) Declaration public RustBuildingBlockState(byte[] data) Parameters Type Name Description System.Byte [] data Properties | Improve this Doc View Source Health Declaration public double Health { get; } Property Value Type Description System.Double | Improve this Doc View Source StateData Declaration public byte[] StateData { get; } Property Value Type Description System.Byte [] Implements IBuildableState Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Entities.html": {
    "href": "api/OpenMod.Rust.Entities.html",
    "title": "Namespace OpenMod.Rust.Entities | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Entities Classes RustEntity RustEntityState"
  },
  "api/OpenMod.Rust.Entities.RustEntity.html": {
    "href": "api/OpenMod.Rust.Entities.RustEntity.html",
    "title": "Class RustEntity | OpenMod Docs",
    "keywords": "Class RustEntity Inheritance System.Object RustEntity RustPlayer Implements IEntity IGameObject IDamageSource Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Entities Assembly : OpenMod.Rust.dll Syntax public class RustEntity : IEntity, IGameObject, IDamageSource Constructors | Improve this Doc View Source RustEntity(BaseEntity) Declaration public RustEntity(BaseEntity entity) Parameters Type Name Description BaseEntity entity Properties | Improve this Doc View Source Asset Declaration public virtual IEntityAsset Asset { get; } Property Value Type Description IEntityAsset | Improve this Doc View Source DamageSourceName Declaration public virtual string DamageSourceName { get; } Property Value Type Description System.String | Improve this Doc View Source Entity Declaration public BaseEntity Entity { get; } Property Value Type Description BaseEntity | Improve this Doc View Source EntityInstanceId Declaration public string EntityInstanceId { get; protected set; } Property Value Type Description System.String | Improve this Doc View Source State Declaration public IEntityState State { get; } Property Value Type Description IEntityState | Improve this Doc View Source Transform Declaration public IWorldTransform Transform { get; } Property Value Type Description IWorldTransform Methods | Improve this Doc View Source DoTeleport(Vector3, Quaternion) Declaration protected virtual bool DoTeleport(Vector3 destination, Quaternion rotation) Parameters Type Name Description System.Numerics.Vector3 destination System.Numerics.Quaternion rotation Returns Type Description System.Boolean | Improve this Doc View Source SetPositionAsync(Vector3) Declaration public virtual Task<bool> SetPositionAsync(Vector3 position) Parameters Type Name Description System.Numerics.Vector3 position Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source SetPositionAsync(Vector3, Quaternion) Declaration public virtual Task<bool> SetPositionAsync(Vector3 position, Quaternion rotation) Parameters Type Name Description System.Numerics.Vector3 position System.Numerics.Quaternion rotation Returns Type Description System.Threading.Tasks.Task < System.Boolean > Implements IEntity IGameObject IDamageSource Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Entities.RustEntityState.html": {
    "href": "api/OpenMod.Rust.Entities.RustEntityState.html",
    "title": "Class RustEntityState | OpenMod Docs",
    "keywords": "Class RustEntityState Inheritance System.Object RustEntityState Implements IEntityState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Entities Assembly : OpenMod.Rust.dll Syntax public class RustEntityState : IEntityState Constructors | Improve this Doc View Source RustEntityState(BaseEntity) Declaration public RustEntityState(BaseEntity entity) Parameters Type Name Description BaseEntity entity | Improve this Doc View Source RustEntityState(Byte[]) Declaration public RustEntityState(byte[] data) Parameters Type Name Description System.Byte [] data Properties | Improve this Doc View Source StateData Declaration public byte[] StateData { get; } Property Value Type Description System.Byte [] Implements IEntityState Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.html": {
    "href": "api/OpenMod.Rust.html",
    "title": "Namespace OpenMod.Rust | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust Classes BaseOpenModRustHost RustHostInformation ServiceConfigurator"
  },
  "api/OpenMod.Rust.Items.html": {
    "href": "api/OpenMod.Rust.Items.html",
    "title": "Namespace OpenMod.Rust.Items | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Items Classes RustInventoryItem RustInventoryPage RustItem RustItemAsset RustItemContainerInventory RustItemDirectory RustItemDrop RustItemSpawner RustItemState RustPlayerInventory"
  },
  "api/OpenMod.Rust.Items.RustInventoryItem.html": {
    "href": "api/OpenMod.Rust.Items.RustInventoryItem.html",
    "title": "Class RustInventoryItem | OpenMod Docs",
    "keywords": "Class RustInventoryItem Inheritance System.Object RustInventoryItem Implements IInventoryItem IItemInstance Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustInventoryItem : IInventoryItem, IItemInstance Constructors | Improve this Doc View Source RustInventoryItem(RustItem) Declaration public RustInventoryItem(RustItem item) Parameters Type Name Description RustItem item Properties | Improve this Doc View Source Item Declaration public RustItem Item { get; } Property Value Type Description RustItem Methods | Improve this Doc View Source DestroyAsync() Declaration public Task<bool> DestroyAsync() Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source DropAsync() Declaration public Task DropAsync() Returns Type Description System.Threading.Tasks.Task Explicit Interface Implementations | Improve this Doc View Source IItemInstance.Item Declaration IItem IItemInstance.Item { get; } Returns Type Description IItem Implements IInventoryItem IItemInstance Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Items.RustInventoryPage.html": {
    "href": "api/OpenMod.Rust.Items.RustInventoryPage.html",
    "title": "Class RustInventoryPage | OpenMod Docs",
    "keywords": "Class RustInventoryPage Inheritance System.Object RustInventoryPage Implements IInventoryPage System.Collections.Generic.IReadOnlyCollection < IInventoryItem > System.Collections.Generic.IEnumerable < IInventoryItem > System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustInventoryPage : IInventoryPage, IReadOnlyCollection<IInventoryItem>, IEnumerable<IInventoryItem>, IEnumerable Constructors | Improve this Doc View Source RustInventoryPage(ItemContainer, IInventory, String) Declaration public RustInventoryPage(ItemContainer itemContainer, IInventory inventory, string name) Parameters Type Name Description ItemContainer itemContainer IInventory inventory System.String name Properties | Improve this Doc View Source Capacity Declaration public int Capacity { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Inventory Declaration public IInventory Inventory { get; } Property Value Type Description IInventory | Improve this Doc View Source IsFull Declaration public bool IsFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ItemContainer Declaration public ItemContainer ItemContainer { get; } Property Value Type Description ItemContainer | Improve this Doc View Source Items Declaration public IReadOnlyCollection<IInventoryItem> Items { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < IInventoryItem > | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<IInventoryItem> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < IInventoryItem > Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements IInventoryPage System.Collections.Generic.IReadOnlyCollection<> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Items.RustItem.html": {
    "href": "api/OpenMod.Rust.Items.RustItem.html",
    "title": "Class RustItem | OpenMod Docs",
    "keywords": "Class RustItem Inheritance System.Object RustItem Implements IItem IHasInventory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustItem : IItem, IHasInventory Constructors | Improve this Doc View Source RustItem(Item) Declaration public RustItem(Item item) Parameters Type Name Description Item item Properties | Improve this Doc View Source Asset Declaration public IItemAsset Asset { get; } Property Value Type Description IItemAsset | Improve this Doc View Source Inventory Declaration public IInventory Inventory { get; } Property Value Type Description IInventory | Improve this Doc View Source Item Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source ItemInstanceId Declaration public string ItemInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source State Declaration public IItemState State { get; } Property Value Type Description IItemState Methods | Improve this Doc View Source SetItemAmountAsync(Double) Declaration public Task SetItemAmountAsync(double amount) Parameters Type Name Description System.Double amount Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source SetItemDurabilityAsync(Double) Declaration public Task SetItemDurabilityAsync(double durability) Parameters Type Name Description System.Double durability Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source SetItemQualityAsync(Double) Declaration public Task SetItemQualityAsync(double quality) Parameters Type Name Description System.Double quality Returns Type Description System.Threading.Tasks.Task Implements IItem IHasInventory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Items.RustItemAsset.html": {
    "href": "api/OpenMod.Rust.Items.RustItemAsset.html",
    "title": "Class RustItemAsset | OpenMod Docs",
    "keywords": "Class RustItemAsset Inheritance System.Object RustItemAsset Implements IItemAsset Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustItemAsset : IItemAsset Constructors | Improve this Doc View Source RustItemAsset(ItemDefinition) Declaration public RustItemAsset(ItemDefinition itemDefinition) Parameters Type Name Description ItemDefinition itemDefinition Properties | Improve this Doc View Source ItemAssetId Declaration public string ItemAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source ItemDefinition Declaration public ItemDefinition ItemDefinition { get; } Property Value Type Description ItemDefinition | Improve this Doc View Source ItemName Declaration public string ItemName { get; } Property Value Type Description System.String | Improve this Doc View Source ItemType Declaration public string ItemType { get; } Property Value Type Description System.String | Improve this Doc View Source MaxAmount Declaration public double? MaxAmount { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source MaxDurability Declaration public double? MaxDurability { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source MaxQuality Declaration public double? MaxQuality { get; } Property Value Type Description System.Nullable < System.Double > Implements IItemAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Items.RustItemContainerInventory.html": {
    "href": "api/OpenMod.Rust.Items.RustItemContainerInventory.html",
    "title": "Class RustItemContainerInventory | OpenMod Docs",
    "keywords": "Class RustItemContainerInventory Inheritance System.Object RustItemContainerInventory Implements IInventory System.Collections.Generic.IReadOnlyCollection < IInventoryPage > System.Collections.Generic.IEnumerable < IInventoryPage > System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustItemContainerInventory : IInventory, IReadOnlyCollection<IInventoryPage>, IEnumerable<IInventoryPage>, IEnumerable Constructors | Improve this Doc View Source RustItemContainerInventory(ItemContainer) Declaration public RustItemContainerInventory(ItemContainer itemContainer) Parameters Type Name Description ItemContainer itemContainer Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsFull Declaration public bool IsFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ItemContainer Declaration public ItemContainer ItemContainer { get; } Property Value Type Description ItemContainer | Improve this Doc View Source Pages Declaration public IReadOnlyCollection<IInventoryPage> Pages { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < IInventoryPage > Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<IInventoryPage> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < IInventoryPage > Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements IInventory System.Collections.Generic.IReadOnlyCollection<> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Items.RustItemDirectory.html": {
    "href": "api/OpenMod.Rust.Items.RustItemDirectory.html",
    "title": "Class RustItemDirectory | OpenMod Docs",
    "keywords": "Class RustItemDirectory Inheritance System.Object RustItemDirectory Implements IItemDirectory Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustItemDirectory : IItemDirectory Methods | Improve this Doc View Source GetItemAssetsAsync() Declaration public Task<IReadOnlyCollection<IItemAsset>> GetItemAssetsAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IReadOnlyCollection < IItemAsset >> | Improve this Doc View Source GetItemDropsAsync() Declaration public Task<IReadOnlyCollection<IItemDrop>> GetItemDropsAsync() Returns Type Description System.Threading.Tasks.Task < System.Collections.Generic.IReadOnlyCollection < IItemDrop >> Implements IItemDirectory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Items.RustItemDrop.html": {
    "href": "api/OpenMod.Rust.Items.RustItemDrop.html",
    "title": "Class RustItemDrop | OpenMod Docs",
    "keywords": "Class RustItemDrop Inheritance System.Object RustItemDrop Implements IItemDrop IItemInstance IGameObject Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustItemDrop : IItemDrop, IItemInstance, IGameObject Constructors | Improve this Doc View Source RustItemDrop(DroppedItem) Declaration public RustItemDrop(DroppedItem droppedItem) Parameters Type Name Description DroppedItem droppedItem Properties | Improve this Doc View Source DroppedItem Declaration public DroppedItem DroppedItem { get; } Property Value Type Description DroppedItem | Improve this Doc View Source Item Declaration public RustItem Item { get; } Property Value Type Description RustItem | Improve this Doc View Source Position Declaration public Vector3 Position { get; } Property Value Type Description System.Numerics.Vector3 | Improve this Doc View Source Transform Declaration public IWorldTransform Transform { get; } Property Value Type Description IWorldTransform Methods | Improve this Doc View Source DestroyAsync() Declaration public Task<bool> DestroyAsync() Returns Type Description System.Threading.Tasks.Task < System.Boolean > Explicit Interface Implementations | Improve this Doc View Source IItemInstance.Item Declaration IItem IItemInstance.Item { get; } Returns Type Description IItem Implements IItemDrop IItemInstance IGameObject Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Items.RustItemSpawner.html": {
    "href": "api/OpenMod.Rust.Items.RustItemSpawner.html",
    "title": "Class RustItemSpawner | OpenMod Docs",
    "keywords": "Class RustItemSpawner Inheritance System.Object RustItemSpawner Implements IItemSpawner Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustItemSpawner : IItemSpawner Methods | Improve this Doc View Source GiveItemAsync(IInventory, String, IItemState) Declaration public Task<IItemInstance> GiveItemAsync(IInventory inventory, string itemId, IItemState state = null) Parameters Type Name Description IInventory inventory System.String itemId IItemState state Returns Type Description System.Threading.Tasks.Task < IItemInstance > | Improve this Doc View Source SpawnItemAsync(Vector3, String, IItemState) Declaration public Task<IItemDrop> SpawnItemAsync(Vector3 position, string itemId, IItemState state = null) Parameters Type Name Description System.Numerics.Vector3 position System.String itemId IItemState state Returns Type Description System.Threading.Tasks.Task < IItemDrop > Implements IItemSpawner Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Items.RustItemState.html": {
    "href": "api/OpenMod.Rust.Items.RustItemState.html",
    "title": "Class RustItemState | OpenMod Docs",
    "keywords": "Class RustItemState Inheritance System.Object RustItemState Implements IItemState Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustItemState : IItemState Constructors | Improve this Doc View Source RustItemState(Item) Declaration public RustItemState(Item item) Parameters Type Name Description Item item Properties | Improve this Doc View Source ItemAmount Declaration public double ItemAmount { get; } Property Value Type Description System.Double | Improve this Doc View Source ItemDurability Declaration public double ItemDurability { get; } Property Value Type Description System.Double | Improve this Doc View Source ItemQuality Declaration public double ItemQuality { get; } Property Value Type Description System.Double | Improve this Doc View Source StateData Declaration public byte[] StateData { get; } Property Value Type Description System.Byte [] Implements IItemState Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Items.RustPlayerInventory.html": {
    "href": "api/OpenMod.Rust.Items.RustPlayerInventory.html",
    "title": "Class RustPlayerInventory | OpenMod Docs",
    "keywords": "Class RustPlayerInventory Inheritance System.Object RustPlayerInventory Implements IInventory System.Collections.Generic.IReadOnlyCollection < IInventoryPage > System.Collections.Generic.IEnumerable < IInventoryPage > System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Items Assembly : OpenMod.Rust.dll Syntax public class RustPlayerInventory : IInventory, IReadOnlyCollection<IInventoryPage>, IEnumerable<IInventoryPage>, IEnumerable Constructors | Improve this Doc View Source RustPlayerInventory(PlayerInventory) Declaration public RustPlayerInventory(PlayerInventory playerInventory) Parameters Type Name Description PlayerInventory playerInventory Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source IsFull Declaration public bool IsFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Pages Declaration public IReadOnlyCollection<IInventoryPage> Pages { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < IInventoryPage > | Improve this Doc View Source PlayerInventory Declaration public PlayerInventory PlayerInventory { get; } Property Value Type Description PlayerInventory Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<IInventoryPage> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < IInventoryPage > Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements IInventory System.Collections.Generic.IReadOnlyCollection<> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Networkables.html": {
    "href": "api/OpenMod.Rust.Networkables.html",
    "title": "Namespace OpenMod.Rust.Networkables | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Networkables Classes RustBaseNetworkableAsset"
  },
  "api/OpenMod.Rust.Networkables.RustBaseNetworkableAsset.html": {
    "href": "api/OpenMod.Rust.Networkables.RustBaseNetworkableAsset.html",
    "title": "Class RustBaseNetworkableAsset | OpenMod Docs",
    "keywords": "Class RustBaseNetworkableAsset Inheritance System.Object RustBaseNetworkableAsset Implements IBuildableAsset Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Networkables Assembly : OpenMod.Rust.dll Syntax public class RustBaseNetworkableAsset : IBuildableAsset Constructors | Improve this Doc View Source RustBaseNetworkableAsset(BaseNetworkable, String) Declaration public RustBaseNetworkableAsset(BaseNetworkable networkable, string type) Parameters Type Name Description BaseNetworkable networkable System.String type Fields | Improve this Doc View Source BuildingBlock Declaration public const string BuildingBlock = \"building_block\" Field Value Type Description System.String Properties | Improve this Doc View Source BuildableAssetId Declaration public string BuildableAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source BuildableType Declaration public string BuildableType { get; } Property Value Type Description System.String Implements IBuildableAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Oxide.Extension.Dev.html": {
    "href": "api/OpenMod.Rust.Oxide.Extension.Dev.html",
    "title": "Namespace OpenMod.Rust.Oxide.Extension.Dev | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Oxide.Extension.Dev Classes OpenModRustOxideDevExtension"
  },
  "api/OpenMod.Rust.Oxide.Extension.Dev.OpenModRustOxideDevExtension.html": {
    "href": "api/OpenMod.Rust.Oxide.Extension.Dev.OpenModRustOxideDevExtension.html",
    "title": "Class OpenModRustOxideDevExtension | OpenMod Docs",
    "keywords": "Class OpenModRustOxideDevExtension Inheritance System.Object OpenModRustOxideDevExtension Namespace : OpenMod.Rust.Oxide.Extension.Dev Assembly : Oxide.Ext.OpenMod.Rust.Dev.dll Syntax public class OpenModRustOxideDevExtension : Oxide.Core.Extensions.Extension Constructors | Improve this Doc View Source OpenModRustOxideDevExtension(ExtensionManager) Declaration public OpenModRustOxideDevExtension(ExtensionManager manager) Parameters Type Name Description ExtensionManager manager Properties | Improve this Doc View Source Author Declaration public override string Author { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String | Improve this Doc View Source OpenModRuntime Declaration public IRuntime OpenModRuntime { get; } Property Value Type Description IRuntime | Improve this Doc View Source Version Declaration public override VersionNumber Version { get; } Property Value Type Description VersionNumber Methods | Improve this Doc View Source Load() Declaration public override void Load() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Oxide.Extension.html": {
    "href": "api/OpenMod.Rust.Oxide.Extension.html",
    "title": "Namespace OpenMod.Rust.Oxide.Extension | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Oxide.Extension Classes OpenModRustOxideExtension"
  },
  "api/OpenMod.Rust.Oxide.Extension.OpenModRustOxideExtension.html": {
    "href": "api/OpenMod.Rust.Oxide.Extension.OpenModRustOxideExtension.html",
    "title": "Class OpenModRustOxideExtension | OpenMod Docs",
    "keywords": "Class OpenModRustOxideExtension Inheritance System.Object OpenModRustOxideExtension Namespace : OpenMod.Rust.Oxide.Extension Assembly : Oxide.Ext.OpenMod.Rust.dll Syntax public class OpenModRustOxideExtension : Oxide.Core.Extensions.Extension Constructors | Improve this Doc View Source OpenModRustOxideExtension(ExtensionManager) Declaration public OpenModRustOxideExtension(ExtensionManager manager) Parameters Type Name Description ExtensionManager manager Properties | Improve this Doc View Source Author Declaration public override string Author { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public override string Name { get; } Property Value Type Description System.String | Improve this Doc View Source OpenModRuntime Declaration public object OpenModRuntime { get; } Property Value Type Description System.Object | Improve this Doc View Source Version Declaration public override VersionNumber Version { get; } Property Value Type Description VersionNumber Methods | Improve this Doc View Source Load() Declaration public override void Load() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Oxide.html": {
    "href": "api/OpenMod.Rust.Oxide.html",
    "title": "Namespace OpenMod.Rust.Oxide | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Oxide Classes OpenModRustOxideHost ServiceConfigurator"
  },
  "api/OpenMod.Rust.Oxide.OpenModRustOxideHost.html": {
    "href": "api/OpenMod.Rust.Oxide.OpenModRustOxideHost.html",
    "title": "Class OpenModRustOxideHost | OpenMod Docs",
    "keywords": "Class OpenModRustOxideHost Inheritance System.Object BaseOpenModRustHost OpenModRustOxideHost Implements System.IDisposable Inherited Members BaseOpenModRustHost.OpenModComponentId BaseOpenModRustHost.WorkingDirectory BaseOpenModRustHost.IsComponentAlive BaseOpenModRustHost.LifetimeScope BaseOpenModRustHost.DataStore BaseOpenModRustHost.InitAsync() BaseOpenModRustHost.ShutdownAsync() BaseOpenModRustHost.HasCapability(String) BaseOpenModRustHost.PerformHardReloadAsync() BaseOpenModRustHost.Dispose() Namespace : OpenMod.Rust.Oxide Assembly : OpenMod.Rust.Oxide.dll Syntax public class OpenModRustOxideHost : BaseOpenModRustHost, IDisposable Constructors | Improve this Doc View Source OpenModRustOxideHost(IServiceProvider, ILifetimeScope, IRuntime, IDataStoreFactory) Declaration public OpenModRustOxideHost(IServiceProvider serviceProvider, ILifetimeScope lifetimeScope, IRuntime runtime, IDataStoreFactory dataStoreFactory) Parameters Type Name Description System.IServiceProvider serviceProvider ILifetimeScope lifetimeScope IRuntime runtime IDataStoreFactory dataStoreFactory Methods | Improve this Doc View Source OnDispose() Declaration protected override void OnDispose() Overrides BaseOpenModRustHost.OnDispose() | Improve this Doc View Source OnInitAsync() Declaration protected override Task OnInitAsync() Returns Type Description System.Threading.Tasks.Task Overrides BaseOpenModRustHost.OnInitAsync() Implements System.IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Oxide.ServiceConfigurator.html": {
    "href": "api/OpenMod.Rust.Oxide.ServiceConfigurator.html",
    "title": "Class ServiceConfigurator | OpenMod Docs",
    "keywords": "Class ServiceConfigurator Inheritance System.Object ServiceConfigurator Namespace : OpenMod.Rust.Oxide Assembly : OpenMod.Rust.Oxide.dll Syntax public class ServiceConfigurator : IServiceConfigurator Methods | Improve this Doc View Source ConfigureServices(IOpenModServiceConfigurationContext, IServiceCollection) Declaration public void ConfigureServices(IOpenModServiceConfigurationContext openModStartupContext, IServiceCollection serviceCollection) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext IServiceCollection serviceCollection Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Oxide.Tests.Events.html": {
    "href": "api/OpenMod.Rust.Oxide.Tests.Events.html",
    "title": "Namespace OpenMod.Rust.Oxide.Tests.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Oxide.Tests.Events Classes OxideEventsListenersTests"
  },
  "api/OpenMod.Rust.Oxide.Tests.Events.OxideEventsListenersTests.html": {
    "href": "api/OpenMod.Rust.Oxide.Tests.Events.OxideEventsListenersTests.html",
    "title": "Class OxideEventsListenersTests | OpenMod Docs",
    "keywords": "Class OxideEventsListenersTests Inheritance System.Object OxideEventsListenersTests Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Oxide.Tests.Events Assembly : OpenMod.Rust.Oxide.Tests.dll Syntax public class OxideEventsListenersTests Methods | Improve this Doc View Source HookSubscriber_ShouldHaveSameName_AsHookingMethod() Declaration public void HookSubscriber_ShouldHaveSameName_AsHookingMethod() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Building.Events.html": {
    "href": "api/OpenMod.Rust.Players.Building.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Building.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Building.Events Classes RustPlayerDemolishingBuildingBlockEvent RustPlayerPlacingConstructionEvent RustPlayerUpgradingBuildingBlockEvent RustPlayerUsingWiresEvent"
  },
  "api/OpenMod.Rust.Players.Building.Events.RustPlayerDemolishingBuildingBlockEvent.html": {
    "href": "api/OpenMod.Rust.Players.Building.Events.RustPlayerDemolishingBuildingBlockEvent.html",
    "title": "Class RustPlayerDemolishingBuildingBlockEvent | OpenMod Docs",
    "keywords": "Class RustPlayerDemolishingBuildingBlockEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerDemolishingBuildingBlockEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Building.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerDemolishingBuildingBlockEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerDemolishingBuildingBlockEvent(RustPlayer, RustBuildingBlock) Declaration public RustPlayerDemolishingBuildingBlockEvent(RustPlayer player, RustBuildingBlock buildingBlock) Parameters Type Name Description RustPlayer player RustBuildingBlock buildingBlock Properties | Improve this Doc View Source BuildingBlock Declaration public RustBuildingBlock BuildingBlock { get; } Property Value Type Description RustBuildingBlock | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Building.Events.RustPlayerPlacingConstructionEvent.html": {
    "href": "api/OpenMod.Rust.Players.Building.Events.RustPlayerPlacingConstructionEvent.html",
    "title": "Class RustPlayerPlacingConstructionEvent | OpenMod Docs",
    "keywords": "Class RustPlayerPlacingConstructionEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerPlacingConstructionEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Building.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerPlacingConstructionEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerPlacingConstructionEvent(RustPlayer, Planner, Construction) Declaration public RustPlayerPlacingConstructionEvent(RustPlayer player, Planner planner, Construction construction) Parameters Type Name Description RustPlayer player Planner planner Construction construction Properties | Improve this Doc View Source Construction Declaration public Construction Construction { get; } Property Value Type Description Construction | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Planner Declaration public Planner Planner { get; } Property Value Type Description Planner Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Building.Events.RustPlayerUpgradingBuildingBlockEvent.html": {
    "href": "api/OpenMod.Rust.Players.Building.Events.RustPlayerUpgradingBuildingBlockEvent.html",
    "title": "Class RustPlayerUpgradingBuildingBlockEvent | OpenMod Docs",
    "keywords": "Class RustPlayerUpgradingBuildingBlockEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerUpgradingBuildingBlockEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Building.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerUpgradingBuildingBlockEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerUpgradingBuildingBlockEvent(RustPlayer, RustBuildingBlock, ConstructionGrade) Declaration public RustPlayerUpgradingBuildingBlockEvent(RustPlayer player, RustBuildingBlock buildingBlock, ConstructionGrade grade) Parameters Type Name Description RustPlayer player RustBuildingBlock buildingBlock ConstructionGrade grade Properties | Improve this Doc View Source BuildingBlock Declaration public RustBuildingBlock BuildingBlock { get; } Property Value Type Description RustBuildingBlock | Improve this Doc View Source Grade Declaration public ConstructionGrade Grade { get; } Property Value Type Description ConstructionGrade | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Building.Events.RustPlayerUsingWiresEvent.html": {
    "href": "api/OpenMod.Rust.Players.Building.Events.RustPlayerUsingWiresEvent.html",
    "title": "Class RustPlayerUsingWiresEvent | OpenMod Docs",
    "keywords": "Class RustPlayerUsingWiresEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerUsingWiresEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Building.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerUsingWiresEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerUsingWiresEvent(RustPlayer) Declaration public RustPlayerUsingWiresEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Clothing.Events.html": {
    "href": "api/OpenMod.Rust.Players.Clothing.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Clothing.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Clothing.Events Classes RustPlayerWearingClothingEvent"
  },
  "api/OpenMod.Rust.Players.Clothing.Events.RustPlayerWearingClothingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Clothing.Events.RustPlayerWearingClothingEvent.html",
    "title": "Class RustPlayerWearingClothingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerWearingClothingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerWearingClothingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Clothing.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerWearingClothingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerWearingClothingEvent(RustPlayer, Item, Int32) Declaration public RustPlayerWearingClothingEvent(RustPlayer player, Item item, int slot) Parameters Type Name Description RustPlayer player Item item System.Int32 slot Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source Slot Declaration public int Slot { get; } Property Value Type Description System.Int32 Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Communications.Events.html": {
    "href": "api/OpenMod.Rust.Players.Communications.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Communications.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Communications.Events Classes RustPlayerChattingEvent RustPlayerVoiceReceivedEvent"
  },
  "api/OpenMod.Rust.Players.Communications.Events.RustPlayerChattingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Communications.Events.RustPlayerChattingEvent.html",
    "title": "Class RustPlayerChattingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerChattingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerChattingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Communications.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerChattingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerChattingEvent(RustPlayer, String, Chat.ChatChannel) Declaration public RustPlayerChattingEvent(RustPlayer player, string message, Chat.ChatChannel channel) Parameters Type Name Description RustPlayer player System.String message Chat.ChatChannel channel Properties | Improve this Doc View Source Channel Declaration public Chat.ChatChannel Channel { get; } Property Value Type Description Chat.ChatChannel | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Message Declaration public string Message { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Communications.Events.RustPlayerVoiceReceivedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Communications.Events.RustPlayerVoiceReceivedEvent.html",
    "title": "Class RustPlayerVoiceReceivedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerVoiceReceivedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerVoiceReceivedEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Communications.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerVoiceReceivedEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerVoiceReceivedEvent(RustPlayer, Byte[]) Declaration public RustPlayerVoiceReceivedEvent(RustPlayer player, byte[] voiceData) Parameters Type Name Description RustPlayer player System.Byte [] voiceData Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source VoiceData Declaration public byte[] VoiceData { get; } Property Value Type Description System.Byte [] Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Connections.Events.html": {
    "href": "api/OpenMod.Rust.Players.Connections.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Connections.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Connections.Events Classes RustPlayerConnectedEvent"
  },
  "api/OpenMod.Rust.Players.Connections.Events.RustPlayerConnectedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Connections.Events.RustPlayerConnectedEvent.html",
    "title": "Class RustPlayerConnectedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerConnectedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerConnectedEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Connections.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerConnectedEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerConnectedEvent(RustPlayer) Declaration public RustPlayerConnectedEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Entities.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Entities.Events Classes RustPlayerAccessingLockedEntityEvent RustPlayerAccessingMailboxEvent RustPlayerAssigningSleepingBagEvent RustPlayerChangingLockCodeEvent RustPlayerCorpseSpawnedEvent RustPlayerDeployingEntityEvent RustPlayerDismountingEntityEvent RustPlayerHackingCrateEvent RustPlayerHidingStashEvent RustPlayerLockingLockEvent RustPlayerLootedItemEvent RustPlayerLootingEntityEvent RustPlayerLootingPlayerEvent RustPlayerMountingEntityEvent RustPlayerPickingUpEntityEvent RustPlayerRenamingSleepingBagEvent RustPlayerRevealingStashEvent RustPlayerUnlockingLockEvent RustPlayerUpdatingSignEvent"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerAccessingLockedEntityEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerAccessingLockedEntityEvent.html",
    "title": "Class RustPlayerAccessingLockedEntityEvent | OpenMod Docs",
    "keywords": "Class RustPlayerAccessingLockedEntityEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerAccessingLockedEntityEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerAccessingLockedEntityEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerAccessingLockedEntityEvent(RustPlayer, BaseLock) Declaration public RustPlayerAccessingLockedEntityEvent(RustPlayer player, BaseLock lock) Parameters Type Name Description RustPlayer player BaseLock lock Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Lock Declaration public BaseLock Lock { get; } Property Value Type Description BaseLock Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerAccessingMailboxEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerAccessingMailboxEvent.html",
    "title": "Class RustPlayerAccessingMailboxEvent | OpenMod Docs",
    "keywords": "Class RustPlayerAccessingMailboxEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerAccessingMailboxEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerAccessingMailboxEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerAccessingMailboxEvent(RustPlayer, Mailbox) Declaration public RustPlayerAccessingMailboxEvent(RustPlayer player, Mailbox mailbox) Parameters Type Name Description RustPlayer player Mailbox mailbox Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Mailbox Declaration public Mailbox Mailbox { get; } Property Value Type Description Mailbox Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerAssigningSleepingBagEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerAssigningSleepingBagEvent.html",
    "title": "Class RustPlayerAssigningSleepingBagEvent | OpenMod Docs",
    "keywords": "Class RustPlayerAssigningSleepingBagEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerAssigningSleepingBagEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerAssigningSleepingBagEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerAssigningSleepingBagEvent(RustPlayer, SleepingBag, UInt64) Declaration public RustPlayerAssigningSleepingBagEvent(RustPlayer player, SleepingBag sleepingBag, ulong targetPlayerId) Parameters Type Name Description RustPlayer player SleepingBag sleepingBag System.UInt64 targetPlayerId Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SleepingBag Declaration public SleepingBag SleepingBag { get; } Property Value Type Description SleepingBag | Improve this Doc View Source TargetPlayerId Declaration public ulong TargetPlayerId { get; } Property Value Type Description System.UInt64 Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerChangingLockCodeEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerChangingLockCodeEvent.html",
    "title": "Class RustPlayerChangingLockCodeEvent | OpenMod Docs",
    "keywords": "Class RustPlayerChangingLockCodeEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerChangingLockCodeEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerChangingLockCodeEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerChangingLockCodeEvent(RustPlayer, CodeLock, String, Boolean) Declaration public RustPlayerChangingLockCodeEvent(RustPlayer player, CodeLock codeLock, string newCode, bool isGuestCode) Parameters Type Name Description RustPlayer player CodeLock codeLock System.String newCode System.Boolean isGuestCode Properties | Improve this Doc View Source CodeLock Declaration public CodeLock CodeLock { get; } Property Value Type Description CodeLock | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGuestCode Declaration public bool IsGuestCode { get; } Property Value Type Description System.Boolean | Improve this Doc View Source NewCode Declaration public string NewCode { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerCorpseSpawnedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerCorpseSpawnedEvent.html",
    "title": "Class RustPlayerCorpseSpawnedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerCorpseSpawnedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerCorpseSpawnedEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerCorpseSpawnedEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerCorpseSpawnedEvent(RustPlayer, BaseCorpse) Declaration public RustPlayerCorpseSpawnedEvent(RustPlayer player, BaseCorpse corpse) Parameters Type Name Description RustPlayer player BaseCorpse corpse Properties | Improve this Doc View Source Corpse Declaration public BaseCorpse Corpse { get; } Property Value Type Description BaseCorpse Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerDeployingEntityEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerDeployingEntityEvent.html",
    "title": "Class RustPlayerDeployingEntityEvent | OpenMod Docs",
    "keywords": "Class RustPlayerDeployingEntityEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerDeployingEntityEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerDeployingEntityEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerDeployingEntityEvent(RustPlayer, Deployer, UInt32) Declaration public RustPlayerDeployingEntityEvent(RustPlayer player, Deployer deployer, uint entityId) Parameters Type Name Description RustPlayer player Deployer deployer System.UInt32 entityId Properties | Improve this Doc View Source Deployer Declaration public Deployer Deployer { get; } Property Value Type Description Deployer | Improve this Doc View Source EntityId Declaration public uint EntityId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerDismountingEntityEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerDismountingEntityEvent.html",
    "title": "Class RustPlayerDismountingEntityEvent | OpenMod Docs",
    "keywords": "Class RustPlayerDismountingEntityEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerDismountingEntityEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerDismountingEntityEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerDismountingEntityEvent(RustPlayer, BaseMountable) Declaration public RustPlayerDismountingEntityEvent(RustPlayer player, BaseMountable mountable) Parameters Type Name Description RustPlayer player BaseMountable mountable Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Mountable Declaration public BaseMountable Mountable { get; } Property Value Type Description BaseMountable Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerHackingCrateEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerHackingCrateEvent.html",
    "title": "Class RustPlayerHackingCrateEvent | OpenMod Docs",
    "keywords": "Class RustPlayerHackingCrateEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerHackingCrateEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerHackingCrateEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerHackingCrateEvent(RustPlayer, HackableLockedCrate) Declaration public RustPlayerHackingCrateEvent(RustPlayer player, HackableLockedCrate crate) Parameters Type Name Description RustPlayer player HackableLockedCrate crate Properties | Improve this Doc View Source Crate Declaration public HackableLockedCrate Crate { get; } Property Value Type Description HackableLockedCrate | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerHidingStashEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerHidingStashEvent.html",
    "title": "Class RustPlayerHidingStashEvent | OpenMod Docs",
    "keywords": "Class RustPlayerHidingStashEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerHidingStashEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerHidingStashEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerHidingStashEvent(RustPlayer, StashContainer) Declaration public RustPlayerHidingStashEvent(RustPlayer player, StashContainer stash) Parameters Type Name Description RustPlayer player StashContainer stash Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Stash Declaration public StashContainer Stash { get; } Property Value Type Description StashContainer Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerLockingLockEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerLockingLockEvent.html",
    "title": "Class RustPlayerLockingLockEvent | OpenMod Docs",
    "keywords": "Class RustPlayerLockingLockEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerLockingLockEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerLockingLockEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerLockingLockEvent(RustPlayer, BaseLock) Declaration public RustPlayerLockingLockEvent(RustPlayer player, BaseLock lock) Parameters Type Name Description RustPlayer player BaseLock lock Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Lock Declaration public BaseLock Lock { get; } Property Value Type Description BaseLock Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerLootedItemEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerLootedItemEvent.html",
    "title": "Class RustPlayerLootedItemEvent | OpenMod Docs",
    "keywords": "Class RustPlayerLootedItemEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerLootedItemEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerLootedItemEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerLootedItemEvent(RustPlayer, Item) Declaration public RustPlayerLootedItemEvent(RustPlayer player, Item item) Parameters Type Name Description RustPlayer player Item item Properties | Improve this Doc View Source Item Declaration public Item Item { get; } Property Value Type Description Item Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerLootingEntityEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerLootingEntityEvent.html",
    "title": "Class RustPlayerLootingEntityEvent | OpenMod Docs",
    "keywords": "Class RustPlayerLootingEntityEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerLootingEntityEvent RustPlayerLootingPlayerEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerLootingEntityEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerLootingEntityEvent(RustPlayer, RustEntity) Declaration public RustPlayerLootingEntityEvent(RustPlayer player, RustEntity entity) Parameters Type Name Description RustPlayer player RustEntity entity Properties | Improve this Doc View Source Entity Declaration public RustEntity Entity { get; } Property Value Type Description RustEntity | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerLootingPlayerEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerLootingPlayerEvent.html",
    "title": "Class RustPlayerLootingPlayerEvent | OpenMod Docs",
    "keywords": "Class RustPlayerLootingPlayerEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerLootingEntityEvent RustPlayerLootingPlayerEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerLootingEntityEvent.Entity RustPlayerLootingEntityEvent.IsCancelled RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerLootingPlayerEvent : RustPlayerLootingEntityEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerLootingPlayerEvent(RustPlayer, RustPlayer) Declaration public RustPlayerLootingPlayerEvent(RustPlayer player, RustPlayer target) Parameters Type Name Description RustPlayer player RustPlayer target Properties | Improve this Doc View Source Target Declaration public RustPlayer Target { get; } Property Value Type Description RustPlayer Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerMountingEntityEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerMountingEntityEvent.html",
    "title": "Class RustPlayerMountingEntityEvent | OpenMod Docs",
    "keywords": "Class RustPlayerMountingEntityEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerMountingEntityEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerMountingEntityEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerMountingEntityEvent(RustPlayer, BaseMountable) Declaration public RustPlayerMountingEntityEvent(RustPlayer player, BaseMountable mountable) Parameters Type Name Description RustPlayer player BaseMountable mountable Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Mountable Declaration public BaseMountable Mountable { get; } Property Value Type Description BaseMountable Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerPickingUpEntityEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerPickingUpEntityEvent.html",
    "title": "Class RustPlayerPickingUpEntityEvent | OpenMod Docs",
    "keywords": "Class RustPlayerPickingUpEntityEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerPickingUpEntityEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerPickingUpEntityEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerPickingUpEntityEvent(RustPlayer, RustEntity) Declaration public RustPlayerPickingUpEntityEvent(RustPlayer player, RustEntity entity) Parameters Type Name Description RustPlayer player RustEntity entity Properties | Improve this Doc View Source Entity Declaration public RustEntity Entity { get; } Property Value Type Description RustEntity | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerRenamingSleepingBagEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerRenamingSleepingBagEvent.html",
    "title": "Class RustPlayerRenamingSleepingBagEvent | OpenMod Docs",
    "keywords": "Class RustPlayerRenamingSleepingBagEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerRenamingSleepingBagEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerRenamingSleepingBagEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerRenamingSleepingBagEvent(RustPlayer, SleepingBag, String) Declaration public RustPlayerRenamingSleepingBagEvent(RustPlayer player, SleepingBag sleepingBag, string newName) Parameters Type Name Description RustPlayer player SleepingBag sleepingBag System.String newName Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewName Declaration public string NewName { get; } Property Value Type Description System.String | Improve this Doc View Source SleepingBag Declaration public SleepingBag SleepingBag { get; } Property Value Type Description SleepingBag Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerRevealingStashEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerRevealingStashEvent.html",
    "title": "Class RustPlayerRevealingStashEvent | OpenMod Docs",
    "keywords": "Class RustPlayerRevealingStashEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerRevealingStashEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerRevealingStashEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerRevealingStashEvent(RustPlayer, StashContainer) Declaration public RustPlayerRevealingStashEvent(RustPlayer player, StashContainer stash) Parameters Type Name Description RustPlayer player StashContainer stash Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Stash Declaration public StashContainer Stash { get; } Property Value Type Description StashContainer Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerUnlockingLockEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerUnlockingLockEvent.html",
    "title": "Class RustPlayerUnlockingLockEvent | OpenMod Docs",
    "keywords": "Class RustPlayerUnlockingLockEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerUnlockingLockEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerUnlockingLockEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerUnlockingLockEvent(RustPlayer, BaseLock) Declaration public RustPlayerUnlockingLockEvent(RustPlayer player, BaseLock lock) Parameters Type Name Description RustPlayer player BaseLock lock Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Lock Declaration public BaseLock Lock { get; } Property Value Type Description BaseLock Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Entities.Events.RustPlayerUpdatingSignEvent.html": {
    "href": "api/OpenMod.Rust.Players.Entities.Events.RustPlayerUpdatingSignEvent.html",
    "title": "Class RustPlayerUpdatingSignEvent | OpenMod Docs",
    "keywords": "Class RustPlayerUpdatingSignEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerUpdatingSignEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Entities.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerUpdatingSignEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerUpdatingSignEvent(RustPlayer, Signage) Declaration public RustPlayerUpdatingSignEvent(RustPlayer player, Signage signage) Parameters Type Name Description RustPlayer player Signage signage Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Signage Declaration public Signage Signage { get; } Property Value Type Description Signage Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Events.html": {
    "href": "api/OpenMod.Rust.Players.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Events Classes RustPlayerEvent RustPlayerInfoSetEvent RustPlayerInputReceivedEvent"
  },
  "api/OpenMod.Rust.Players.Events.RustPlayerEvent.html": {
    "href": "api/OpenMod.Rust.Players.Events.RustPlayerEvent.html",
    "title": "Class RustPlayerEvent | OpenMod Docs",
    "keywords": "Class RustPlayerEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerDemolishingBuildingBlockEvent RustPlayerPlacingConstructionEvent RustPlayerUpgradingBuildingBlockEvent RustPlayerUsingWiresEvent RustPlayerWearingClothingEvent RustPlayerChattingEvent RustPlayerVoiceReceivedEvent RustPlayerConnectedEvent RustPlayerAccessingLockedEntityEvent RustPlayerAccessingMailboxEvent RustPlayerAssigningSleepingBagEvent RustPlayerChangingLockCodeEvent RustPlayerCorpseSpawnedEvent RustPlayerDeployingEntityEvent RustPlayerDismountingEntityEvent RustPlayerHackingCrateEvent RustPlayerHidingStashEvent RustPlayerLockingLockEvent RustPlayerLootedItemEvent RustPlayerLootingEntityEvent RustPlayerMountingEntityEvent RustPlayerPickingUpEntityEvent RustPlayerRenamingSleepingBagEvent RustPlayerRevealingStashEvent RustPlayerUnlockingLockEvent RustPlayerUpdatingSignEvent RustPlayerInfoSetEvent RustPlayerInputReceivedEvent RustPlayerActiveItemChangedEvent RustPlayerActiveItemDroppedEvent RustPlayerCraftingItemEvent RustPlayerExperimentingEvent RustPlayerPickingUpItemEvent RustPlayerPickingUpLockEvent RustPlayerResearchingItemEvent RustPlayerAssistingEvent RustPlayerAttackingEvent RustPlayerDamagingEvent RustPlayerDeathEvent RustPlayerGettingWoundedEvent RustPlayerHealthUpdatingEvent RustPlayerMeleeAttackingEvent RustPlayerRecoveredEvent RustPlayerRecoveringEvent RustPlayerRespawnedEvent RustPlayerRespawningEvent RustPlayerRevivingEvent RustPlayerSleepEndedEvent RustPlayerSleepStartingEvent RustPlayerSpawnedEvent RustPlayerMapMarkerAddedEvent RustPlayerMapMarkerAddingEvent RustPlayerMapMarkerRemovingEvent RustPlayerMapMarkersClearedEvent RustPlayerMapMarkersClearingEvent RustPlayerKickedEvent RustPlayerSpectateEndingEvent RustPlayerSpectateStartingEvent RustPlayerSpectateUpdatingFilterEvent RustPlayerClosedUiEvent RustPlayerOpeningUiEvent RustPlayerPushingBoatEvent RustPlayerAntiHackViolationEvent RustPlayerReportedEvent Implements IPlayerEvent IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerEvent : Event, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerEvent(RustPlayer) Declaration public RustPlayerEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Properties | Improve this Doc View Source Player Declaration public RustPlayer Player { get; } Property Value Type Description RustPlayer Explicit Interface Implementations | Improve this Doc View Source IPlayerEvent.Player Declaration IPlayer IPlayerEvent.Player { get; } Returns Type Description IPlayer Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Events.RustPlayerInfoSetEvent.html": {
    "href": "api/OpenMod.Rust.Players.Events.RustPlayerInfoSetEvent.html",
    "title": "Class RustPlayerInfoSetEvent | OpenMod Docs",
    "keywords": "Class RustPlayerInfoSetEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerInfoSetEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerInfoSetEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerInfoSetEvent(RustPlayer, String, String) Declaration public RustPlayerInfoSetEvent(RustPlayer player, string key, string value) Parameters Type Name Description RustPlayer player System.String key System.String value Properties | Improve this Doc View Source Key Declaration public string Key { get; } Property Value Type Description System.String | Improve this Doc View Source Value Declaration public string Value { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Events.RustPlayerInputReceivedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Events.RustPlayerInputReceivedEvent.html",
    "title": "Class RustPlayerInputReceivedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerInputReceivedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerInputReceivedEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerInputReceivedEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerInputReceivedEvent(RustPlayer, InputState) Declaration public RustPlayerInputReceivedEvent(RustPlayer player, InputState inputState) Parameters Type Name Description RustPlayer player InputState inputState Properties | Improve this Doc View Source InputState Declaration public InputState InputState { get; } Property Value Type Description InputState Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.html": {
    "href": "api/OpenMod.Rust.Players.html",
    "title": "Namespace OpenMod.Rust.Players | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players Classes PlayerServerFall RustPlayer RustPlayerAsset"
  },
  "api/OpenMod.Rust.Players.Inventory.Events.html": {
    "href": "api/OpenMod.Rust.Players.Inventory.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Inventory.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Inventory.Events Classes RustPlayerActiveItemChangedEvent RustPlayerActiveItemDroppedEvent RustPlayerCraftingItemEvent RustPlayerExperimentingEvent RustPlayerPickingUpItemEvent RustPlayerPickingUpLockEvent RustPlayerResearchingItemEvent"
  },
  "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerActiveItemChangedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerActiveItemChangedEvent.html",
    "title": "Class RustPlayerActiveItemChangedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerActiveItemChangedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerActiveItemChangedEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Inventory.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerActiveItemChangedEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerActiveItemChangedEvent(RustPlayer, RustItem, RustItem) Declaration public RustPlayerActiveItemChangedEvent(RustPlayer player, RustItem oldItem, RustItem newItem) Parameters Type Name Description RustPlayer player RustItem oldItem RustItem newItem Properties | Improve this Doc View Source NewItem Declaration public RustItem NewItem { get; } Property Value Type Description RustItem | Improve this Doc View Source OldItem Declaration public RustItem OldItem { get; } Property Value Type Description RustItem Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerActiveItemDroppedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerActiveItemDroppedEvent.html",
    "title": "Class RustPlayerActiveItemDroppedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerActiveItemDroppedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerActiveItemDroppedEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Inventory.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerActiveItemDroppedEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerActiveItemDroppedEvent(RustPlayer, RustItem) Declaration public RustPlayerActiveItemDroppedEvent(RustPlayer player, RustItem item) Parameters Type Name Description RustPlayer player RustItem item Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Declaration public RustItem Item { get; } Property Value Type Description RustItem Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerCraftingItemEvent.html": {
    "href": "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerCraftingItemEvent.html",
    "title": "Class RustPlayerCraftingItemEvent | OpenMod Docs",
    "keywords": "Class RustPlayerCraftingItemEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerCraftingItemEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Inventory.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerCraftingItemEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerCraftingItemEvent(RustPlayer, ItemBlueprint, Int32) Declaration public RustPlayerCraftingItemEvent(RustPlayer player, ItemBlueprint blueprint, int amount) Parameters Type Name Description RustPlayer player ItemBlueprint blueprint System.Int32 amount Properties | Improve this Doc View Source Amount Declaration public int Amount { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Blueprint Declaration public ItemBlueprint Blueprint { get; } Property Value Type Description ItemBlueprint | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerExperimentingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerExperimentingEvent.html",
    "title": "Class RustPlayerExperimentingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerExperimentingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerExperimentingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Inventory.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerExperimentingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerExperimentingEvent(RustPlayer, Workbench) Declaration public RustPlayerExperimentingEvent(RustPlayer player, Workbench workbench) Parameters Type Name Description RustPlayer player Workbench workbench Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Workbench Declaration public Workbench Workbench { get; } Property Value Type Description Workbench Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerPickingUpItemEvent.html": {
    "href": "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerPickingUpItemEvent.html",
    "title": "Class RustPlayerPickingUpItemEvent | OpenMod Docs",
    "keywords": "Class RustPlayerPickingUpItemEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerPickingUpItemEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Inventory.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerPickingUpItemEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerPickingUpItemEvent(RustPlayer, RustItem, Int32) Declaration public RustPlayerPickingUpItemEvent(RustPlayer player, RustItem item, int targetPos) Parameters Type Name Description RustPlayer player RustItem item System.Int32 targetPos Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Declaration public RustItem Item { get; } Property Value Type Description RustItem | Improve this Doc View Source TargetPos Declaration public int TargetPos { get; } Property Value Type Description System.Int32 Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerPickingUpLockEvent.html": {
    "href": "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerPickingUpLockEvent.html",
    "title": "Class RustPlayerPickingUpLockEvent | OpenMod Docs",
    "keywords": "Class RustPlayerPickingUpLockEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerPickingUpLockEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Inventory.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerPickingUpLockEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerPickingUpLockEvent(RustPlayer, BaseLock) Declaration public RustPlayerPickingUpLockEvent(RustPlayer player, BaseLock lock) Parameters Type Name Description RustPlayer player BaseLock lock Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Lock Declaration public BaseLock Lock { get; } Property Value Type Description BaseLock Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerResearchingItemEvent.html": {
    "href": "api/OpenMod.Rust.Players.Inventory.Events.RustPlayerResearchingItemEvent.html",
    "title": "Class RustPlayerResearchingItemEvent | OpenMod Docs",
    "keywords": "Class RustPlayerResearchingItemEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerResearchingItemEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Inventory.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerResearchingItemEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerResearchingItemEvent(RustPlayer, RustItem) Declaration public RustPlayerResearchingItemEvent(RustPlayer player, RustItem item) Parameters Type Name Description RustPlayer player RustItem item Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Declaration public RustItem Item { get; } Property Value Type Description RustItem Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Life.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Life.Events Classes RustPlayerAssistingEvent RustPlayerAttackingEvent RustPlayerDamagingEvent RustPlayerDeathEvent RustPlayerGettingWoundedEvent RustPlayerHealthUpdatingEvent RustPlayerMeleeAttackingEvent RustPlayerRecoveredEvent RustPlayerRecoveringEvent RustPlayerRespawnedEvent RustPlayerRespawningEvent RustPlayerRevivingEvent RustPlayerSleepEndedEvent RustPlayerSleepStartingEvent RustPlayerSpawnedEvent"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerAssistingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerAssistingEvent.html",
    "title": "Class RustPlayerAssistingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerAssistingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerAssistingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerAssistingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerAssistingEvent(RustPlayer, RustPlayer) Declaration public RustPlayerAssistingEvent(RustPlayer player, RustPlayer target) Parameters Type Name Description RustPlayer player RustPlayer target Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Target Declaration public RustPlayer Target { get; } Property Value Type Description RustPlayer Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerAttackingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerAttackingEvent.html",
    "title": "Class RustPlayerAttackingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerAttackingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerAttackingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerAttackingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerAttackingEvent(RustPlayer, HitInfo) Declaration public RustPlayerAttackingEvent(RustPlayer player, HitInfo hitInfo) Parameters Type Name Description RustPlayer player HitInfo hitInfo Properties | Improve this Doc View Source HitInfo Declaration public HitInfo HitInfo { get; } Property Value Type Description HitInfo | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerDamagingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerDamagingEvent.html",
    "title": "Class RustPlayerDamagingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerDamagingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerDamagingEvent Implements IPlayerDamagingEvent IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerDamagingEvent : RustPlayerEvent, IPlayerDamagingEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerDamagingEvent(RustPlayer, HitInfo) Declaration public RustPlayerDamagingEvent(RustPlayer player, HitInfo hitInfo) Parameters Type Name Description RustPlayer player HitInfo hitInfo Properties | Improve this Doc View Source DamageAmount Declaration public double DamageAmount { get; set; } Property Value Type Description System.Double | Improve this Doc View Source DamageSource Declaration public IDamageSource DamageSource { get; } Property Value Type Description IDamageSource | Improve this Doc View Source HitInfo Declaration public HitInfo HitInfo { get; } Property Value Type Description HitInfo | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerDamagingEvent IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerDeathEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerDeathEvent.html",
    "title": "Class RustPlayerDeathEvent | OpenMod Docs",
    "keywords": "Class RustPlayerDeathEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerDeathEvent Implements IPlayerDeathEvent IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerDeathEvent : RustPlayerEvent, IPlayerDeathEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerDeathEvent(RustPlayer, Nullable<HitInfo>) Declaration public RustPlayerDeathEvent(RustPlayer player, HitInfo? hitInfo) Parameters Type Name Description RustPlayer player System.Nullable < HitInfo > hitInfo Properties | Improve this Doc View Source DeathPosition Declaration public Vector3 DeathPosition { get; } Property Value Type Description System.Numerics.Vector3 | Improve this Doc View Source HitInfo Declaration public HitInfo? HitInfo { get; } Property Value Type Description System.Nullable < HitInfo > Implements IPlayerDeathEvent IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerGettingWoundedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerGettingWoundedEvent.html",
    "title": "Class RustPlayerGettingWoundedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerGettingWoundedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerGettingWoundedEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerGettingWoundedEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerGettingWoundedEvent(RustPlayer, RustPlayer) Declaration public RustPlayerGettingWoundedEvent(RustPlayer player, RustPlayer source) Parameters Type Name Description RustPlayer player RustPlayer source Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Source Declaration public RustPlayer Source { get; } Property Value Type Description RustPlayer Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerHealthUpdatingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerHealthUpdatingEvent.html",
    "title": "Class RustPlayerHealthUpdatingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerHealthUpdatingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerHealthUpdatingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerHealthUpdatingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerHealthUpdatingEvent(RustPlayer, Single, Single) Declaration public RustPlayerHealthUpdatingEvent(RustPlayer player, float oldValue, float newValue) Parameters Type Name Description RustPlayer player System.Single oldValue System.Single newValue Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewValue Declaration public float NewValue { get; } Property Value Type Description System.Single | Improve this Doc View Source OldValue Declaration public float OldValue { get; } Property Value Type Description System.Single Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerMeleeAttackingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerMeleeAttackingEvent.html",
    "title": "Class RustPlayerMeleeAttackingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerMeleeAttackingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerMeleeAttackingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerMeleeAttackingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerMeleeAttackingEvent(RustPlayer, HitInfo) Declaration public RustPlayerMeleeAttackingEvent(RustPlayer player, HitInfo hitInfo) Parameters Type Name Description RustPlayer player HitInfo hitInfo Properties | Improve this Doc View Source HitInfo Declaration public HitInfo HitInfo { get; } Property Value Type Description HitInfo | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerRecoveredEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerRecoveredEvent.html",
    "title": "Class RustPlayerRecoveredEvent | OpenMod Docs",
    "keywords": "Class RustPlayerRecoveredEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerRecoveredEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerRecoveredEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerRecoveredEvent(RustPlayer) Declaration public RustPlayerRecoveredEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerRecoveringEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerRecoveringEvent.html",
    "title": "Class RustPlayerRecoveringEvent | OpenMod Docs",
    "keywords": "Class RustPlayerRecoveringEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerRecoveringEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerRecoveringEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerRecoveringEvent(RustPlayer) Declaration public RustPlayerRecoveringEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerRespawnedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerRespawnedEvent.html",
    "title": "Class RustPlayerRespawnedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerRespawnedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerRespawnedEvent Implements IPlayerSpawnedEvent IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerRespawnedEvent : RustPlayerEvent, IPlayerSpawnedEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerRespawnedEvent(RustPlayer) Declaration public RustPlayerRespawnedEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerSpawnedEvent IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerRespawningEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerRespawningEvent.html",
    "title": "Class RustPlayerRespawningEvent | OpenMod Docs",
    "keywords": "Class RustPlayerRespawningEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerRespawningEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerRespawningEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerRespawningEvent(RustPlayer) Declaration public RustPlayerRespawningEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerRevivingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerRevivingEvent.html",
    "title": "Class RustPlayerRevivingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerRevivingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerRevivingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerRevivingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerRevivingEvent(RustPlayer, RustPlayer) Declaration public RustPlayerRevivingEvent(RustPlayer player, RustPlayer reviver) Parameters Type Name Description RustPlayer player RustPlayer reviver Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Reviver Declaration public RustPlayer Reviver { get; } Property Value Type Description RustPlayer Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerSleepEndedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerSleepEndedEvent.html",
    "title": "Class RustPlayerSleepEndedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerSleepEndedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerSleepEndedEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerSleepEndedEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerSleepEndedEvent(RustPlayer) Declaration public RustPlayerSleepEndedEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerSleepStartingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerSleepStartingEvent.html",
    "title": "Class RustPlayerSleepStartingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerSleepStartingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerSleepStartingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerSleepStartingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerSleepStartingEvent(RustPlayer) Declaration public RustPlayerSleepStartingEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Life.Events.RustPlayerSpawnedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Life.Events.RustPlayerSpawnedEvent.html",
    "title": "Class RustPlayerSpawnedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerSpawnedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerSpawnedEvent Implements IPlayerSpawnedEvent IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Life.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerSpawnedEvent : RustPlayerEvent, IPlayerSpawnedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerSpawnedEvent(RustPlayer) Declaration public RustPlayerSpawnedEvent(RustPlayer player) Parameters Type Name Description RustPlayer player Implements IPlayerSpawnedEvent IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Map.Events.html": {
    "href": "api/OpenMod.Rust.Players.Map.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Map.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Map.Events Classes RustPlayerMapMarkerAddedEvent RustPlayerMapMarkerAddingEvent RustPlayerMapMarkerRemovingEvent RustPlayerMapMarkersClearedEvent RustPlayerMapMarkersClearingEvent"
  },
  "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkerAddedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkerAddedEvent.html",
    "title": "Class RustPlayerMapMarkerAddedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerMapMarkerAddedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerMapMarkerAddedEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Map.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerMapMarkerAddedEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerMapMarkerAddedEvent(RustPlayer, MapNote) Declaration public RustPlayerMapMarkerAddedEvent(RustPlayer player, MapNote mapNote) Parameters Type Name Description RustPlayer player MapNote mapNote Properties | Improve this Doc View Source MapNote Declaration public MapNote MapNote { get; } Property Value Type Description MapNote Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkerAddingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkerAddingEvent.html",
    "title": "Class RustPlayerMapMarkerAddingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerMapMarkerAddingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerMapMarkerAddingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Map.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerMapMarkerAddingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerMapMarkerAddingEvent(RustPlayer, MapNote) Declaration public RustPlayerMapMarkerAddingEvent(RustPlayer player, MapNote mapNote) Parameters Type Name Description RustPlayer player MapNote mapNote Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MapNote Declaration public MapNote MapNote { get; } Property Value Type Description MapNote Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkerRemovingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkerRemovingEvent.html",
    "title": "Class RustPlayerMapMarkerRemovingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerMapMarkerRemovingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerMapMarkerRemovingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Map.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerMapMarkerRemovingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerMapMarkerRemovingEvent(RustPlayer, MapNote) Declaration public RustPlayerMapMarkerRemovingEvent(RustPlayer player, MapNote mapNote) Parameters Type Name Description RustPlayer player MapNote mapNote Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MapNote Declaration public MapNote MapNote { get; } Property Value Type Description MapNote Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkersClearedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkersClearedEvent.html",
    "title": "Class RustPlayerMapMarkersClearedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerMapMarkersClearedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerMapMarkersClearedEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Map.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerMapMarkersClearedEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerMapMarkersClearedEvent(RustPlayer, List<MapNote>) Declaration public RustPlayerMapMarkersClearedEvent(RustPlayer player, List<MapNote> mapNotes) Parameters Type Name Description RustPlayer player System.Collections.Generic.List < MapNote > mapNotes Properties | Improve this Doc View Source MapNotes Declaration public List<MapNote> MapNotes { get; } Property Value Type Description System.Collections.Generic.List < MapNote > Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkersClearingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Map.Events.RustPlayerMapMarkersClearingEvent.html",
    "title": "Class RustPlayerMapMarkersClearingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerMapMarkersClearingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerMapMarkersClearingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Map.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerMapMarkersClearingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerMapMarkersClearingEvent(RustPlayer, List<MapNote>) Declaration public RustPlayerMapMarkersClearingEvent(RustPlayer player, List<MapNote> mapNotes) Parameters Type Name Description RustPlayer player System.Collections.Generic.List < MapNote > mapNotes Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MapNotes Declaration public List<MapNote> MapNotes { get; } Property Value Type Description System.Collections.Generic.List < MapNote > Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.PlayerServerFall.html": {
    "href": "api/OpenMod.Rust.Players.PlayerServerFall.html",
    "title": "Class PlayerServerFall | OpenMod Docs",
    "keywords": "Class PlayerServerFall Inheritance System.Object PlayerServerFall Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players Assembly : OpenMod.Rust.dll Syntax public static class PlayerServerFall Methods | Improve this Doc View Source Enable(BasePlayer) Declaration public static IDisposable Enable(BasePlayer player) Parameters Type Name Description BasePlayer player Returns Type Description System.IDisposable"
  },
  "api/OpenMod.Rust.Players.Punishments.Events.html": {
    "href": "api/OpenMod.Rust.Players.Punishments.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Punishments.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Punishments.Events Classes RustPlayerBannedEvent RustPlayerKickedEvent"
  },
  "api/OpenMod.Rust.Players.Punishments.Events.RustPlayerBannedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Punishments.Events.RustPlayerBannedEvent.html",
    "title": "Class RustPlayerBannedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerBannedEvent Inheritance System.Object EventBase Event RustPlayerBannedEvent Implements IEvent Inherited Members Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Punishments.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerBannedEvent : Event, IEvent Constructors | Improve this Doc View Source RustPlayerBannedEvent(String, UInt64, String, String) Declaration public RustPlayerBannedEvent(string playerName, ulong id, string address, string reason) Parameters Type Name Description System.String playerName System.UInt64 id System.String address System.String reason Properties | Improve this Doc View Source Address Declaration public string Address { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public ulong Id { get; } Property Value Type Description System.UInt64 | Improve this Doc View Source PlayerName Declaration public string PlayerName { get; } Property Value Type Description System.String | Improve this Doc View Source Reason Declaration public string Reason { get; } Property Value Type Description System.String Implements IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Punishments.Events.RustPlayerKickedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Punishments.Events.RustPlayerKickedEvent.html",
    "title": "Class RustPlayerKickedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerKickedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerKickedEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Punishments.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerKickedEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerKickedEvent(RustPlayer, String) Declaration public RustPlayerKickedEvent(RustPlayer player, string reason) Parameters Type Name Description RustPlayer player System.String reason Properties | Improve this Doc View Source Reason Declaration public string Reason { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.RustPlayer.html": {
    "href": "api/OpenMod.Rust.Players.RustPlayer.html",
    "title": "Class RustPlayer | OpenMod Docs",
    "keywords": "Class RustPlayer Inheritance System.Object RustEntity RustPlayer Implements IDamageSource IPlayer IEntity IGameObject System.IComparable < RustPlayer > IHasInventory IHasHealth IHasThirst IHasHunger Inherited Members RustEntity.Entity RustEntity.Transform RustEntity.State RustEntity.EntityInstanceId RustEntity.SetPositionAsync(Vector3) RustEntity.SetPositionAsync(Vector3, Quaternion) RustEntity.DamageSourceName System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players Assembly : OpenMod.Rust.dll Syntax public class RustPlayer : RustEntity, IDamageSource, IPlayer, IEntity, IGameObject, IComparable<RustPlayer>, IHasInventory, IHasHealth, IHasThirst, IHasHunger Constructors | Improve this Doc View Source RustPlayer(BasePlayer) Declaration public RustPlayer(BasePlayer player) Parameters Type Name Description BasePlayer player Properties | Improve this Doc View Source Address Declaration public IPAddress Address { get; } Property Value Type Description System.Net.IPAddress | Improve this Doc View Source Asset Declaration public override IEntityAsset Asset { get; } Property Value Type Description IEntityAsset Overrides RustEntity.Asset | Improve this Doc View Source Health Declaration public double Health { get; } Property Value Type Description System.Double | Improve this Doc View Source Hunger Declaration public double Hunger { get; } Property Value Type Description System.Double | Improve this Doc View Source Inventory Declaration public IInventory Inventory { get; } Property Value Type Description IInventory | Improve this Doc View Source IsAlive Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Declaration public double MaxHealth { get; } Property Value Type Description System.Double | Improve this Doc View Source MaxHunger Declaration public double MaxHunger { get; } Property Value Type Description System.Double | Improve this Doc View Source MaxThirst Declaration public double MaxThirst { get; } Property Value Type Description System.Double | Improve this Doc View Source Player Declaration public BasePlayer Player { get; } Property Value Type Description BasePlayer | Improve this Doc View Source PlayerMetabolism Declaration public PlayerMetabolism PlayerMetabolism { get; } Property Value Type Description PlayerMetabolism | Improve this Doc View Source Stance Declaration public string Stance { get; } Property Value Type Description System.String | Improve this Doc View Source Thirst Declaration public double Thirst { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source CompareTo(RustPlayer) Declaration public int CompareTo(RustPlayer other) Parameters Type Name Description RustPlayer other Returns Type Description System.Int32 | Improve this Doc View Source DamageAsync(Double) Declaration public Task DamageAsync(double amount) Parameters Type Name Description System.Double amount Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source DoTeleport(Vector3, Quaternion) Declaration protected override bool DoTeleport(Vector3 destination, Quaternion rotation) Parameters Type Name Description System.Numerics.Vector3 destination System.Numerics.Quaternion rotation Returns Type Description System.Boolean Overrides RustEntity.DoTeleport(Vector3, Quaternion) | Improve this Doc View Source KillAsync() Declaration public Task KillAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source SetFullHealthAsync() Declaration public Task SetFullHealthAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source SetHealthAsync(Double) Declaration public Task SetHealthAsync(double health) Parameters Type Name Description System.Double health Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source SetHungerAsync(Double) Declaration public Task SetHungerAsync(double hunger) Parameters Type Name Description System.Double hunger Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source SetThirstAsync(Double) Declaration public Task SetThirstAsync(double thirst) Parameters Type Name Description System.Double thirst Returns Type Description System.Threading.Tasks.Task Implements IDamageSource IPlayer IEntity IGameObject System.IComparable<T> IHasInventory IHasHealth IHasThirst IHasHunger Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.RustPlayerAsset.html": {
    "href": "api/OpenMod.Rust.Players.RustPlayerAsset.html",
    "title": "Class RustPlayerAsset | OpenMod Docs",
    "keywords": "Class RustPlayerAsset Inheritance System.Object RustPlayerAsset Implements IEntityAsset Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players Assembly : OpenMod.Rust.dll Syntax public class RustPlayerAsset : IEntityAsset Constructors | Improve this Doc View Source RustPlayerAsset(BasePlayer) Declaration public RustPlayerAsset(BasePlayer entity) Parameters Type Name Description BasePlayer entity Properties | Improve this Doc View Source Entity Declaration public BaseEntity Entity { get; } Property Value Type Description BaseEntity | Improve this Doc View Source EntityAssetId Declaration public string EntityAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source EntityType Declaration public string EntityType { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IEntityAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Spectating.Events.html": {
    "href": "api/OpenMod.Rust.Players.Spectating.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Spectating.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Spectating.Events Classes RustPlayerSpectateEndingEvent RustPlayerSpectateStartingEvent RustPlayerSpectateUpdatingFilterEvent"
  },
  "api/OpenMod.Rust.Players.Spectating.Events.RustPlayerSpectateEndingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Spectating.Events.RustPlayerSpectateEndingEvent.html",
    "title": "Class RustPlayerSpectateEndingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerSpectateEndingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerSpectateEndingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Spectating.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerSpectateEndingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerSpectateEndingEvent(RustPlayer, String) Declaration public RustPlayerSpectateEndingEvent(RustPlayer player, string spectateFilter) Parameters Type Name Description RustPlayer player System.String spectateFilter Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SpectateFilter Declaration public string SpectateFilter { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Spectating.Events.RustPlayerSpectateStartingEvent.html": {
    "href": "api/OpenMod.Rust.Players.Spectating.Events.RustPlayerSpectateStartingEvent.html",
    "title": "Class RustPlayerSpectateStartingEvent | OpenMod Docs",
    "keywords": "Class RustPlayerSpectateStartingEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerSpectateStartingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Spectating.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerSpectateStartingEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerSpectateStartingEvent(RustPlayer, String) Declaration public RustPlayerSpectateStartingEvent(RustPlayer player, string spectateFilter) Parameters Type Name Description RustPlayer player System.String spectateFilter Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SpectateFilter Declaration public string SpectateFilter { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Spectating.Events.RustPlayerSpectateUpdatingFilterEvent.html": {
    "href": "api/OpenMod.Rust.Players.Spectating.Events.RustPlayerSpectateUpdatingFilterEvent.html",
    "title": "Class RustPlayerSpectateUpdatingFilterEvent | OpenMod Docs",
    "keywords": "Class RustPlayerSpectateUpdatingFilterEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerSpectateUpdatingFilterEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Spectating.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerSpectateUpdatingFilterEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerSpectateUpdatingFilterEvent(RustPlayer, String) Declaration public RustPlayerSpectateUpdatingFilterEvent(RustPlayer player, string spectateFilter) Parameters Type Name Description RustPlayer player System.String spectateFilter Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SpectateFilter Declaration public string SpectateFilter { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.UI.Events.html": {
    "href": "api/OpenMod.Rust.Players.UI.Events.html",
    "title": "Namespace OpenMod.Rust.Players.UI.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.UI.Events Classes RustPlayerClosedUiEvent RustPlayerOpeningUiEvent"
  },
  "api/OpenMod.Rust.Players.UI.Events.RustPlayerClosedUiEvent.html": {
    "href": "api/OpenMod.Rust.Players.UI.Events.RustPlayerClosedUiEvent.html",
    "title": "Class RustPlayerClosedUiEvent | OpenMod Docs",
    "keywords": "Class RustPlayerClosedUiEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerClosedUiEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.UI.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerClosedUiEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerClosedUiEvent(RustPlayer, String) Declaration public RustPlayerClosedUiEvent(RustPlayer player, string json) Parameters Type Name Description RustPlayer player System.String json Properties | Improve this Doc View Source Json Declaration public string Json { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.UI.Events.RustPlayerOpeningUiEvent.html": {
    "href": "api/OpenMod.Rust.Players.UI.Events.RustPlayerOpeningUiEvent.html",
    "title": "Class RustPlayerOpeningUiEvent | OpenMod Docs",
    "keywords": "Class RustPlayerOpeningUiEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerOpeningUiEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.UI.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerOpeningUiEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerOpeningUiEvent(RustPlayer, String) Declaration public RustPlayerOpeningUiEvent(RustPlayer player, string json) Parameters Type Name Description RustPlayer player System.String json Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Json Declaration public string Json { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Vehicles.Events.html": {
    "href": "api/OpenMod.Rust.Players.Vehicles.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Vehicles.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Vehicles.Events Classes RustPlayerPushingBoatEvent"
  },
  "api/OpenMod.Rust.Players.Vehicles.Events.RustPlayerPushingBoatEvent.html": {
    "href": "api/OpenMod.Rust.Players.Vehicles.Events.RustPlayerPushingBoatEvent.html",
    "title": "Class RustPlayerPushingBoatEvent | OpenMod Docs",
    "keywords": "Class RustPlayerPushingBoatEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerPushingBoatEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Vehicles.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerPushingBoatEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerPushingBoatEvent(RustPlayer, MotorRowboat) Declaration public RustPlayerPushingBoatEvent(RustPlayer player, MotorRowboat motorRowboat) Parameters Type Name Description RustPlayer player MotorRowboat motorRowboat Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source MotorRowboat Declaration public MotorRowboat MotorRowboat { get; } Property Value Type Description MotorRowboat Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Violations.Events.html": {
    "href": "api/OpenMod.Rust.Players.Violations.Events.html",
    "title": "Namespace OpenMod.Rust.Players.Violations.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Players.Violations.Events Classes RustPlayerAntiHackViolationEvent RustPlayerReportedEvent"
  },
  "api/OpenMod.Rust.Players.Violations.Events.RustPlayerAntiHackViolationEvent.html": {
    "href": "api/OpenMod.Rust.Players.Violations.Events.RustPlayerAntiHackViolationEvent.html",
    "title": "Class RustPlayerAntiHackViolationEvent | OpenMod Docs",
    "keywords": "Class RustPlayerAntiHackViolationEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerAntiHackViolationEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Violations.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerAntiHackViolationEvent : RustPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source RustPlayerAntiHackViolationEvent(RustPlayer, AntiHackType, Single) Declaration public RustPlayerAntiHackViolationEvent(RustPlayer player, AntiHackType antiHackType, float amount) Parameters Type Name Description RustPlayer player AntiHackType antiHackType System.Single amount Properties | Improve this Doc View Source Amount Declaration public float Amount { get; } Property Value Type Description System.Single | Improve this Doc View Source AntiHackType Declaration public AntiHackType AntiHackType { get; } Property Value Type Description AntiHackType | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Players.Violations.Events.RustPlayerReportedEvent.html": {
    "href": "api/OpenMod.Rust.Players.Violations.Events.RustPlayerReportedEvent.html",
    "title": "Class RustPlayerReportedEvent | OpenMod Docs",
    "keywords": "Class RustPlayerReportedEvent Inheritance System.Object EventBase Event RustPlayerEvent RustPlayerReportedEvent Implements IPlayerEvent IEvent Inherited Members RustPlayerEvent.Player RustPlayerEvent.IPlayerEvent.Player Event.Arguments EventBase.Name EventBase.Data System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Players.Violations.Events Assembly : OpenMod.Rust.dll Syntax public class RustPlayerReportedEvent : RustPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source RustPlayerReportedEvent(RustPlayer, String, String, String, String, String) Declaration public RustPlayerReportedEvent(RustPlayer player, string targetName, string targetId, string subject, string message, string type) Parameters Type Name Description RustPlayer player System.String targetName System.String targetId System.String subject System.String message System.String type Properties | Improve this Doc View Source Message Declaration public string Message { get; } Property Value Type Description System.String | Improve this Doc View Source Subject Declaration public string Subject { get; } Property Value Type Description System.String | Improve this Doc View Source TargetId Declaration public string TargetId { get; } Property Value Type Description System.String | Improve this Doc View Source TargetName Declaration public string TargetName { get; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.RustHostInformation.html": {
    "href": "api/OpenMod.Rust.RustHostInformation.html",
    "title": "Class RustHostInformation | OpenMod Docs",
    "keywords": "Class RustHostInformation Inheritance System.Object RustHostInformation Implements IGameHostInformation IHostInformation Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust Assembly : OpenMod.Rust.dll Syntax public class RustHostInformation : IGameHostInformation, IHostInformation Constructors | Improve this Doc View Source RustHostInformation() Declaration public RustHostInformation() Properties | Improve this Doc View Source GameDisplayName Declaration public string GameDisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source GameVersion Declaration public string GameVersion { get; } Property Value Type Description System.String | Improve this Doc View Source HostName Declaration public string HostName { get; } Property Value Type Description System.String | Improve this Doc View Source HostVersion Declaration public SemVersion HostVersion { get; } Property Value Type Description SemVersion | Improve this Doc View Source IsClient Declaration public bool IsClient { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsServer Declaration public bool IsServer { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ServerAddress Declaration public IPAddress ServerAddress { get; } Property Value Type Description System.Net.IPAddress | Improve this Doc View Source ServerInstance Declaration public string ServerInstance { get; } Property Value Type Description System.String | Improve this Doc View Source ServerName Declaration public string ServerName { get; } Property Value Type Description System.String | Improve this Doc View Source ServerPort Declaration public ushort? ServerPort { get; } Property Value Type Description System.Nullable < System.UInt16 > Implements IGameHostInformation IHostInformation Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Serialization.BaseNetworkableSerializer.html": {
    "href": "api/OpenMod.Rust.Serialization.BaseNetworkableSerializer.html",
    "title": "Class BaseNetworkableSerializer | OpenMod Docs",
    "keywords": "Class BaseNetworkableSerializer Inheritance System.Object BaseNetworkableSerializer Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Serialization Assembly : OpenMod.Rust.dll Syntax public static class BaseNetworkableSerializer Methods | Improve this Doc View Source Serialize(BaseNetworkable, out BaseNetworkable.SaveInfo) Declaration public static byte[] Serialize(BaseNetworkable networkable, out BaseNetworkable.SaveInfo saveInfo) Parameters Type Name Description BaseNetworkable networkable BaseNetworkable.SaveInfo saveInfo Returns Type Description System.Byte []"
  },
  "api/OpenMod.Rust.Serialization.html": {
    "href": "api/OpenMod.Rust.Serialization.html",
    "title": "Namespace OpenMod.Rust.Serialization | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Serialization Classes BaseNetworkableSerializer"
  },
  "api/OpenMod.Rust.ServiceConfigurator.html": {
    "href": "api/OpenMod.Rust.ServiceConfigurator.html",
    "title": "Class ServiceConfigurator | OpenMod Docs",
    "keywords": "Class ServiceConfigurator Inheritance System.Object ServiceConfigurator Namespace : OpenMod.Rust Assembly : OpenMod.Rust.dll Syntax public class ServiceConfigurator : IServiceConfigurator Methods | Improve this Doc View Source ConfigureServices(IOpenModServiceConfigurationContext, IServiceCollection) Declaration public void ConfigureServices(IOpenModServiceConfigurationContext openModStartupContext, IServiceCollection serviceCollection) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext IServiceCollection serviceCollection Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Rust.Transforms.html": {
    "href": "api/OpenMod.Rust.Transforms.html",
    "title": "Namespace OpenMod.Rust.Transforms | OpenMod Docs",
    "keywords": "Namespace OpenMod.Rust.Transforms Classes RustNetworkableTransform"
  },
  "api/OpenMod.Rust.Transforms.RustNetworkableTransform.html": {
    "href": "api/OpenMod.Rust.Transforms.RustNetworkableTransform.html",
    "title": "Class RustNetworkableTransform | OpenMod Docs",
    "keywords": "Class RustNetworkableTransform Inheritance System.Object RustNetworkableTransform Implements IWorldTransform System.Collections.Generic.IReadOnlyCollection < IWorldTransform > System.Collections.Generic.IEnumerable < IWorldTransform > System.Collections.IEnumerable Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : OpenMod.Rust.Transforms Assembly : OpenMod.Rust.dll Syntax public class RustNetworkableTransform : IWorldTransform, IReadOnlyCollection<IWorldTransform>, IEnumerable<IWorldTransform>, IEnumerable Constructors | Improve this Doc View Source RustNetworkableTransform(BaseNetworkable) Declaration public RustNetworkableTransform(BaseNetworkable baseNetworkable) Parameters Type Name Description BaseNetworkable baseNetworkable Properties | Improve this Doc View Source ChildTransforms Declaration public IReadOnlyCollection<IWorldTransform> ChildTransforms { get; } Property Value Type Description System.Collections.Generic.IReadOnlyCollection < IWorldTransform > | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ParentTransform Declaration public IWorldTransform ParentTransform { get; } Property Value Type Description IWorldTransform | Improve this Doc View Source Position Declaration public Vector3 Position { get; } Property Value Type Description System.Numerics.Vector3 | Improve this Doc View Source Rotation Declaration public Quaternion Rotation { get; } Property Value Type Description System.Numerics.Quaternion | Improve this Doc View Source TransformName Declaration public string TransformName { get; } Property Value Type Description System.String | Improve this Doc View Source Velocity Declaration public Vector3 Velocity { get; } Property Value Type Description System.Numerics.Vector3 Methods | Improve this Doc View Source DestroyAsync() Declaration public Task DestroyAsync() Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<IWorldTransform> GetEnumerator() Returns Type Description System.Collections.Generic.IEnumerator < IWorldTransform > | Improve this Doc View Source SetPositionAsync(Vector3) Declaration public Task<bool> SetPositionAsync(Vector3 targetPosition) Parameters Type Name Description System.Numerics.Vector3 targetPosition Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source SetRotationAsync(Quaternion) Declaration public Task<bool> SetRotationAsync(Quaternion rotation) Parameters Type Name Description System.Numerics.Quaternion rotation Returns Type Description System.Threading.Tasks.Task < System.Boolean > | Improve this Doc View Source SetVelocityAsync(Vector3) Declaration public Task<bool> SetVelocityAsync(Vector3 velocity) Parameters Type Name Description System.Numerics.Vector3 velocity Returns Type Description System.Threading.Tasks.Task < System.Boolean > Explicit Interface Implementations | Improve this Doc View Source IEnumerable.GetEnumerator() Declaration IEnumerator IEnumerable.GetEnumerator() Returns Type Description System.Collections.IEnumerator Implements IWorldTransform System.Collections.Generic.IReadOnlyCollection<> System.Collections.Generic.IEnumerable<T> System.Collections.IEnumerable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Standalone.ConsoleActorAccessor.html": {
    "href": "api/OpenMod.Standalone.ConsoleActorAccessor.html",
    "title": "Class ConsoleActorAccessor | OpenMod Docs",
    "keywords": "Class ConsoleActorAccessor Inheritance System.Object ConsoleActorAccessor Implements IConsoleActorAccessor Namespace : OpenMod.Standalone Assembly : OpenMod.Standalone.dll Syntax public class ConsoleActorAccessor : object, IConsoleActorAccessor Constructors | Improve this Doc View Source ConsoleActorAccessor(IServiceProvider) Declaration public ConsoleActorAccessor(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Properties | Improve this Doc View Source Actor Declaration public ICommandActor Actor { get; } Property Value Type Description ICommandActor Implements IConsoleActorAccessor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Standalone.html": {
    "href": "api/OpenMod.Standalone.html",
    "title": "Namespace OpenMod.Standalone | OpenMod Docs",
    "keywords": "Namespace OpenMod.Standalone Classes ConsoleActorAccessor ServiceConfigurator StandaloneConsoleIo StandaloneHost StandaloneHostInformation Delegates StandaloneConsoleIo.CommandExecute"
  },
  "api/OpenMod.Standalone.ServiceConfigurator.html": {
    "href": "api/OpenMod.Standalone.ServiceConfigurator.html",
    "title": "Class ServiceConfigurator | OpenMod Docs",
    "keywords": "Class ServiceConfigurator Inheritance System.Object ServiceConfigurator Implements IServiceConfigurator Namespace : OpenMod.Standalone Assembly : OpenMod.Standalone.dll Syntax public class ServiceConfigurator : object, IServiceConfigurator Methods | Improve this Doc View Source ConfigureServices(IOpenModServiceConfigurationContext, IServiceCollection) Declaration public void ConfigureServices(IOpenModServiceConfigurationContext openModStartupContext, IServiceCollection serviceCollection) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext IServiceCollection serviceCollection Implements IServiceConfigurator Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Standalone.StandaloneConsoleIo.CommandExecute.html": {
    "href": "api/OpenMod.Standalone.StandaloneConsoleIo.CommandExecute.html",
    "title": "Delegate StandaloneConsoleIo.CommandExecute | OpenMod Docs",
    "keywords": "Delegate StandaloneConsoleIo.CommandExecute Namespace : OpenMod.Standalone Assembly : OpenMod.Standalone.dll Syntax public delegate void CommandExecute(string commandLine); Parameters Type Name Description System.String commandLine Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Standalone.StandaloneConsoleIo.html": {
    "href": "api/OpenMod.Standalone.StandaloneConsoleIo.html",
    "title": "Class StandaloneConsoleIo | OpenMod Docs",
    "keywords": "Class StandaloneConsoleIo Inheritance System.Object StandaloneConsoleIo Namespace : OpenMod.Standalone Assembly : OpenMod.Standalone.dll Syntax public static class StandaloneConsoleIo : object Methods | Improve this Doc View Source StartListening() Declaration public static void StartListening() | Improve this Doc View Source StopListening() Declaration public static void StopListening() Events | Improve this Doc View Source OnCommandExecute Declaration public static event StandaloneConsoleIo.CommandExecute OnCommandExecute Event Type Type Description StandaloneConsoleIo.CommandExecute"
  },
  "api/OpenMod.Standalone.StandaloneHost.html": {
    "href": "api/OpenMod.Standalone.StandaloneHost.html",
    "title": "Class StandaloneHost | OpenMod Docs",
    "keywords": "Class StandaloneHost Inheritance System.Object StandaloneHost Implements IOpenModHost IOpenModComponent IDisposable Namespace : OpenMod.Standalone Assembly : OpenMod.Standalone.dll Syntax public class StandaloneHost : object, IOpenModHost, IOpenModComponent, IDisposable Constructors | Improve this Doc View Source StandaloneHost(IRuntime, ILifetimeScope, IDataStoreFactory, IConsoleActorAccessor, ICommandExecutor) Declaration public StandaloneHost(IRuntime runtime, ILifetimeScope lifetimeScope, IDataStoreFactory dataStoreFactory, IConsoleActorAccessor consoleActorAccessor, ICommandExecutor commandExecutor) Parameters Type Name Description IRuntime runtime ILifetimeScope lifetimeScope IDataStoreFactory dataStoreFactory IConsoleActorAccessor consoleActorAccessor ICommandExecutor commandExecutor Properties | Improve this Doc View Source DataStore Declaration public IDataStore DataStore { get; } Property Value Type Description IDataStore | Improve this Doc View Source HostDisplayName Declaration public string HostDisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source HostVersion Declaration public string HostVersion { get; } Property Value Type Description System.String | Improve this Doc View Source IsComponentAlive Declaration public bool IsComponentAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LifetimeScope Declaration public ILifetimeScope LifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source OpenModComponentId Declaration public string OpenModComponentId { get; } Property Value Type Description System.String | Improve this Doc View Source Version Declaration public SemVersion Version { get; } Property Value Type Description SemVersion | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source HasCapability(String) Declaration public bool HasCapability(string capability) Parameters Type Name Description System.String capability Returns Type Description System.Boolean | Improve this Doc View Source InitAsync() Declaration public Task InitAsync() Returns Type Description Task | Improve this Doc View Source PerformHardReloadAsync() Declaration public Task PerformHardReloadAsync() Returns Type Description Task | Improve this Doc View Source ShutdownAsync() Declaration public Task ShutdownAsync() Returns Type Description Task Implements IOpenModHost IOpenModComponent IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Standalone.StandaloneHostInformation.html": {
    "href": "api/OpenMod.Standalone.StandaloneHostInformation.html",
    "title": "Class StandaloneHostInformation | OpenMod Docs",
    "keywords": "Class StandaloneHostInformation Inheritance System.Object StandaloneHostInformation Implements IHostInformation Namespace : OpenMod.Standalone Assembly : OpenMod.Standalone.dll Syntax public class StandaloneHostInformation : object, IHostInformation Constructors | Improve this Doc View Source StandaloneHostInformation() Declaration public StandaloneHostInformation() Properties | Improve this Doc View Source HostName Declaration public string HostName { get; } Property Value Type Description System.String | Improve this Doc View Source HostVersion Declaration public SemVersion HostVersion { get; } Property Value Type Description SemVersion Implements IHostInformation Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.UnityEngine.Commands.html": {
    "href": "api/OpenMod.UnityEngine.Commands.html",
    "title": "Namespace OpenMod.UnityEngine.Commands | OpenMod Docs",
    "keywords": "Namespace OpenMod.UnityEngine.Commands Classes UnityEngineCommand"
  },
  "api/OpenMod.UnityEngine.Commands.UnityEngineCommand.html": {
    "href": "api/OpenMod.UnityEngine.Commands.UnityEngineCommand.html",
    "title": "Class UnityEngineCommand | OpenMod Docs",
    "keywords": "Class UnityEngineCommand Inheritance System.Object CommandBase UnityEngineCommand UnturnedCommand Implements ICommand Inherited Members CommandBase.Context CommandBase.PrintAsync(String) CommandBase.PrintAsync(String, Color) CommandBase.CheckPermissionAsync(String) Namespace : OpenMod.UnityEngine.Commands Assembly : OpenMod.UnityEngine.dll Syntax public abstract class UnityEngineCommand : CommandBase, ICommand Constructors | Improve this Doc View Source UnityEngineCommand(IServiceProvider) Declaration protected UnityEngineCommand(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source ExecuteAsync() Declaration public override sealed Task ExecuteAsync() Returns Type Description Task Overrides CommandBase.ExecuteAsync() | Improve this Doc View Source OnExecuteAsync() Declaration protected abstract UniTask OnExecuteAsync() Returns Type Description UniTask Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.UnityEngine.Extensions.ColorConversionExtensions.html": {
    "href": "api/OpenMod.UnityEngine.Extensions.ColorConversionExtensions.html",
    "title": "Class ColorConversionExtensions | OpenMod Docs",
    "keywords": "Class ColorConversionExtensions Inheritance System.Object ColorConversionExtensions Namespace : OpenMod.UnityEngine.Extensions Assembly : OpenMod.UnityEngine.dll Syntax public static class ColorConversionExtensions : object Methods | Improve this Doc View Source ToSystemColor(UnityEngine.Color) Declaration public static System.Drawing.Color ToSystemColor(this UnityEngine.Color color) Parameters Type Name Description UnityEngine.Color color Returns Type Description Color | Improve this Doc View Source ToUnityColor(System.Drawing.Color) Declaration public static UnityEngine.Color ToUnityColor(this System.Drawing.Color color) Parameters Type Name Description Color color Returns Type Description UnityEngine.Color"
  },
  "api/OpenMod.UnityEngine.Extensions.html": {
    "href": "api/OpenMod.UnityEngine.Extensions.html",
    "title": "Namespace OpenMod.UnityEngine.Extensions | OpenMod Docs",
    "keywords": "Namespace OpenMod.UnityEngine.Extensions Classes ColorConversionExtensions QuaternionConversionExtensions VectorConversionExtensions"
  },
  "api/OpenMod.UnityEngine.Extensions.QuaternionConversionExtensions.html": {
    "href": "api/OpenMod.UnityEngine.Extensions.QuaternionConversionExtensions.html",
    "title": "Class QuaternionConversionExtensions | OpenMod Docs",
    "keywords": "Class QuaternionConversionExtensions Inheritance System.Object QuaternionConversionExtensions Namespace : OpenMod.UnityEngine.Extensions Assembly : OpenMod.UnityEngine.dll Syntax public static class QuaternionConversionExtensions : object Methods | Improve this Doc View Source ToSystemQuaternion(UnityEngine.Quaternion) Declaration public static System.Numerics.Quaternion ToSystemQuaternion(this UnityEngine.Quaternion quaternion) Parameters Type Name Description UnityEngine.Quaternion quaternion Returns Type Description System.Numerics.Quaternion | Improve this Doc View Source ToUnityQuaternion(System.Numerics.Quaternion) Declaration public static UnityEngine.Quaternion ToUnityQuaternion(this System.Numerics.Quaternion quaternion) Parameters Type Name Description System.Numerics.Quaternion quaternion Returns Type Description UnityEngine.Quaternion"
  },
  "api/OpenMod.UnityEngine.Extensions.VectorConversionExtensions.html": {
    "href": "api/OpenMod.UnityEngine.Extensions.VectorConversionExtensions.html",
    "title": "Class VectorConversionExtensions | OpenMod Docs",
    "keywords": "Class VectorConversionExtensions Inheritance System.Object VectorConversionExtensions Namespace : OpenMod.UnityEngine.Extensions Assembly : OpenMod.UnityEngine.dll Syntax public static class VectorConversionExtensions : object Methods | Improve this Doc View Source ToSystemVector(UnityEngine.Vector2) Declaration public static System.Numerics.Vector2 ToSystemVector(this UnityEngine.Vector2 vector) Parameters Type Name Description UnityEngine.Vector2 vector Returns Type Description System.Numerics.Vector2 | Improve this Doc View Source ToSystemVector(UnityEngine.Vector3) Declaration public static System.Numerics.Vector3 ToSystemVector(this UnityEngine.Vector3 vector) Parameters Type Name Description UnityEngine.Vector3 vector Returns Type Description System.Numerics.Vector3 | Improve this Doc View Source ToSystemVector(UnityEngine.Vector4) Declaration public static System.Numerics.Vector4 ToSystemVector(this UnityEngine.Vector4 vector) Parameters Type Name Description UnityEngine.Vector4 vector Returns Type Description System.Numerics.Vector4 | Improve this Doc View Source ToUnityVector(System.Numerics.Vector2) Declaration public static UnityEngine.Vector2 ToUnityVector(this System.Numerics.Vector2 vector) Parameters Type Name Description System.Numerics.Vector2 vector Returns Type Description UnityEngine.Vector2 | Improve this Doc View Source ToUnityVector(System.Numerics.Vector3) Declaration public static UnityEngine.Vector3 ToUnityVector(this System.Numerics.Vector3 vector) Parameters Type Name Description System.Numerics.Vector3 vector Returns Type Description UnityEngine.Vector3 | Improve this Doc View Source ToUnityVector(System.Numerics.Vector4) Declaration public static UnityEngine.Vector4 ToUnityVector(this System.Numerics.Vector4 vector) Parameters Type Name Description System.Numerics.Vector4 vector Returns Type Description UnityEngine.Vector4"
  },
  "api/OpenMod.UnityEngine.Helpers.html": {
    "href": "api/OpenMod.UnityEngine.Helpers.html",
    "title": "Namespace OpenMod.UnityEngine.Helpers | OpenMod Docs",
    "keywords": "Namespace OpenMod.UnityEngine.Helpers Classes ValidationHelper"
  },
  "api/OpenMod.UnityEngine.Helpers.ValidationHelper.html": {
    "href": "api/OpenMod.UnityEngine.Helpers.ValidationHelper.html",
    "title": "Class ValidationHelper | OpenMod Docs",
    "keywords": "Class ValidationHelper Inheritance System.Object ValidationHelper Namespace : OpenMod.UnityEngine.Helpers Assembly : OpenMod.UnityEngine.dll Syntax public static class ValidationHelper : object Methods | Improve this Doc View Source IsValid(System.Numerics.Quaternion) Declaration public static bool IsValid(System.Numerics.Quaternion quaternion) Parameters Type Name Description System.Numerics.Quaternion quaternion Returns Type Description System.Boolean | Improve this Doc View Source IsValid(System.Numerics.Vector3) Declaration public static bool IsValid(System.Numerics.Vector3 vector) Parameters Type Name Description System.Numerics.Vector3 vector Returns Type Description System.Boolean | Improve this Doc View Source IsValid(Single) Declaration public static bool IsValid(float f) Parameters Type Name Description System.Single f Returns Type Description System.Boolean | Improve this Doc View Source IsValid(UnityEngine.Quaternion) Declaration public static bool IsValid(UnityEngine.Quaternion quaternion) Parameters Type Name Description UnityEngine.Quaternion quaternion Returns Type Description System.Boolean | Improve this Doc View Source IsValid(UnityEngine.Vector3) Declaration public static bool IsValid(UnityEngine.Vector3 vector) Parameters Type Name Description UnityEngine.Vector3 vector Returns Type Description System.Boolean"
  },
  "api/OpenMod.UnityEngine.html": {
    "href": "api/OpenMod.UnityEngine.html",
    "title": "Namespace OpenMod.UnityEngine | OpenMod Docs",
    "keywords": "Namespace OpenMod.UnityEngine Classes ServiceConfigurator UnityHostLifetime"
  },
  "api/OpenMod.UnityEngine.Plugins.html": {
    "href": "api/OpenMod.UnityEngine.Plugins.html",
    "title": "Namespace OpenMod.UnityEngine.Plugins | OpenMod Docs",
    "keywords": "Namespace OpenMod.UnityEngine.Plugins Classes OpenModUnityEnginePlugin Base class for all UnityEngine plugins."
  },
  "api/OpenMod.UnityEngine.Plugins.OpenModUnityEnginePlugin.html": {
    "href": "api/OpenMod.UnityEngine.Plugins.OpenModUnityEnginePlugin.html",
    "title": "Class OpenModUnityEnginePlugin | OpenMod Docs",
    "keywords": "Class OpenModUnityEnginePlugin Base class for all UnityEngine plugins. Inheritance System.Object OpenModPluginBase OpenModUnityEnginePlugin OpenModUnturnedPlugin Implements IOpenModPlugin IAsyncDisposable Inherited Members OpenModPluginBase.OpenModComponentId OpenModPluginBase.WorkingDirectory OpenModPluginBase.IsComponentAlive OpenModPluginBase.Status OpenModPluginBase.DisplayName OpenModPluginBase.Author OpenModPluginBase.Website OpenModPluginBase.Description OpenModPluginBase.Version OpenModPluginBase.DataStore OpenModPluginBase.LifetimeScope OpenModPluginBase.Configuration OpenModPluginBase.Runtime OpenModPluginBase.EventBus OpenModPluginBase.Logger OpenModPluginBase.Harmony OpenModPluginBase.GetPluginVersion() OpenModPluginBase.DisposeAsync() OpenModPluginBase.OnDispose() Namespace : OpenMod.UnityEngine.Plugins Assembly : OpenMod.UnityEngine.dll Syntax public abstract class OpenModUnityEnginePlugin : OpenModPluginBase, IOpenModPlugin, IAsyncDisposable Constructors | Improve this Doc View Source OpenModUnityEnginePlugin(IServiceProvider) Declaration protected OpenModUnityEnginePlugin(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Methods | Improve this Doc View Source LoadAsync() Declaration public override sealed Task LoadAsync() Returns Type Description Task Overrides OpenModPluginBase.LoadAsync() | Improve this Doc View Source OnLoadAsync() Declaration protected virtual UniTask OnLoadAsync() Returns Type Description UniTask | Improve this Doc View Source OnUnloadAsync() Declaration protected virtual UniTask OnUnloadAsync() Returns Type Description UniTask | Improve this Doc View Source UnloadAsync() Declaration public override sealed Task UnloadAsync() Returns Type Description Task Overrides OpenModPluginBase.UnloadAsync() Implements IOpenModPlugin IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.UnityEngine.ServiceConfigurator.html": {
    "href": "api/OpenMod.UnityEngine.ServiceConfigurator.html",
    "title": "Class ServiceConfigurator | OpenMod Docs",
    "keywords": "Class ServiceConfigurator Inheritance System.Object ServiceConfigurator Namespace : OpenMod.UnityEngine Assembly : OpenMod.UnityEngine.dll Syntax public class ServiceConfigurator : IServiceConfigurator Methods | Improve this Doc View Source ConfigureServices(IOpenModServiceConfigurationContext, IServiceCollection) Declaration public void ConfigureServices(IOpenModServiceConfigurationContext openModStartupContext, IServiceCollection serviceCollection) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext IServiceCollection serviceCollection Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.UnityEngine.Transforms.html": {
    "href": "api/OpenMod.UnityEngine.Transforms.html",
    "title": "Namespace OpenMod.UnityEngine.Transforms | OpenMod Docs",
    "keywords": "Namespace OpenMod.UnityEngine.Transforms Classes UnityTransform"
  },
  "api/OpenMod.UnityEngine.Transforms.UnityTransform.html": {
    "href": "api/OpenMod.UnityEngine.Transforms.UnityTransform.html",
    "title": "Class UnityTransform | OpenMod Docs",
    "keywords": "Class UnityTransform Inheritance System.Object UnityTransform Implements IWorldTransform System.Collections.Generic.IReadOnlyCollection < IWorldTransform > Namespace : OpenMod.UnityEngine.Transforms Assembly : OpenMod.UnityEngine.dll Syntax public class UnityTransform : object, IWorldTransform, IReadOnlyCollection<IWorldTransform> Constructors | Improve this Doc View Source UnityTransform(Transform) Declaration public UnityTransform(Transform transform) Parameters Type Name Description Transform transform Properties | Improve this Doc View Source ChildTransforms Declaration public IReadOnlyCollection<IWorldTransform> ChildTransforms { get; } Property Value Type Description IReadOnlyCollection < IWorldTransform > | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source ParentTransform Declaration public IWorldTransform ParentTransform { get; } Property Value Type Description IWorldTransform | Improve this Doc View Source Position Declaration public System.Numerics.Vector3 Position { get; } Property Value Type Description System.Numerics.Vector3 | Improve this Doc View Source Rotation Declaration public System.Numerics.Quaternion Rotation { get; } Property Value Type Description System.Numerics.Quaternion | Improve this Doc View Source TransformName Declaration public string TransformName { get; } Property Value Type Description System.String | Improve this Doc View Source Velocity Declaration public System.Numerics.Vector3 Velocity { get; } Property Value Type Description System.Numerics.Vector3 Methods | Improve this Doc View Source DestroyAsync() Declaration public Task DestroyAsync() Returns Type Description Task | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<IWorldTransform> GetEnumerator() Returns Type Description IEnumerator < IWorldTransform > | Improve this Doc View Source SetPositionAsync(System.Numerics.Vector3) Declaration public virtual Task<bool> SetPositionAsync(System.Numerics.Vector3 targetPosition) Parameters Type Name Description System.Numerics.Vector3 targetPosition Returns Type Description Task < System.Boolean > | Improve this Doc View Source SetRotationAsync(System.Numerics.Quaternion) Declaration public virtual Task<bool> SetRotationAsync(System.Numerics.Quaternion rotation) Parameters Type Name Description System.Numerics.Quaternion rotation Returns Type Description Task < System.Boolean > | Improve this Doc View Source SetVelocityAsync(System.Numerics.Vector3) Declaration public Task<bool> SetVelocityAsync(System.Numerics.Vector3 velocity) Parameters Type Name Description System.Numerics.Vector3 velocity Returns Type Description Task < System.Boolean > Implements IWorldTransform System.Collections.Generic.IReadOnlyCollection<> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.UnityEngine.UnityHostLifetime.html": {
    "href": "api/OpenMod.UnityEngine.UnityHostLifetime.html",
    "title": "Class UnityHostLifetime | OpenMod Docs",
    "keywords": "Class UnityHostLifetime Inheritance System.Object UnityHostLifetime Implements IDisposable Namespace : OpenMod.UnityEngine Assembly : OpenMod.UnityEngine.dll Syntax public class UnityHostLifetime : IHostLifetime, IDisposable Constructors | Improve this Doc View Source UnityHostLifetime(IHostApplicationLifetime, ILogger<UnityHostLifetime>, IOptions<HostOptions>, IOpenModHost) Declaration public UnityHostLifetime(IHostApplicationLifetime applicationLifetime, ILogger<UnityHostLifetime> logger, IOptions<HostOptions> hostOptions, IOpenModHost openModHost) Parameters Type Name Description IHostApplicationLifetime applicationLifetime ILogger < UnityHostLifetime > logger IOptions < HostOptions > hostOptions IOpenModHost openModHost Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source StopAsync(CancellationToken) Declaration public Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source WaitForStartAsync(CancellationToken) Declaration public Task WaitForStartAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task Implements IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.html",
    "title": "Namespace OpenMod.Unturned.Animals.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Animals.Events Classes UnturnedAnimalAddedEvent UnturnedAnimalAlertingEvent UnturnedAnimalAttackingEvent UnturnedAnimalAttackingPlayerEvent UnturnedAnimalAttackingPointEvent UnturnedAnimalDamagingEvent UnturnedAnimalDeadEvent UnturnedAnimalDyingEvent UnturnedAnimalEvent UnturnedAnimalFleeingEvent UnturnedAnimalRevivedEvent UnturnedAnimalSpawnedEvent"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAddedEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAddedEvent.html",
    "title": "Class UnturnedAnimalAddedEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalAddedEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalSpawnedEvent UnturnedAnimalAddedEvent Inherited Members UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimalAddedEvent : UnturnedAnimalSpawnedEvent Constructors | Improve this Doc View Source UnturnedAnimalAddedEvent(UnturnedAnimal) Declaration public UnturnedAnimalAddedEvent(UnturnedAnimal animal) Parameters Type Name Description UnturnedAnimal animal Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAlertingEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAlertingEvent.html",
    "title": "Class UnturnedAnimalAlertingEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalAlertingEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalAlertingEvent UnturnedAnimalAttackingEvent UnturnedAnimalFleeingEvent Implements ICancellableEvent Inherited Members UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedAnimalAlertingEvent : UnturnedAnimalEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedAnimalAlertingEvent(UnturnedAnimal, Boolean) Declaration protected UnturnedAnimalAlertingEvent(UnturnedAnimal animal, bool sendToPack) Parameters Type Name Description UnturnedAnimal animal System.Boolean sendToPack Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SendToPack Declaration public bool SendToPack { get; set; } Property Value Type Description System.Boolean Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAttackingEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAttackingEvent.html",
    "title": "Class UnturnedAnimalAttackingEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalAttackingEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalAlertingEvent UnturnedAnimalAttackingEvent UnturnedAnimalAttackingPlayerEvent UnturnedAnimalAttackingPointEvent Implements ICancellableEvent Inherited Members UnturnedAnimalAlertingEvent.SendToPack UnturnedAnimalAlertingEvent.IsCancelled UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedAnimalAttackingEvent : UnturnedAnimalAlertingEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedAnimalAttackingEvent(UnturnedAnimal, Boolean) Declaration protected UnturnedAnimalAttackingEvent(UnturnedAnimal animal, bool sendToPack) Parameters Type Name Description UnturnedAnimal animal System.Boolean sendToPack Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAttackingPlayerEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAttackingPlayerEvent.html",
    "title": "Class UnturnedAnimalAttackingPlayerEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalAttackingPlayerEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalAlertingEvent UnturnedAnimalAttackingEvent UnturnedAnimalAttackingPlayerEvent Implements ICancellableEvent Inherited Members UnturnedAnimalAlertingEvent.SendToPack UnturnedAnimalAlertingEvent.IsCancelled UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimalAttackingPlayerEvent : UnturnedAnimalAttackingEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedAnimalAttackingPlayerEvent(UnturnedAnimal, UnturnedPlayer, Boolean) Declaration public UnturnedAnimalAttackingPlayerEvent(UnturnedAnimal animal, UnturnedPlayer player, bool sendToPack) Parameters Type Name Description UnturnedAnimal animal UnturnedPlayer player System.Boolean sendToPack Properties | Improve this Doc View Source Player Declaration public UnturnedPlayer Player { get; set; } Property Value Type Description UnturnedPlayer Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAttackingPointEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalAttackingPointEvent.html",
    "title": "Class UnturnedAnimalAttackingPointEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalAttackingPointEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalAlertingEvent UnturnedAnimalAttackingEvent UnturnedAnimalAttackingPointEvent Implements ICancellableEvent Inherited Members UnturnedAnimalAlertingEvent.SendToPack UnturnedAnimalAlertingEvent.IsCancelled UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimalAttackingPointEvent : UnturnedAnimalAttackingEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedAnimalAttackingPointEvent(UnturnedAnimal, Vector3, Boolean) Declaration public UnturnedAnimalAttackingPointEvent(UnturnedAnimal animal, Vector3 point, bool sendToPack) Parameters Type Name Description UnturnedAnimal animal Vector3 point System.Boolean sendToPack Properties | Improve this Doc View Source Point Declaration public Vector3 Point { get; set; } Property Value Type Description Vector3 Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalDamagingEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalDamagingEvent.html",
    "title": "Class UnturnedAnimalDamagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalDamagingEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalDamagingEvent UnturnedAnimalDyingEvent Implements ICancellableEvent Inherited Members UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimalDamagingEvent : UnturnedAnimalEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedAnimalDamagingEvent(UnturnedAnimal, UInt16, Vector3, ERagdollEffect, CSteamID, ELimb) Declaration public UnturnedAnimalDamagingEvent(UnturnedAnimal animal, ushort damageAmount, Vector3 ragdoll, ERagdollEffect ragdollEffect, CSteamID instigator, ELimb limb) Parameters Type Name Description UnturnedAnimal animal System.UInt16 damageAmount Vector3 ragdoll ERagdollEffect ragdollEffect CSteamID instigator ELimb limb Properties | Improve this Doc View Source DamageAmount Declaration public ushort DamageAmount { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Instigator Declaration public CSteamID Instigator { get; set; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Limb Declaration public ELimb Limb { get; set; } Property Value Type Description ELimb | Improve this Doc View Source Ragdoll Declaration public Vector3 Ragdoll { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source RagdollEffect Declaration public ERagdollEffect RagdollEffect { get; set; } Property Value Type Description ERagdollEffect Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalDeadEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalDeadEvent.html",
    "title": "Class UnturnedAnimalDeadEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalDeadEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalDeadEvent Inherited Members UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimalDeadEvent : UnturnedAnimalEvent Constructors | Improve this Doc View Source UnturnedAnimalDeadEvent(UnturnedAnimal, Vector3, ERagdollEffect) Declaration public UnturnedAnimalDeadEvent(UnturnedAnimal animal, Vector3 ragdoll, ERagdollEffect ragdollEffect) Parameters Type Name Description UnturnedAnimal animal Vector3 ragdoll ERagdollEffect ragdollEffect Properties | Improve this Doc View Source Ragdoll Declaration public Vector3 Ragdoll { get; } Property Value Type Description Vector3 | Improve this Doc View Source RagdollEffect Declaration public ERagdollEffect RagdollEffect { get; } Property Value Type Description ERagdollEffect Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalDyingEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalDyingEvent.html",
    "title": "Class UnturnedAnimalDyingEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalDyingEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalDamagingEvent UnturnedAnimalDyingEvent Implements ICancellableEvent Inherited Members UnturnedAnimalDamagingEvent.DamageAmount UnturnedAnimalDamagingEvent.Ragdoll UnturnedAnimalDamagingEvent.RagdollEffect UnturnedAnimalDamagingEvent.Instigator UnturnedAnimalDamagingEvent.Limb UnturnedAnimalDamagingEvent.IsCancelled UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimalDyingEvent : UnturnedAnimalDamagingEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedAnimalDyingEvent(UnturnedAnimal, UInt16, Vector3, ERagdollEffect, CSteamID, ELimb) Declaration public UnturnedAnimalDyingEvent(UnturnedAnimal animal, ushort damageAmount, Vector3 ragdoll, ERagdollEffect ragdollEffect, CSteamID instigator, ELimb limb) Parameters Type Name Description UnturnedAnimal animal System.UInt16 damageAmount Vector3 ragdoll ERagdollEffect ragdollEffect CSteamID instigator ELimb limb Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalEvent.html",
    "title": "Class UnturnedAnimalEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalAlertingEvent UnturnedAnimalDamagingEvent UnturnedAnimalDeadEvent UnturnedAnimalSpawnedEvent Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedAnimalEvent : Event Constructors | Improve this Doc View Source UnturnedAnimalEvent(UnturnedAnimal) Declaration protected UnturnedAnimalEvent(UnturnedAnimal animal) Parameters Type Name Description UnturnedAnimal animal Properties | Improve this Doc View Source Animal Declaration public UnturnedAnimal Animal { get; } Property Value Type Description UnturnedAnimal Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalFleeingEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalFleeingEvent.html",
    "title": "Class UnturnedAnimalFleeingEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalFleeingEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalAlertingEvent UnturnedAnimalFleeingEvent Implements ICancellableEvent Inherited Members UnturnedAnimalAlertingEvent.SendToPack UnturnedAnimalAlertingEvent.IsCancelled UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimalFleeingEvent : UnturnedAnimalAlertingEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedAnimalFleeingEvent(UnturnedAnimal, Vector3, Boolean) Declaration public UnturnedAnimalFleeingEvent(UnturnedAnimal animal, Vector3 direction, bool sendToPack) Parameters Type Name Description UnturnedAnimal animal Vector3 direction System.Boolean sendToPack Properties | Improve this Doc View Source Direction Declaration public Vector3 Direction { get; set; } Property Value Type Description Vector3 Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalRevivedEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalRevivedEvent.html",
    "title": "Class UnturnedAnimalRevivedEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalRevivedEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalSpawnedEvent UnturnedAnimalRevivedEvent Inherited Members UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimalRevivedEvent : UnturnedAnimalSpawnedEvent Constructors | Improve this Doc View Source UnturnedAnimalRevivedEvent(UnturnedAnimal) Declaration public UnturnedAnimalRevivedEvent(UnturnedAnimal animal) Parameters Type Name Description UnturnedAnimal animal Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalSpawnedEvent.html": {
    "href": "api/OpenMod.Unturned.Animals.Events.UnturnedAnimalSpawnedEvent.html",
    "title": "Class UnturnedAnimalSpawnedEvent | OpenMod Docs",
    "keywords": "Class UnturnedAnimalSpawnedEvent Inheritance System.Object UnturnedAnimalEvent UnturnedAnimalSpawnedEvent UnturnedAnimalAddedEvent UnturnedAnimalRevivedEvent Inherited Members UnturnedAnimalEvent.Animal Namespace : OpenMod.Unturned.Animals.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedAnimalSpawnedEvent : UnturnedAnimalEvent Constructors | Improve this Doc View Source UnturnedAnimalSpawnedEvent(UnturnedAnimal) Declaration protected UnturnedAnimalSpawnedEvent(UnturnedAnimal animal) Parameters Type Name Description UnturnedAnimal animal Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.html": {
    "href": "api/OpenMod.Unturned.Animals.html",
    "title": "Namespace OpenMod.Unturned.Animals | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Animals Classes UnturnedAnimal UnturnedAnimalAsset"
  },
  "api/OpenMod.Unturned.Animals.UnturnedAnimal.html": {
    "href": "api/OpenMod.Unturned.Animals.UnturnedAnimal.html",
    "title": "Class UnturnedAnimal | OpenMod Docs",
    "keywords": "Class UnturnedAnimal Inheritance System.Object UnturnedAnimal Implements IEntity IGameObject IHasHealth IDamageSource Namespace : OpenMod.Unturned.Animals Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimal : object, IEntity, IGameObject, IHasHealth, IDamageSource Constructors | Improve this Doc View Source UnturnedAnimal(Animal) Declaration public UnturnedAnimal(Animal animal) Parameters Type Name Description Animal animal Properties | Improve this Doc View Source Animal Declaration public Animal Animal { get; } Property Value Type Description Animal | Improve this Doc View Source Asset Declaration public IEntityAsset Asset { get; } Property Value Type Description IEntityAsset | Improve this Doc View Source DamageSourceName Declaration public string DamageSourceName { get; } Property Value Type Description System.String | Improve this Doc View Source EntityInstanceId Declaration public string EntityInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source Health Declaration public double Health { get; } Property Value Type Description System.Double | Improve this Doc View Source IsAlive Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Declaration public double MaxHealth { get; } Property Value Type Description System.Double | Improve this Doc View Source State Declaration public IEntityState State { get; } Property Value Type Description IEntityState | Improve this Doc View Source Transform Declaration public IWorldTransform Transform { get; } Property Value Type Description IWorldTransform Methods | Improve this Doc View Source DamageAsync(Double) Declaration public Task DamageAsync(double amount) Parameters Type Name Description System.Double amount Returns Type Description Task | Improve this Doc View Source KillAsync() Declaration public Task KillAsync() Returns Type Description Task | Improve this Doc View Source SetFullHealthAsync() Declaration public Task SetFullHealthAsync() Returns Type Description Task | Improve this Doc View Source SetHealthAsync(Double) Declaration public Task SetHealthAsync(double health) Parameters Type Name Description System.Double health Returns Type Description Task | Improve this Doc View Source SetPositionAsync(System.Numerics.Vector3) Declaration public Task<bool> SetPositionAsync(System.Numerics.Vector3 position) Parameters Type Name Description System.Numerics.Vector3 position Returns Type Description Task < System.Boolean > | Improve this Doc View Source SetPositionAsync(System.Numerics.Vector3, Quaternion) Declaration public Task<bool> SetPositionAsync(System.Numerics.Vector3 position, Quaternion rotation) Parameters Type Name Description System.Numerics.Vector3 position Quaternion rotation Returns Type Description Task < System.Boolean > Implements IEntity IGameObject IHasHealth IDamageSource Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Animals.UnturnedAnimalAsset.html": {
    "href": "api/OpenMod.Unturned.Animals.UnturnedAnimalAsset.html",
    "title": "Class UnturnedAnimalAsset | OpenMod Docs",
    "keywords": "Class UnturnedAnimalAsset Inheritance System.Object UnturnedAnimalAsset Implements IEntityAsset Namespace : OpenMod.Unturned.Animals Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAnimalAsset : object, IEntityAsset Constructors | Improve this Doc View Source UnturnedAnimalAsset(AnimalAsset) Declaration public UnturnedAnimalAsset(AnimalAsset animalAsset) Parameters Type Name Description AnimalAsset animalAsset Properties | Improve this Doc View Source AnimalAsset Declaration public AnimalAsset AnimalAsset { get; } Property Value Type Description AnimalAsset | Improve this Doc View Source EntityAssetId Declaration public string EntityAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source EntityType Declaration public string EntityType { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IEntityAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.html": {
    "href": "api/OpenMod.Unturned.Building.Events.html",
    "title": "Namespace OpenMod.Unturned.Building.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Building.Events Classes UnturnedBarricadeDamagingEvent UnturnedBarricadeDeployedEvent UnturnedBarricadeDeployingEvent UnturnedBarricadeDestroyedEvent UnturnedBarricadeDestroyingEvent UnturnedBarricadeSalvagingEvent UnturnedBarricadeTransformedEvent UnturnedBarricadeTransformingEvent UnturnedBuildableDamagingEvent UnturnedBuildableDeployedEvent UnturnedBuildableDeployingEvent UnturnedBuildableDestroyedEvent UnturnedBuildableDestroyingEvent UnturnedBuildableEvent UnturnedBuildableSalvagingEvent UnturnedBuildableTransformedEvent UnturnedBuildableTransformingEvent UnturnedPlantHarvestingEvent UnturnedSignModifyingEvent UnturnedStorageOpeningEvent UnturnedStructureDamagingEvent UnturnedStructureDeployedEvent UnturnedStructureDeployingEvent Event that is emitted when a structure is being placed. Special note: the game completely disregards any rotation in X and Z axis UnturnedStructureDestroyedEvent UnturnedStructureDestroyingEvent UnturnedStructureSalvagingEvent UnturnedStructureTransformedEvent UnturnedStructureTransformingEvent Interfaces IUnturnedBarricadeEvent IUnturnedStructureEvent"
  },
  "api/OpenMod.Unturned.Building.Events.IUnturnedBarricadeEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.IUnturnedBarricadeEvent.html",
    "title": "Interface IUnturnedBarricadeEvent | OpenMod Docs",
    "keywords": "Interface IUnturnedBarricadeEvent Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public interface IUnturnedBarricadeEvent : IBuildableEvent, IEvent Properties | Improve this Doc View Source Buildable Declaration UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.IUnturnedStructureEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.IUnturnedStructureEvent.html",
    "title": "Interface IUnturnedStructureEvent | OpenMod Docs",
    "keywords": "Interface IUnturnedStructureEvent Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public interface IUnturnedStructureEvent : IBuildableEvent, IEvent Properties | Improve this Doc View Source Buildable Declaration UnturnedStructureBuildable Buildable { get; } Property Value Type Description UnturnedStructureBuildable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDamagingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDamagingEvent.html",
    "title": "Class UnturnedBarricadeDamagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBarricadeDamagingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDamagingEvent UnturnedBarricadeDamagingEvent Implements ICancellableEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableDamagingEvent.DamageAmount UnturnedBuildableDamagingEvent.DamageOrigin UnturnedBuildableDamagingEvent.Instigator UnturnedBuildableDamagingEvent.InstigatorId UnturnedBuildableDamagingEvent.IsCancelled UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBarricadeDamagingEvent : UnturnedBuildableDamagingEvent, ICancellableEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBarricadeDamagingEvent(UnturnedBarricadeBuildable, UInt16, EDamageOrigin, UnturnedPlayer) Declaration public UnturnedBarricadeDamagingEvent(UnturnedBarricadeBuildable buildable, ushort damageAmount, EDamageOrigin damageOrigin, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBarricadeBuildable buildable System.UInt16 damageAmount EDamageOrigin damageOrigin UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable Implements ICancellableEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDeployedEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDeployedEvent.html",
    "title": "Class UnturnedBarricadeDeployedEvent | OpenMod Docs",
    "keywords": "Class UnturnedBarricadeDeployedEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDeployedEvent UnturnedBarricadeDeployedEvent Implements IBuildableDeployedEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBarricadeDeployedEvent : UnturnedBuildableDeployedEvent, IBuildableDeployedEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBarricadeDeployedEvent(UnturnedBarricadeBuildable) Declaration public UnturnedBarricadeDeployedEvent(UnturnedBarricadeBuildable buildable) Parameters Type Name Description UnturnedBarricadeBuildable buildable Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable Implements IBuildableDeployedEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDeployingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDeployingEvent.html",
    "title": "Class UnturnedBarricadeDeployingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBarricadeDeployingEvent Inheritance System.Object UnturnedBuildableDeployingEvent UnturnedBarricadeDeployingEvent Implements IBuildableDeployingEvent IEvent ICancellableEvent Inherited Members UnturnedBuildableDeployingEvent.Asset UnturnedBuildableDeployingEvent.Point UnturnedBuildableDeployingEvent.Rotation UnturnedBuildableDeployingEvent.Owner UnturnedBuildableDeployingEvent.Group UnturnedBuildableDeployingEvent.IsCancelled UnturnedBuildableDeployingEvent.IBuildableDeployingEvent.BuildableAsset Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBarricadeDeployingEvent : UnturnedBuildableDeployingEvent, IBuildableDeployingEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedBarricadeDeployingEvent(ItemBarricadeAsset, Transform, Vector3, Quaternion, UInt64, UInt64) Declaration public UnturnedBarricadeDeployingEvent(ItemBarricadeAsset asset, Transform hit, Vector3 point, Quaternion rotation, ulong owner, ulong group) Parameters Type Name Description ItemBarricadeAsset asset Transform hit Vector3 point Quaternion rotation System.UInt64 owner System.UInt64 group Properties | Improve this Doc View Source BarricadeAsset Declaration public ItemBarricadeAsset BarricadeAsset { get; } Property Value Type Description ItemBarricadeAsset | Improve this Doc View Source Hit Declaration public Transform Hit { get; } Property Value Type Description Transform Implements IBuildableDeployingEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDestroyedEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDestroyedEvent.html",
    "title": "Class UnturnedBarricadeDestroyedEvent | OpenMod Docs",
    "keywords": "Class UnturnedBarricadeDestroyedEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDestroyedEvent UnturnedBarricadeDestroyedEvent Implements IBuildableDestroyedEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBarricadeDestroyedEvent : UnturnedBuildableDestroyedEvent, IBuildableDestroyedEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBarricadeDestroyedEvent(UnturnedBarricadeBuildable) Declaration public UnturnedBarricadeDestroyedEvent(UnturnedBarricadeBuildable buildable) Parameters Type Name Description UnturnedBarricadeBuildable buildable Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable Implements IBuildableDestroyedEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDestroyingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeDestroyingEvent.html",
    "title": "Class UnturnedBarricadeDestroyingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBarricadeDestroyingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDamagingEvent UnturnedBuildableDestroyingEvent UnturnedBarricadeDestroyingEvent Implements ICancellableEvent IBuildableDestroyingEvent ICancellableEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableDamagingEvent.DamageAmount UnturnedBuildableDamagingEvent.DamageOrigin UnturnedBuildableDamagingEvent.Instigator UnturnedBuildableDamagingEvent.InstigatorId UnturnedBuildableDamagingEvent.IsCancelled UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBarricadeDestroyingEvent : UnturnedBuildableDestroyingEvent, ICancellableEvent, IBuildableDestroyingEvent, ICancellableEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBarricadeDestroyingEvent(UnturnedBarricadeBuildable, UInt16, EDamageOrigin, UnturnedPlayer) Declaration public UnturnedBarricadeDestroyingEvent(UnturnedBarricadeBuildable buildable, ushort damageAmount, EDamageOrigin damageOrigin, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBarricadeBuildable buildable System.UInt16 damageAmount EDamageOrigin damageOrigin UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable Implements ICancellableEvent IBuildableDestroyingEvent ICancellableEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeSalvagingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeSalvagingEvent.html",
    "title": "Class UnturnedBarricadeSalvagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBarricadeSalvagingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableSalvagingEvent UnturnedBarricadeSalvagingEvent Implements ICancellableEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableSalvagingEvent.Instigator UnturnedBuildableSalvagingEvent.InstigatorSteamId UnturnedBuildableSalvagingEvent.IsCancelled UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBarricadeSalvagingEvent : UnturnedBuildableSalvagingEvent, ICancellableEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBarricadeSalvagingEvent(UnturnedBuildable, UnturnedPlayer) Declaration public UnturnedBarricadeSalvagingEvent(UnturnedBuildable buildable, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable Implements ICancellableEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeTransformedEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeTransformedEvent.html",
    "title": "Class UnturnedBarricadeTransformedEvent | OpenMod Docs",
    "keywords": "Class UnturnedBarricadeTransformedEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableTransformedEvent UnturnedBarricadeTransformedEvent Implements IBuildableTransformedEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableTransformedEvent.InstigatorSteamId UnturnedBuildableTransformedEvent.Instigator UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBarricadeTransformedEvent : UnturnedBuildableTransformedEvent, IBuildableTransformedEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBarricadeTransformedEvent(UnturnedBuildable, UnturnedPlayer) Declaration public UnturnedBarricadeTransformedEvent(UnturnedBuildable buildable, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable Implements IBuildableTransformedEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeTransformingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBarricadeTransformingEvent.html",
    "title": "Class UnturnedBarricadeTransformingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBarricadeTransformingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableTransformingEvent UnturnedBarricadeTransformingEvent Implements IBuildableTransformingEvent ICancellableEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableTransformingEvent.Instigator UnturnedBuildableTransformingEvent.InstigatorId UnturnedBuildableTransformingEvent.Point UnturnedBuildableTransformingEvent.Rotation UnturnedBuildableTransformingEvent.IsCancelled UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBarricadeTransformingEvent : UnturnedBuildableTransformingEvent, IBuildableTransformingEvent, ICancellableEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBarricadeTransformingEvent(UnturnedBarricadeBuildable, UnturnedPlayer, Vector3, Quaternion) Declaration public UnturnedBarricadeTransformingEvent(UnturnedBarricadeBuildable buildable, UnturnedPlayer instigator, Vector3 point, Quaternion rotation) Parameters Type Name Description UnturnedBarricadeBuildable buildable UnturnedPlayer instigator Vector3 point Quaternion rotation Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable Implements IBuildableTransformingEvent ICancellableEvent IUnturnedBarricadeEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDamagingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDamagingEvent.html",
    "title": "Class UnturnedBuildableDamagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBuildableDamagingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDamagingEvent UnturnedBarricadeDamagingEvent UnturnedBuildableDestroyingEvent UnturnedStructureDamagingEvent Implements IBuildableEvent IEvent ICancellableEvent Inherited Members UnturnedBuildableEvent.Buildable UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedBuildableDamagingEvent : UnturnedBuildableEvent, IBuildableEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedBuildableDamagingEvent(UnturnedBuildable, UInt16, EDamageOrigin, UnturnedPlayer) Declaration protected UnturnedBuildableDamagingEvent(UnturnedBuildable buildable, ushort damageAmount, EDamageOrigin damageOrigin, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable System.UInt16 damageAmount EDamageOrigin damageOrigin UnturnedPlayer instigator Properties | Improve this Doc View Source DamageAmount Declaration public ushort DamageAmount { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source DamageOrigin Declaration public EDamageOrigin DamageOrigin { get; } Property Value Type Description EDamageOrigin | Improve this Doc View Source Instigator Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source InstigatorId Declaration public CSteamID InstigatorId { get; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IBuildableEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDeployedEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDeployedEvent.html",
    "title": "Class UnturnedBuildableDeployedEvent | OpenMod Docs",
    "keywords": "Class UnturnedBuildableDeployedEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDeployedEvent UnturnedBarricadeDeployedEvent UnturnedStructureDeployedEvent Implements IBuildableDeployedEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableEvent.Buildable UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableDeployedEvent : UnturnedBuildableEvent, IBuildableDeployedEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBuildableDeployedEvent(UnturnedBuildable) Declaration public UnturnedBuildableDeployedEvent(UnturnedBuildable buildable) Parameters Type Name Description UnturnedBuildable buildable Implements IBuildableDeployedEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDeployingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDeployingEvent.html",
    "title": "Class UnturnedBuildableDeployingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBuildableDeployingEvent Inheritance System.Object UnturnedBuildableDeployingEvent UnturnedBarricadeDeployingEvent UnturnedStructureDeployingEvent Implements IBuildableDeployingEvent IEvent ICancellableEvent Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableDeployingEvent : Core.Eventing.Event, IBuildableDeployingEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedBuildableDeployingEvent(UnturnedBuildableAsset, Vector3, Quaternion, UInt64, UInt64) Declaration public UnturnedBuildableDeployingEvent(UnturnedBuildableAsset asset, Vector3 point, Quaternion rotation, ulong owner, ulong group) Parameters Type Name Description UnturnedBuildableAsset asset Vector3 point Quaternion rotation System.UInt64 owner System.UInt64 group Properties | Improve this Doc View Source Asset Declaration public UnturnedBuildableAsset Asset { get; } Property Value Type Description UnturnedBuildableAsset | Improve this Doc View Source Group Declaration public ulong Group { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Owner Declaration public ulong Owner { get; set; } Property Value Type Description System.UInt64 | Improve this Doc View Source Point Declaration public Vector3 Point { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source Rotation Declaration public Quaternion Rotation { get; set; } Property Value Type Description Quaternion Explicit Interface Implementations | Improve this Doc View Source IBuildableDeployingEvent.BuildableAsset Declaration IBuildableAsset IBuildableDeployingEvent.BuildableAsset { get; } Returns Type Description IBuildableAsset Implements IBuildableDeployingEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDestroyedEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDestroyedEvent.html",
    "title": "Class UnturnedBuildableDestroyedEvent | OpenMod Docs",
    "keywords": "Class UnturnedBuildableDestroyedEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDestroyedEvent UnturnedBarricadeDestroyedEvent UnturnedStructureDestroyedEvent Implements IBuildableDestroyedEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableEvent.Buildable UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableDestroyedEvent : UnturnedBuildableEvent, IBuildableDestroyedEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBuildableDestroyedEvent(UnturnedBuildable) Declaration public UnturnedBuildableDestroyedEvent(UnturnedBuildable buildable) Parameters Type Name Description UnturnedBuildable buildable Implements IBuildableDestroyedEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDestroyingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBuildableDestroyingEvent.html",
    "title": "Class UnturnedBuildableDestroyingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBuildableDestroyingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDamagingEvent UnturnedBuildableDestroyingEvent UnturnedBarricadeDestroyingEvent UnturnedStructureDestroyingEvent Implements ICancellableEvent IBuildableDestroyingEvent IBuildableEvent IEvent ICancellableEvent Inherited Members UnturnedBuildableDamagingEvent.DamageAmount UnturnedBuildableDamagingEvent.DamageOrigin UnturnedBuildableDamagingEvent.Instigator UnturnedBuildableDamagingEvent.InstigatorId UnturnedBuildableDamagingEvent.IsCancelled UnturnedBuildableEvent.Buildable UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableDestroyingEvent : UnturnedBuildableDamagingEvent, ICancellableEvent, IBuildableDestroyingEvent, IBuildableEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedBuildableDestroyingEvent(UnturnedBuildable, UInt16, EDamageOrigin, UnturnedPlayer) Declaration public UnturnedBuildableDestroyingEvent(UnturnedBuildable buildable, ushort damageAmount, EDamageOrigin damageOrigin, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable System.UInt16 damageAmount EDamageOrigin damageOrigin UnturnedPlayer instigator Implements ICancellableEvent IBuildableDestroyingEvent IBuildableEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBuildableEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBuildableEvent.html",
    "title": "Class UnturnedBuildableEvent | OpenMod Docs",
    "keywords": "Class UnturnedBuildableEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDamagingEvent UnturnedBuildableDeployedEvent UnturnedBuildableDestroyedEvent UnturnedBuildableSalvagingEvent UnturnedBuildableTransformedEvent UnturnedBuildableTransformingEvent UnturnedPlantHarvestingEvent UnturnedSignModifyingEvent UnturnedStorageOpeningEvent Implements IBuildableEvent IEvent Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedBuildableEvent : Event, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBuildableEvent(UnturnedBuildable) Declaration protected UnturnedBuildableEvent(UnturnedBuildable buildable) Parameters Type Name Description UnturnedBuildable buildable Properties | Improve this Doc View Source Buildable Declaration public UnturnedBuildable Buildable { get; } Property Value Type Description UnturnedBuildable Explicit Interface Implementations | Improve this Doc View Source IBuildableEvent.Buildable Declaration IBuildable IBuildableEvent.Buildable { get; } Returns Type Description IBuildable Implements IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBuildableSalvagingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBuildableSalvagingEvent.html",
    "title": "Class UnturnedBuildableSalvagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBuildableSalvagingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableSalvagingEvent UnturnedBarricadeSalvagingEvent UnturnedStructureSalvagingEvent Implements IBuildableEvent IEvent ICancellableEvent Inherited Members UnturnedBuildableEvent.Buildable UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedBuildableSalvagingEvent : UnturnedBuildableEvent, IBuildableEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedBuildableSalvagingEvent(UnturnedBuildable, UnturnedPlayer) Declaration protected UnturnedBuildableSalvagingEvent(UnturnedBuildable buildable, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator Properties | Improve this Doc View Source Instigator Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source InstigatorSteamId Declaration public CSteamID InstigatorSteamId { get; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IBuildableEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBuildableTransformedEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBuildableTransformedEvent.html",
    "title": "Class UnturnedBuildableTransformedEvent | OpenMod Docs",
    "keywords": "Class UnturnedBuildableTransformedEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableTransformedEvent UnturnedBarricadeTransformedEvent UnturnedStructureTransformedEvent Implements IBuildableTransformedEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableEvent.Buildable UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableTransformedEvent : UnturnedBuildableEvent, IBuildableTransformedEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedBuildableTransformedEvent(UnturnedBuildable, UnturnedPlayer) Declaration public UnturnedBuildableTransformedEvent(UnturnedBuildable buildable, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator Properties | Improve this Doc View Source Instigator Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source InstigatorSteamId Declaration public CSteamID InstigatorSteamId { get; } Property Value Type Description CSteamID Implements IBuildableTransformedEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedBuildableTransformingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedBuildableTransformingEvent.html",
    "title": "Class UnturnedBuildableTransformingEvent | OpenMod Docs",
    "keywords": "Class UnturnedBuildableTransformingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableTransformingEvent UnturnedBarricadeTransformingEvent UnturnedStructureTransformingEvent Implements IBuildableTransformingEvent IBuildableEvent IEvent ICancellableEvent Inherited Members UnturnedBuildableEvent.Buildable UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableTransformingEvent : UnturnedBuildableEvent, IBuildableTransformingEvent, IBuildableEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedBuildableTransformingEvent(UnturnedBuildable, UnturnedPlayer, Vector3, Quaternion) Declaration public UnturnedBuildableTransformingEvent(UnturnedBuildable buildable, UnturnedPlayer instigator, Vector3 point, Quaternion rotation) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator Vector3 point Quaternion rotation Properties | Improve this Doc View Source Instigator Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source InstigatorId Declaration public CSteamID InstigatorId { get; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Point Declaration public Vector3 Point { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source Rotation Declaration public Quaternion Rotation { get; set; } Property Value Type Description Quaternion Implements IBuildableTransformingEvent IBuildableEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedPlantHarvestingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedPlantHarvestingEvent.html",
    "title": "Class UnturnedPlantHarvestingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlantHarvestingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedPlantHarvestingEvent Implements IUnturnedBarricadeEvent IBuildableEvent IEvent ICancellableEvent Inherited Members UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlantHarvestingEvent : UnturnedBuildableEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlantHarvestingEvent(UnturnedBuildable, UnturnedPlayer) Declaration public UnturnedPlantHarvestingEvent(UnturnedBuildable buildable, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable | Improve this Doc View Source Instigator Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source InstigatorSteamId Declaration public CSteamID InstigatorSteamId { get; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IUnturnedBarricadeEvent IBuildableEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedSignModifyingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedSignModifyingEvent.html",
    "title": "Class UnturnedSignModifyingEvent | OpenMod Docs",
    "keywords": "Class UnturnedSignModifyingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedSignModifyingEvent Implements IUnturnedBarricadeEvent IBuildableEvent IEvent ICancellableEvent Inherited Members UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedSignModifyingEvent : UnturnedBuildableEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedSignModifyingEvent(UnturnedBuildable, UnturnedPlayer, String) Declaration public UnturnedSignModifyingEvent(UnturnedBuildable buildable, UnturnedPlayer instigator, string text) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator System.String text Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable | Improve this Doc View Source Instigator Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source InstigatorSteamId Declaration public CSteamID InstigatorSteamId { get; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Text Declaration public string Text { get; set; } Property Value Type Description System.String Implements IUnturnedBarricadeEvent IBuildableEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedStorageOpeningEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedStorageOpeningEvent.html",
    "title": "Class UnturnedStorageOpeningEvent | OpenMod Docs",
    "keywords": "Class UnturnedStorageOpeningEvent Inheritance System.Object UnturnedBuildableEvent UnturnedStorageOpeningEvent Implements IUnturnedBarricadeEvent IBuildableEvent IEvent ICancellableEvent Inherited Members UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStorageOpeningEvent : UnturnedBuildableEvent, IUnturnedBarricadeEvent, IBuildableEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedStorageOpeningEvent(UnturnedBuildable, UnturnedPlayer) Declaration public UnturnedStorageOpeningEvent(UnturnedBuildable buildable, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedBarricadeBuildable Buildable { get; } Property Value Type Description UnturnedBarricadeBuildable | Improve this Doc View Source Instigator Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source InstigatorSteamId Declaration public CSteamID InstigatorSteamId { get; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IUnturnedBarricadeEvent IBuildableEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedStructureDamagingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedStructureDamagingEvent.html",
    "title": "Class UnturnedStructureDamagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedStructureDamagingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDamagingEvent UnturnedStructureDamagingEvent Implements ICancellableEvent IUnturnedStructureEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableDamagingEvent.DamageAmount UnturnedBuildableDamagingEvent.DamageOrigin UnturnedBuildableDamagingEvent.Instigator UnturnedBuildableDamagingEvent.InstigatorId UnturnedBuildableDamagingEvent.IsCancelled UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStructureDamagingEvent : UnturnedBuildableDamagingEvent, ICancellableEvent, IUnturnedStructureEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedStructureDamagingEvent(UnturnedStructureBuildable, UInt16, EDamageOrigin, UnturnedPlayer) Declaration public UnturnedStructureDamagingEvent(UnturnedStructureBuildable buildable, ushort damageAmount, EDamageOrigin damageOrigin, UnturnedPlayer instigator) Parameters Type Name Description UnturnedStructureBuildable buildable System.UInt16 damageAmount EDamageOrigin damageOrigin UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedStructureBuildable Buildable { get; } Property Value Type Description UnturnedStructureBuildable Implements ICancellableEvent IUnturnedStructureEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedStructureDeployedEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedStructureDeployedEvent.html",
    "title": "Class UnturnedStructureDeployedEvent | OpenMod Docs",
    "keywords": "Class UnturnedStructureDeployedEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDeployedEvent UnturnedStructureDeployedEvent Implements IBuildableDeployedEvent IUnturnedStructureEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStructureDeployedEvent : UnturnedBuildableDeployedEvent, IBuildableDeployedEvent, IUnturnedStructureEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedStructureDeployedEvent(UnturnedStructureBuildable) Declaration public UnturnedStructureDeployedEvent(UnturnedStructureBuildable buildable) Parameters Type Name Description UnturnedStructureBuildable buildable Properties | Improve this Doc View Source Buildable Declaration public UnturnedStructureBuildable Buildable { get; } Property Value Type Description UnturnedStructureBuildable Implements IBuildableDeployedEvent IUnturnedStructureEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedStructureDeployingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedStructureDeployingEvent.html",
    "title": "Class UnturnedStructureDeployingEvent | OpenMod Docs",
    "keywords": "Class UnturnedStructureDeployingEvent Event that is emitted when a structure is being placed. Special note: the game completely disregards any rotation in X and Z axis Inheritance System.Object UnturnedBuildableDeployingEvent UnturnedStructureDeployingEvent Implements IBuildableDeployingEvent IEvent ICancellableEvent Inherited Members UnturnedBuildableDeployingEvent.Asset UnturnedBuildableDeployingEvent.Point UnturnedBuildableDeployingEvent.Rotation UnturnedBuildableDeployingEvent.Owner UnturnedBuildableDeployingEvent.Group UnturnedBuildableDeployingEvent.IsCancelled UnturnedBuildableDeployingEvent.IBuildableDeployingEvent.BuildableAsset Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStructureDeployingEvent : UnturnedBuildableDeployingEvent, IBuildableDeployingEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedStructureDeployingEvent(ItemStructureAsset, Vector3, Quaternion, UInt64, UInt64) Declaration public UnturnedStructureDeployingEvent(ItemStructureAsset asset, Vector3 point, Quaternion rotation, ulong owner, ulong group) Parameters Type Name Description ItemStructureAsset asset Vector3 point Quaternion rotation System.UInt64 owner System.UInt64 group Properties | Improve this Doc View Source StructureAsset Declaration public ItemStructureAsset StructureAsset { get; } Property Value Type Description ItemStructureAsset Implements IBuildableDeployingEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedStructureDestroyedEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedStructureDestroyedEvent.html",
    "title": "Class UnturnedStructureDestroyedEvent | OpenMod Docs",
    "keywords": "Class UnturnedStructureDestroyedEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDestroyedEvent UnturnedStructureDestroyedEvent Implements IBuildableDestroyedEvent IUnturnedStructureEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStructureDestroyedEvent : UnturnedBuildableDestroyedEvent, IBuildableDestroyedEvent, IUnturnedStructureEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedStructureDestroyedEvent(UnturnedStructureBuildable) Declaration public UnturnedStructureDestroyedEvent(UnturnedStructureBuildable buildable) Parameters Type Name Description UnturnedStructureBuildable buildable Properties | Improve this Doc View Source Buildable Declaration public UnturnedStructureBuildable Buildable { get; } Property Value Type Description UnturnedStructureBuildable Implements IBuildableDestroyedEvent IUnturnedStructureEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedStructureDestroyingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedStructureDestroyingEvent.html",
    "title": "Class UnturnedStructureDestroyingEvent | OpenMod Docs",
    "keywords": "Class UnturnedStructureDestroyingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableDamagingEvent UnturnedBuildableDestroyingEvent UnturnedStructureDestroyingEvent Implements ICancellableEvent IBuildableDestroyingEvent ICancellableEvent IUnturnedStructureEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableDamagingEvent.DamageAmount UnturnedBuildableDamagingEvent.DamageOrigin UnturnedBuildableDamagingEvent.Instigator UnturnedBuildableDamagingEvent.InstigatorId UnturnedBuildableDamagingEvent.IsCancelled UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStructureDestroyingEvent : UnturnedBuildableDestroyingEvent, ICancellableEvent, IBuildableDestroyingEvent, ICancellableEvent, IUnturnedStructureEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedStructureDestroyingEvent(UnturnedStructureBuildable, UInt16, EDamageOrigin, UnturnedPlayer) Declaration public UnturnedStructureDestroyingEvent(UnturnedStructureBuildable buildable, ushort damageAmount, EDamageOrigin damageOrigin, UnturnedPlayer instigator) Parameters Type Name Description UnturnedStructureBuildable buildable System.UInt16 damageAmount EDamageOrigin damageOrigin UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedStructureBuildable Buildable { get; } Property Value Type Description UnturnedStructureBuildable Implements ICancellableEvent IBuildableDestroyingEvent ICancellableEvent IUnturnedStructureEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedStructureSalvagingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedStructureSalvagingEvent.html",
    "title": "Class UnturnedStructureSalvagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedStructureSalvagingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableSalvagingEvent UnturnedStructureSalvagingEvent Implements ICancellableEvent IUnturnedStructureEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableSalvagingEvent.Instigator UnturnedBuildableSalvagingEvent.InstigatorSteamId UnturnedBuildableSalvagingEvent.IsCancelled UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStructureSalvagingEvent : UnturnedBuildableSalvagingEvent, ICancellableEvent, IUnturnedStructureEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedStructureSalvagingEvent(UnturnedBuildable, UnturnedPlayer) Declaration public UnturnedStructureSalvagingEvent(UnturnedBuildable buildable, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedStructureBuildable Buildable { get; } Property Value Type Description UnturnedStructureBuildable Implements ICancellableEvent IUnturnedStructureEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedStructureTransformedEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedStructureTransformedEvent.html",
    "title": "Class UnturnedStructureTransformedEvent | OpenMod Docs",
    "keywords": "Class UnturnedStructureTransformedEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableTransformedEvent UnturnedStructureTransformedEvent Implements IBuildableTransformedEvent IUnturnedStructureEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableTransformedEvent.InstigatorSteamId UnturnedBuildableTransformedEvent.Instigator UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStructureTransformedEvent : UnturnedBuildableTransformedEvent, IBuildableTransformedEvent, IUnturnedStructureEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedStructureTransformedEvent(UnturnedBuildable, UnturnedPlayer) Declaration public UnturnedStructureTransformedEvent(UnturnedBuildable buildable, UnturnedPlayer instigator) Parameters Type Name Description UnturnedBuildable buildable UnturnedPlayer instigator Properties | Improve this Doc View Source Buildable Declaration public UnturnedStructureBuildable Buildable { get; } Property Value Type Description UnturnedStructureBuildable Implements IBuildableTransformedEvent IUnturnedStructureEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.Events.UnturnedStructureTransformingEvent.html": {
    "href": "api/OpenMod.Unturned.Building.Events.UnturnedStructureTransformingEvent.html",
    "title": "Class UnturnedStructureTransformingEvent | OpenMod Docs",
    "keywords": "Class UnturnedStructureTransformingEvent Inheritance System.Object UnturnedBuildableEvent UnturnedBuildableTransformingEvent UnturnedStructureTransformingEvent Implements IBuildableTransformingEvent ICancellableEvent IUnturnedStructureEvent IBuildableEvent IEvent Inherited Members UnturnedBuildableTransformingEvent.Instigator UnturnedBuildableTransformingEvent.InstigatorId UnturnedBuildableTransformingEvent.Point UnturnedBuildableTransformingEvent.Rotation UnturnedBuildableTransformingEvent.IsCancelled UnturnedBuildableEvent.IBuildableEvent.Buildable Namespace : OpenMod.Unturned.Building.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStructureTransformingEvent : UnturnedBuildableTransformingEvent, IBuildableTransformingEvent, ICancellableEvent, IUnturnedStructureEvent, IBuildableEvent, IEvent Constructors | Improve this Doc View Source UnturnedStructureTransformingEvent(UnturnedStructureBuildable, UnturnedPlayer, Vector3, Quaternion) Declaration public UnturnedStructureTransformingEvent(UnturnedStructureBuildable buildable, UnturnedPlayer instigator, Vector3 point, Quaternion rotation) Parameters Type Name Description UnturnedStructureBuildable buildable UnturnedPlayer instigator Vector3 point Quaternion rotation Properties | Improve this Doc View Source Buildable Declaration public UnturnedStructureBuildable Buildable { get; } Property Value Type Description UnturnedStructureBuildable Implements IBuildableTransformingEvent ICancellableEvent IUnturnedStructureEvent IBuildableEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.html": {
    "href": "api/OpenMod.Unturned.Building.html",
    "title": "Namespace OpenMod.Unturned.Building | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Building Classes UnturnedBarricadeBuildable UnturnedBuildable UnturnedBuildableAsset UnturnedBuildableDirectory UnturnedBuildableOwnership UnturnedBuildableState UnturnedStructureBuildable"
  },
  "api/OpenMod.Unturned.Building.UnturnedBarricadeBuildable.html": {
    "href": "api/OpenMod.Unturned.Building.UnturnedBarricadeBuildable.html",
    "title": "Class UnturnedBarricadeBuildable | OpenMod Docs",
    "keywords": "Class UnturnedBarricadeBuildable Inheritance System.Object UnturnedBuildable UnturnedBarricadeBuildable Implements IBuildable IHasOwnership IGameObject IDamageSource Inherited Members UnturnedBuildable.Asset UnturnedBuildable.Transform UnturnedBuildable.State UnturnedBuildable.Ownership UnturnedBuildable.BuildableInstanceId Namespace : OpenMod.Unturned.Building Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBarricadeBuildable : UnturnedBuildable, IBuildable, IHasOwnership, IGameObject, IDamageSource Constructors | Improve this Doc View Source UnturnedBarricadeBuildable(BarricadeData, BarricadeDrop) Declaration public UnturnedBarricadeBuildable(BarricadeData data, BarricadeDrop drop) Parameters Type Name Description BarricadeData data BarricadeDrop drop | Improve this Doc View Source UnturnedBarricadeBuildable(BarricadeDrop) Declaration public UnturnedBarricadeBuildable(BarricadeDrop drop) Parameters Type Name Description BarricadeDrop drop Properties | Improve this Doc View Source BarricadeData Declaration public BarricadeData BarricadeData { get; } Property Value Type Description BarricadeData | Improve this Doc View Source BarricadeDrop Declaration public BarricadeDrop BarricadeDrop { get; } Property Value Type Description BarricadeDrop | Improve this Doc View Source DamageSourceName Declaration public string DamageSourceName { get; } Property Value Type Description System.String | Improve this Doc View Source Interactable Declaration public Interactable Interactable { get; } Property Value Type Description Interactable Methods | Improve this Doc View Source DestroyAsync() Declaration public override Task DestroyAsync() Returns Type Description Task Overrides UnturnedBuildable.DestroyAsync() Implements IBuildable IHasOwnership IGameObject IDamageSource Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.UnturnedBuildable.html": {
    "href": "api/OpenMod.Unturned.Building.UnturnedBuildable.html",
    "title": "Class UnturnedBuildable | OpenMod Docs",
    "keywords": "Class UnturnedBuildable Inheritance System.Object UnturnedBuildable UnturnedBarricadeBuildable UnturnedStructureBuildable Implements IBuildable IHasOwnership IGameObject Namespace : OpenMod.Unturned.Building Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedBuildable : object, IBuildable, IHasOwnership, IGameObject Constructors | Improve this Doc View Source UnturnedBuildable(IBuildableAsset, IWorldTransform, IBuildableState, IOwnership, String) Declaration protected UnturnedBuildable(IBuildableAsset asset, IWorldTransform transform, IBuildableState state, IOwnership ownership, string buildableInstanceId) Parameters Type Name Description IBuildableAsset asset IWorldTransform transform IBuildableState state IOwnership ownership System.String buildableInstanceId Properties | Improve this Doc View Source Asset Declaration public IBuildableAsset Asset { get; } Property Value Type Description IBuildableAsset | Improve this Doc View Source BuildableInstanceId Declaration public string BuildableInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source Ownership Declaration public IOwnership Ownership { get; } Property Value Type Description IOwnership | Improve this Doc View Source State Declaration public IBuildableState State { get; } Property Value Type Description IBuildableState | Improve this Doc View Source Transform Declaration public IWorldTransform Transform { get; } Property Value Type Description IWorldTransform Methods | Improve this Doc View Source DestroyAsync() Declaration public abstract Task DestroyAsync() Returns Type Description Task Implements IBuildable IHasOwnership IGameObject Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.UnturnedBuildableAsset.html": {
    "href": "api/OpenMod.Unturned.Building.UnturnedBuildableAsset.html",
    "title": "Class UnturnedBuildableAsset | OpenMod Docs",
    "keywords": "Class UnturnedBuildableAsset Inheritance System.Object UnturnedBuildableAsset Implements IBuildableAsset Namespace : OpenMod.Unturned.Building Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableAsset : object, IBuildableAsset Constructors | Improve this Doc View Source UnturnedBuildableAsset(Asset) Declaration protected UnturnedBuildableAsset(Asset asset) Parameters Type Name Description Asset asset | Improve this Doc View Source UnturnedBuildableAsset(ItemBarricadeAsset) Declaration public UnturnedBuildableAsset(ItemBarricadeAsset barricadeAsset) Parameters Type Name Description ItemBarricadeAsset barricadeAsset | Improve this Doc View Source UnturnedBuildableAsset(ItemPlaceableAsset) Declaration public UnturnedBuildableAsset(ItemPlaceableAsset barricadeAsset) Parameters Type Name Description ItemPlaceableAsset barricadeAsset | Improve this Doc View Source UnturnedBuildableAsset(ItemStructureAsset) Declaration public UnturnedBuildableAsset(ItemStructureAsset structureAsset) Parameters Type Name Description ItemStructureAsset structureAsset Properties | Improve this Doc View Source Asset Declaration public Asset Asset { get; } Property Value Type Description Asset | Improve this Doc View Source BuildableAssetId Declaration public string BuildableAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source BuildableType Declaration public string BuildableType { get; } Property Value Type Description System.String Implements IBuildableAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.UnturnedBuildableDirectory.html": {
    "href": "api/OpenMod.Unturned.Building.UnturnedBuildableDirectory.html",
    "title": "Class UnturnedBuildableDirectory | OpenMod Docs",
    "keywords": "Class UnturnedBuildableDirectory Inheritance System.Object UnturnedBuildableDirectory Implements IBuildableDirectory Namespace : OpenMod.Unturned.Building Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableDirectory : object, IBuildableDirectory Methods | Improve this Doc View Source GetBuildableAssetsAsync() Declaration public Task<IReadOnlyCollection<IBuildableAsset>> GetBuildableAssetsAsync() Returns Type Description Task < IReadOnlyCollection < IBuildableAsset >> | Improve this Doc View Source GetBuildablesAsync() Declaration public Task<IReadOnlyCollection<IBuildable>> GetBuildablesAsync() Returns Type Description Task < IReadOnlyCollection < IBuildable >> Implements IBuildableDirectory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.UnturnedBuildableOwnership.html": {
    "href": "api/OpenMod.Unturned.Building.UnturnedBuildableOwnership.html",
    "title": "Class UnturnedBuildableOwnership | OpenMod Docs",
    "keywords": "Class UnturnedBuildableOwnership Inheritance System.Object UnturnedBuildableOwnership Implements IOwnership Namespace : OpenMod.Unturned.Building Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableOwnership : object, IOwnership Constructors | Improve this Doc View Source UnturnedBuildableOwnership(BarricadeData) Declaration public UnturnedBuildableOwnership(BarricadeData barricade) Parameters Type Name Description BarricadeData barricade | Improve this Doc View Source UnturnedBuildableOwnership(StructureData) Declaration public UnturnedBuildableOwnership(StructureData structure) Parameters Type Name Description StructureData structure Properties | Improve this Doc View Source HasOwner Declaration public bool HasOwner { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OwnerGroupId Declaration public string OwnerGroupId { get; } Property Value Type Description System.String | Improve this Doc View Source OwnerPlayerId Declaration public string OwnerPlayerId { get; } Property Value Type Description System.String Methods | Improve this Doc View Source HasAccessAsync(IPlayer) Declaration public Task<bool> HasAccessAsync(IPlayer player) Parameters Type Name Description IPlayer player Returns Type Description Task < System.Boolean > Implements IOwnership Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.UnturnedBuildableState.html": {
    "href": "api/OpenMod.Unturned.Building.UnturnedBuildableState.html",
    "title": "Class UnturnedBuildableState | OpenMod Docs",
    "keywords": "Class UnturnedBuildableState Inheritance System.Object UnturnedBuildableState Implements IBuildableState Namespace : OpenMod.Unturned.Building Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuildableState : object, IBuildableState Constructors | Improve this Doc View Source UnturnedBuildableState(Barricade) Declaration public UnturnedBuildableState(Barricade barricade) Parameters Type Name Description Barricade barricade | Improve this Doc View Source UnturnedBuildableState(Structure) Declaration public UnturnedBuildableState(Structure structure) Parameters Type Name Description Structure structure Properties | Improve this Doc View Source Health Declaration public double Health { get; } Property Value Type Description System.Double | Improve this Doc View Source StateData Declaration public byte[] StateData { get; } Property Value Type Description System.Byte [] Implements IBuildableState Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Building.UnturnedStructureBuildable.html": {
    "href": "api/OpenMod.Unturned.Building.UnturnedStructureBuildable.html",
    "title": "Class UnturnedStructureBuildable | OpenMod Docs",
    "keywords": "Class UnturnedStructureBuildable Inheritance System.Object UnturnedBuildable UnturnedStructureBuildable Implements IBuildable IHasOwnership IGameObject Inherited Members UnturnedBuildable.Asset UnturnedBuildable.Transform UnturnedBuildable.State UnturnedBuildable.Ownership UnturnedBuildable.BuildableInstanceId Namespace : OpenMod.Unturned.Building Assembly : OpenMod.Unturned.dll Syntax public class UnturnedStructureBuildable : UnturnedBuildable, IBuildable, IHasOwnership, IGameObject Constructors | Improve this Doc View Source UnturnedStructureBuildable(StructureData, StructureDrop) Declaration public UnturnedStructureBuildable(StructureData data, StructureDrop drop) Parameters Type Name Description StructureData data StructureDrop drop | Improve this Doc View Source UnturnedStructureBuildable(StructureDrop) Declaration public UnturnedStructureBuildable(StructureDrop drop) Parameters Type Name Description StructureDrop drop Properties | Improve this Doc View Source StructureData Declaration public StructureData StructureData { get; } Property Value Type Description StructureData | Improve this Doc View Source StructureDrop Declaration public StructureDrop StructureDrop { get; } Property Value Type Description StructureDrop Methods | Improve this Doc View Source DestroyAsync() Declaration public override Task DestroyAsync() Returns Type Description Task Overrides UnturnedBuildable.DestroyAsync() Implements IBuildable IHasOwnership IGameObject Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Commands.CommandOpenModUpgrade.html": {
    "href": "api/OpenMod.Unturned.Commands.CommandOpenModUpgrade.html",
    "title": "Class CommandOpenModUpgrade | OpenMod Docs",
    "keywords": "Class CommandOpenModUpgrade Inheritance System.Object CommandOpenModUpgrade Namespace : OpenMod.Unturned.Commands Assembly : OpenMod.Unturned.dll Syntax public class CommandOpenModUpgrade : Core.Commands.Command Constructors | Improve this Doc View Source CommandOpenModUpgrade(IServiceProvider, IRuntime, NuGetPackageManager, IHostInformation, ILogger<CommandOpenModUpgrade>) Declaration public CommandOpenModUpgrade(IServiceProvider serviceProvider, IRuntime runtime, NuGetPackageManager packageManager, IHostInformation hostInformation, ILogger<CommandOpenModUpgrade> logger) Parameters Type Name Description IServiceProvider serviceProvider IRuntime runtime NuGetPackageManager packageManager IHostInformation hostInformation ILogger < CommandOpenModUpgrade > logger Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Commands.html": {
    "href": "api/OpenMod.Unturned.Commands.html",
    "title": "Namespace OpenMod.Unturned.Commands | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Commands Classes CommandOpenModUpgrade UnturnedBuiltinCommand UnturnedCommand UnturnedCommandRegistration UnturnedCommandSource"
  },
  "api/OpenMod.Unturned.Commands.UnturnedBuiltinCommand.html": {
    "href": "api/OpenMod.Unturned.Commands.UnturnedBuiltinCommand.html",
    "title": "Class UnturnedBuiltinCommand | OpenMod Docs",
    "keywords": "Class UnturnedBuiltinCommand Inheritance System.Object UnityEngineCommand UnturnedCommand UnturnedBuiltinCommand Inherited Members UnityEngineCommand.ExecuteAsync() Namespace : OpenMod.Unturned.Commands Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBuiltinCommand : UnturnedCommand Constructors | Improve this Doc View Source UnturnedBuiltinCommand(IServiceProvider, UnturnedCommandRegistration) Declaration public UnturnedBuiltinCommand(IServiceProvider serviceProvider, UnturnedCommandRegistration commandRegistration) Parameters Type Name Description IServiceProvider serviceProvider UnturnedCommandRegistration commandRegistration Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override UniTask OnExecuteAsync() Returns Type Description UniTask Overrides UnityEngineCommand.OnExecuteAsync() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Commands.UnturnedCommand.html": {
    "href": "api/OpenMod.Unturned.Commands.UnturnedCommand.html",
    "title": "Class UnturnedCommand | OpenMod Docs",
    "keywords": "Class UnturnedCommand Inheritance System.Object UnityEngineCommand UnturnedCommand UnturnedBuiltinCommand Inherited Members UnityEngineCommand.ExecuteAsync() UnityEngineCommand.OnExecuteAsync() Namespace : OpenMod.Unturned.Commands Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedCommand : UnityEngineCommand Constructors | Improve this Doc View Source UnturnedCommand(IServiceProvider) Declaration protected UnturnedCommand(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Commands.UnturnedCommandRegistration.html": {
    "href": "api/OpenMod.Unturned.Commands.UnturnedCommandRegistration.html",
    "title": "Class UnturnedCommandRegistration | OpenMod Docs",
    "keywords": "Class UnturnedCommandRegistration Inheritance System.Object UnturnedCommandRegistration Namespace : OpenMod.Unturned.Commands Assembly : OpenMod.Unturned.dll Syntax public class UnturnedCommandRegistration : ICommandRegistration Constructors | Improve this Doc View Source UnturnedCommandRegistration(IOpenModComponent, Command) Declaration public UnturnedCommandRegistration(IOpenModComponent component, Command cmd) Parameters Type Name Description IOpenModComponent component Command cmd Properties | Improve this Doc View Source Aliases Declaration public IReadOnlyCollection<string> Aliases { get; } Property Value Type Description IReadOnlyCollection < System.String > | Improve this Doc View Source Cmd Declaration public Command Cmd { get; } Property Value Type Description Command | Improve this Doc View Source Component Declaration public IOpenModComponent Component { get; } Property Value Type Description IOpenModComponent | Improve this Doc View Source Description Declaration public string Description { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source ParentId Declaration public string? ParentId { get; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source PermissionRegistrations Declaration public IReadOnlyCollection<IPermissionRegistration> PermissionRegistrations { get; } Property Value Type Description IReadOnlyCollection < IPermissionRegistration > | Improve this Doc View Source Priority Declaration public Priority Priority { get; } Property Value Type Description Priority | Improve this Doc View Source Syntax Declaration public string Syntax { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Instantiate(IServiceProvider) Declaration public ICommand Instantiate(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Returns Type Description ICommand | Improve this Doc View Source SupportsActor(ICommandActor) Declaration public bool SupportsActor(ICommandActor actor) Parameters Type Name Description ICommandActor actor Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Commands.UnturnedCommandSource.html": {
    "href": "api/OpenMod.Unturned.Commands.UnturnedCommandSource.html",
    "title": "Class UnturnedCommandSource | OpenMod Docs",
    "keywords": "Class UnturnedCommandSource Inheritance System.Object UnturnedCommandSource Namespace : OpenMod.Unturned.Commands Assembly : OpenMod.Unturned.dll Syntax public class UnturnedCommandSource : ICommandSource Constructors | Improve this Doc View Source UnturnedCommandSource(IOpenModHost) Declaration public UnturnedCommandSource(IOpenModHost host) Parameters Type Name Description IOpenModHost host Methods | Improve this Doc View Source GetCommandsAsync() Declaration public Task<IReadOnlyCollection<ICommandRegistration>> GetCommandsAsync() Returns Type Description Task < IReadOnlyCollection < ICommandRegistration >> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Configuration.html": {
    "href": "api/OpenMod.Unturned.Configuration.html",
    "title": "Namespace OpenMod.Unturned.Configuration | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Configuration Classes OpenModUnturnedConfiguration Interfaces IOpenModUnturnedConfiguration"
  },
  "api/OpenMod.Unturned.Configuration.IOpenModUnturnedConfiguration.html": {
    "href": "api/OpenMod.Unturned.Configuration.IOpenModUnturnedConfiguration.html",
    "title": "Interface IOpenModUnturnedConfiguration | OpenMod Docs",
    "keywords": "Interface IOpenModUnturnedConfiguration Namespace : OpenMod.Unturned.Configuration Assembly : OpenMod.Unturned.dll Syntax public interface IOpenModUnturnedConfiguration Properties | Improve this Doc View Source Configuration Declaration IConfiguration Configuration { get; } Property Value Type Description IConfiguration Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Configuration.OpenModUnturnedConfiguration.html": {
    "href": "api/OpenMod.Unturned.Configuration.OpenModUnturnedConfiguration.html",
    "title": "Class OpenModUnturnedConfiguration | OpenMod Docs",
    "keywords": "Class OpenModUnturnedConfiguration Inheritance System.Object OpenModUnturnedConfiguration Implements IOpenModUnturnedConfiguration Namespace : OpenMod.Unturned.Configuration Assembly : OpenMod.Unturned.dll Syntax public class OpenModUnturnedConfiguration : object, IOpenModUnturnedConfiguration Constructors | Improve this Doc View Source OpenModUnturnedConfiguration(HostBuilderContext) Declaration public OpenModUnturnedConfiguration(HostBuilderContext context) Parameters Type Name Description HostBuilderContext context Properties | Improve this Doc View Source Configuration Declaration public IConfiguration Configuration { get; } Property Value Type Description IConfiguration Implements IOpenModUnturnedConfiguration Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Console.html": {
    "href": "api/OpenMod.Unturned.Console.html",
    "title": "Namespace OpenMod.Unturned.Console | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Console Classes UnturnedConsoleActorAccessor"
  },
  "api/OpenMod.Unturned.Console.UnturnedConsoleActorAccessor.html": {
    "href": "api/OpenMod.Unturned.Console.UnturnedConsoleActorAccessor.html",
    "title": "Class UnturnedConsoleActorAccessor | OpenMod Docs",
    "keywords": "Class UnturnedConsoleActorAccessor Inheritance System.Object UnturnedConsoleActorAccessor Namespace : OpenMod.Unturned.Console Assembly : OpenMod.Unturned.dll Syntax public class UnturnedConsoleActorAccessor : IConsoleActorAccessor Constructors | Improve this Doc View Source UnturnedConsoleActorAccessor(IServiceProvider) Declaration public UnturnedConsoleActorAccessor(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Properties | Improve this Doc View Source Actor Declaration public ICommandActor Actor { get; } Property Value Type Description ICommandActor Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Effects.html": {
    "href": "api/OpenMod.Unturned.Effects.html",
    "title": "Namespace OpenMod.Unturned.Effects | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Effects Classes UnturnedUIEffectsKeysProvider Structs UnturnedUIEffectKey Effect key wrapper struct that is used in OpenMod.Unturned effect APIs Interfaces IUnturnedUIEffectsKeysProvider Service that generates UI effect keys for components and prevents possible key conflicts."
  },
  "api/OpenMod.Unturned.Effects.IUnturnedUIEffectsKeysProvider.html": {
    "href": "api/OpenMod.Unturned.Effects.IUnturnedUIEffectsKeysProvider.html",
    "title": "Interface IUnturnedUIEffectsKeysProvider | OpenMod Docs",
    "keywords": "Interface IUnturnedUIEffectsKeysProvider Service that generates UI effect keys for components and prevents possible key conflicts. Namespace : OpenMod.Unturned.Effects Assembly : OpenMod.Unturned.dll Syntax public interface IUnturnedUIEffectsKeysProvider Methods | Improve this Doc View Source BindKey(IOpenModComponent) Generates a unique UI key for the component. Declaration UnturnedUIEffectKey BindKey(IOpenModComponent component) Parameters Type Name Description IOpenModComponent component component that requests the key Returns Type Description UnturnedUIEffectKey unique UI effect key, or Invalid if no keys are available | Improve this Doc View Source BindKeys(IOpenModComponent, Int32) Generates a set of unique UI keys for the component. Declaration IEnumerable<UnturnedUIEffectKey> BindKeys(IOpenModComponent component, int amount) Parameters Type Name Description IOpenModComponent component component that requests the keys System.Int32 amount amount of keys generated Returns Type Description IEnumerable < UnturnedUIEffectKey > set of unique UI effect keys, or Invalid if no keys available | Improve this Doc View Source ReleaseAllKeys(IOpenModComponent) Manually releases all component bound keys to the pool of available keys. Declaration void ReleaseAllKeys(IOpenModComponent component) Parameters Type Name Description IOpenModComponent component component that requests the key release | Improve this Doc View Source ReleaseKey(IOpenModComponent, UnturnedUIEffectKey) Manually releases a component bound key to the pool of available keys. Declaration bool ReleaseKey(IOpenModComponent component, UnturnedUIEffectKey key) Parameters Type Name Description IOpenModComponent component component that requests the key release UnturnedUIEffectKey key key to be released Returns Type Description System.Boolean true if the key was released, false if the key wasn't bound Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Effects.UnturnedUIEffectKey.html": {
    "href": "api/OpenMod.Unturned.Effects.UnturnedUIEffectKey.html",
    "title": "Struct UnturnedUIEffectKey | OpenMod Docs",
    "keywords": "Struct UnturnedUIEffectKey Effect key wrapper struct that is used in OpenMod.Unturned effect APIs Implements IEquatable < UnturnedUIEffectKey > IComparable < UnturnedUIEffectKey > Namespace : OpenMod.Unturned.Effects Assembly : OpenMod.Unturned.dll Syntax public struct UnturnedUIEffectKey : IEquatable<UnturnedUIEffectKey>, IComparable<UnturnedUIEffectKey> Constructors | Improve this Doc View Source UnturnedUIEffectKey(Int16) Declaration public UnturnedUIEffectKey(short value) Parameters Type Name Description System.Int16 value Fields | Improve this Doc View Source Invalid Invalid effect key with value of -1. Sending -1 to client will launch effect as one shot and not register the key. Declaration public static readonly UnturnedUIEffectKey Invalid Field Value Type Description UnturnedUIEffectKey | Improve this Doc View Source Value The value of the effect key Declaration public readonly short Value Field Value Type Description System.Int16 Properties | Improve this Doc View Source IsValid Checks if this effect key is valid Declaration public bool IsValid { get; } Property Value Type Description System.Boolean Methods | Improve this Doc View Source CompareTo(UnturnedUIEffectKey) Declaration public int CompareTo(UnturnedUIEffectKey other) Parameters Type Name Description UnturnedUIEffectKey other Returns Type Description System.Int32 | Improve this Doc View Source Equals(UnturnedUIEffectKey) Declaration public bool Equals(UnturnedUIEffectKey other) Parameters Type Name Description UnturnedUIEffectKey other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Nullable<Object>) Declaration public override bool Equals(object? obj) Parameters Type Name Description System.Nullable < System.Object > obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Operators | Improve this Doc View Source Equality(UnturnedUIEffectKey, UnturnedUIEffectKey) Declaration public static bool operator ==(UnturnedUIEffectKey left, UnturnedUIEffectKey right) Parameters Type Name Description UnturnedUIEffectKey left UnturnedUIEffectKey right Returns Type Description System.Boolean | Improve this Doc View Source Explicit(UnturnedUIEffectKey to Int16) Declaration public static explicit operator short (UnturnedUIEffectKey key) Parameters Type Name Description UnturnedUIEffectKey key Returns Type Description System.Int16 | Improve this Doc View Source Explicit(Int16 to UnturnedUIEffectKey) Declaration public static explicit operator UnturnedUIEffectKey(short value) Parameters Type Name Description System.Int16 value Returns Type Description UnturnedUIEffectKey | Improve this Doc View Source Inequality(UnturnedUIEffectKey, UnturnedUIEffectKey) Declaration public static bool operator !=(UnturnedUIEffectKey left, UnturnedUIEffectKey right) Parameters Type Name Description UnturnedUIEffectKey left UnturnedUIEffectKey right Returns Type Description System.Boolean Implements IEquatable<> IComparable<>"
  },
  "api/OpenMod.Unturned.Effects.UnturnedUIEffectsKeysProvider.html": {
    "href": "api/OpenMod.Unturned.Effects.UnturnedUIEffectsKeysProvider.html",
    "title": "Class UnturnedUIEffectsKeysProvider | OpenMod Docs",
    "keywords": "Class UnturnedUIEffectsKeysProvider Inheritance System.Object UnturnedUIEffectsKeysProvider Implements IUnturnedUIEffectsKeysProvider Namespace : OpenMod.Unturned.Effects Assembly : OpenMod.Unturned.dll Syntax public class UnturnedUIEffectsKeysProvider : object, IUnturnedUIEffectsKeysProvider Constructors | Improve this Doc View Source UnturnedUIEffectsKeysProvider(ILogger<UnturnedUIEffectsKeysProvider>) Declaration public UnturnedUIEffectsKeysProvider(ILogger<UnturnedUIEffectsKeysProvider> logger) Parameters Type Name Description ILogger < UnturnedUIEffectsKeysProvider > logger Methods | Improve this Doc View Source BindKey(IOpenModComponent) Declaration public UnturnedUIEffectKey BindKey(IOpenModComponent component) Parameters Type Name Description IOpenModComponent component Returns Type Description UnturnedUIEffectKey | Improve this Doc View Source BindKeys(IOpenModComponent, Int32) Declaration public IEnumerable<UnturnedUIEffectKey> BindKeys(IOpenModComponent component, int amount) Parameters Type Name Description IOpenModComponent component System.Int32 amount Returns Type Description IEnumerable < UnturnedUIEffectKey > | Improve this Doc View Source ReleaseAllKeys(IOpenModComponent) Declaration public void ReleaseAllKeys(IOpenModComponent component) Parameters Type Name Description IOpenModComponent component | Improve this Doc View Source ReleaseKey(IOpenModComponent, UnturnedUIEffectKey) Declaration public bool ReleaseKey(IOpenModComponent component, UnturnedUIEffectKey key) Parameters Type Name Description IOpenModComponent component UnturnedUIEffectKey key Returns Type Description System.Boolean Implements IUnturnedUIEffectsKeysProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Entities.html": {
    "href": "api/OpenMod.Unturned.Entities.html",
    "title": "Namespace OpenMod.Unturned.Entities | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Entities Classes UnturnedEntityDirectory UnturnedEntitySpawner UnturnedEntityTypes"
  },
  "api/OpenMod.Unturned.Entities.UnturnedEntityDirectory.html": {
    "href": "api/OpenMod.Unturned.Entities.UnturnedEntityDirectory.html",
    "title": "Class UnturnedEntityDirectory | OpenMod Docs",
    "keywords": "Class UnturnedEntityDirectory Inheritance System.Object UnturnedEntityDirectory Implements IEntityDirectory Namespace : OpenMod.Unturned.Entities Assembly : OpenMod.Unturned.dll Syntax public class UnturnedEntityDirectory : object, IEntityDirectory Methods | Improve this Doc View Source GetEntitiesAsync() Declaration public Task<IReadOnlyCollection<IEntity>> GetEntitiesAsync() Returns Type Description Task < IReadOnlyCollection < IEntity >> | Improve this Doc View Source GetEntityAssetsAsync() Declaration public Task<IReadOnlyCollection<IEntityAsset>> GetEntityAssetsAsync() Returns Type Description Task < IReadOnlyCollection < IEntityAsset >> Implements IEntityDirectory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Entities.UnturnedEntitySpawner.html": {
    "href": "api/OpenMod.Unturned.Entities.UnturnedEntitySpawner.html",
    "title": "Class UnturnedEntitySpawner | OpenMod Docs",
    "keywords": "Class UnturnedEntitySpawner Inheritance System.Object UnturnedEntitySpawner Implements IEntitySpawner Namespace : OpenMod.Unturned.Entities Assembly : OpenMod.Unturned.dll Syntax public class UnturnedEntitySpawner : object, IEntitySpawner Methods | Improve this Doc View Source SpawnEntityAsync(Vector3, String, IEntityState) Declaration public Task<IEntity> SpawnEntityAsync(Vector3 position, string entityId, IEntityState state = null) Parameters Type Name Description Vector3 position System.String entityId IEntityState state Returns Type Description Task < IEntity > Implements IEntitySpawner Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Entities.UnturnedEntityTypes.html": {
    "href": "api/OpenMod.Unturned.Entities.UnturnedEntityTypes.html",
    "title": "Class UnturnedEntityTypes | OpenMod Docs",
    "keywords": "Class UnturnedEntityTypes Inheritance System.Object UnturnedEntityTypes Namespace : OpenMod.Unturned.Entities Assembly : OpenMod.Unturned.dll Syntax public static class UnturnedEntityTypes : object Fields | Improve this Doc View Source Animal Declaration public const string Animal = null Field Value Type Description System.String | Improve this Doc View Source Player Declaration public const string Player = null Field Value Type Description System.String | Improve this Doc View Source Zombie Declaration public const string Zombie = null Field Value Type Description System.String"
  },
  "api/OpenMod.Unturned.Environment.Events.html": {
    "href": "api/OpenMod.Unturned.Environment.Events.html",
    "title": "Namespace OpenMod.Unturned.Environment.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Environment.Events Classes UnturnedDayNightUpdatedEvent The event that is triggered when it has become day or night. UnturnedWeatherUpdatedEvent The event that is triggered when the weather changes."
  },
  "api/OpenMod.Unturned.Environment.Events.UnturnedDayNightUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Environment.Events.UnturnedDayNightUpdatedEvent.html",
    "title": "Class UnturnedDayNightUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedDayNightUpdatedEvent The event that is triggered when it has become day or night. Inheritance System.Object UnturnedDayNightUpdatedEvent Namespace : OpenMod.Unturned.Environment.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedDayNightUpdatedEvent : Event Constructors | Improve this Doc View Source UnturnedDayNightUpdatedEvent(WorldTime, Boolean) Declaration public UnturnedDayNightUpdatedEvent(WorldTime worldTime, bool isFullMoon) Parameters Type Name Description WorldTime worldTime System.Boolean isFullMoon Properties | Improve this Doc View Source IsFullMoon Checks if its full moon. Declaration public bool IsFullMoon { get; } Property Value Type Description System.Boolean | Improve this Doc View Source WorldTime Gets the current world time. Declaration public WorldTime WorldTime { get; } Property Value Type Description WorldTime Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Environment.Events.UnturnedWeatherUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Environment.Events.UnturnedWeatherUpdatedEvent.html",
    "title": "Class UnturnedWeatherUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedWeatherUpdatedEvent The event that is triggered when the weather changes. Inheritance System.Object UnturnedWeatherUpdatedEvent Namespace : OpenMod.Unturned.Environment.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedWeatherUpdatedEvent : Event Constructors | Improve this Doc View Source UnturnedWeatherUpdatedEvent(ELightingRain, ELightingSnow) Declaration public UnturnedWeatherUpdatedEvent(ELightingRain rain, ELightingSnow snow) Parameters Type Name Description ELightingRain rain ELightingSnow snow Properties | Improve this Doc View Source Rain Gets the rain status. Declaration public ELightingRain Rain { get; } Property Value Type Description ELightingRain | Improve this Doc View Source Snow Gets the snow status. Declaration public ELightingSnow Snow { get; } Property Value Type Description ELightingSnow Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Environment.html": {
    "href": "api/OpenMod.Unturned.Environment.html",
    "title": "Namespace OpenMod.Unturned.Environment | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Environment Enums WorldTime"
  },
  "api/OpenMod.Unturned.Environment.WorldTime.html": {
    "href": "api/OpenMod.Unturned.Environment.WorldTime.html",
    "title": "Enum WorldTime | OpenMod Docs",
    "keywords": "Enum WorldTime Namespace : OpenMod.Unturned.Environment Assembly : OpenMod.Unturned.dll Syntax public enum WorldTime : int Fields Name Description Day Night"
  },
  "api/OpenMod.Unturned.Events.html": {
    "href": "api/OpenMod.Unturned.Events.html",
    "title": "Namespace OpenMod.Unturned.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Events Classes UnturnedPlayerEvent"
  },
  "api/OpenMod.Unturned.Events.UnturnedPlayerEvent.html": {
    "href": "api/OpenMod.Unturned.Events.UnturnedPlayerEvent.html",
    "title": "Class UnturnedPlayerEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerLeanUpdatedEvent UnturnedPlayerBanningEvent UnturnedBattlEyeKickedEvent UnturnedPlayerChattingEvent UnturnedPlayerDisconnectedEvent UnturnedPlayerCraftingEvent UnturnedPlayerItemEquippedEvent UnturnedPlayerItemEquippingEvent UnturnedPlayerItemUnequippedEvent UnturnedPlayerItemUnequippingEvent UnturnedPlayerPunchEvent UnturnedPlayerPluginKeyStateChangedEvent UnturnedPlayerBedClaimingEvent UnturnedPlayerClosedStorageEvent UnturnedPlayerDroppedItemEvent UnturnedPlayerInventoryResizedEvent UnturnedPlayerInventoryUpdatedEvent UnturnedPlayerItemAddedEvent UnturnedPlayerItemRemovedEvent UnturnedPlayerItemUpdatedEvent UnturnedPlayerOpenedStorageEvent UnturnedPlayerTakingItemEvent UnturnedPlayerDamagedEvent UnturnedPlayerDamagingEvent UnturnedPlayerDeathEvent UnturnedPlayerFallDamagingEvent UnturnedPlayerSpawnedEvent UnturnedPlayerGestureUpdatedEvent UnturnedPlayerJumpedEvent UnturnedPlayerSafetyUpdatedEvent UnturnedPlayerStanceUpdatedEvent UnturnedPlayerTeleportingEvent UnturnedPlayerFlagChangedEvent UnturnedPlayerGroupIdChangedEvent UnturnedPlayerGroupOrRankChangedEvent UnturnedPlayerGroupRankChangedEvent UnturnedPlayerJoiningGroupEvent UnturnedPlayerLeavingGroupEvent UnturnedPlayerExperienceUpdatedEvent UnturnedPlayerReputationUpdatedEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerUIEvent UnturnedPlayerPerformingAidEvent UnturnedPlayerRelayingVoiceEvent UnturnedPlayerTalkingUpdatedEvent UnturnedPlayerEnteredVehicleEvent UnturnedPlayerEnteringVehicleEvent UnturnedPlayerExitedVehicleEvent UnturnedPlayerExitingVehicleEvent UnturnedPlayerSwappedSeatEvent UnturnedPlayerSwappingSeatEvent Implements IPlayerEvent IEvent Namespace : OpenMod.Unturned.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedPlayerEvent : Event, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerEvent(UnturnedPlayer) Declaration protected UnturnedPlayerEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Properties | Improve this Doc View Source Player Declaration public UnturnedPlayer Player { get; } Property Value Type Description UnturnedPlayer Explicit Interface Implementations | Improve this Doc View Source IPlayerEvent.Player Declaration IPlayer IPlayerEvent.Player { get; } Returns Type Description IPlayer Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.html": {
    "href": "api/OpenMod.Unturned.html",
    "title": "Namespace OpenMod.Unturned | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned Classes OpenModUnturnedHost ServiceConfigurator UnturnedHostInformation"
  },
  "api/OpenMod.Unturned.Items.html": {
    "href": "api/OpenMod.Unturned.Items.html",
    "title": "Namespace OpenMod.Unturned.Items | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Items Classes UnturnedClothingItem UnturnedInventoryItem UnturnedItem UnturnedItemAsset UnturnedItemAssetCommandParameterResolveProvider UnturnedItemDirectory UnturnedItemDrop UnturnedItemSpawner UnturnedItemState UnturnedPlayerInventory UnturnedPlayerInventoryPage Delegates UnturnedItem.DestroyItem"
  },
  "api/OpenMod.Unturned.Items.UnturnedClothingItem.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedClothingItem.html",
    "title": "Class UnturnedClothingItem | OpenMod Docs",
    "keywords": "Class UnturnedClothingItem Inheritance System.Object UnturnedClothingItem Implements IItemInstance Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedClothingItem : object, IItemInstance Constructors | Improve this Doc View Source UnturnedClothingItem(Item, UnturnedPlayer, ClothingType) Declaration public UnturnedClothingItem(Item item, UnturnedPlayer player, ClothingType clothingType) Parameters Type Name Description Item item UnturnedPlayer player ClothingType clothingType | Improve this Doc View Source UnturnedClothingItem(Item, PlayerClothing, ClothingType) Declaration public UnturnedClothingItem(Item item, PlayerClothing playerClothing, ClothingType clothingType) Parameters Type Name Description Item item PlayerClothing playerClothing ClothingType clothingType Properties | Improve this Doc View Source ClothingType Declaration public ClothingType ClothingType { get; } Property Value Type Description ClothingType | Improve this Doc View Source Item Declaration public UnturnedItem Item { get; } Property Value Type Description UnturnedItem Explicit Interface Implementations | Improve this Doc View Source IItemInstance.Item Declaration IItem IItemInstance.Item { get; } Returns Type Description IItem Implements IItemInstance Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedInventoryItem.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedInventoryItem.html",
    "title": "Class UnturnedInventoryItem | OpenMod Docs",
    "keywords": "Class UnturnedInventoryItem Inheritance System.Object UnturnedInventoryItem Implements IInventoryItem IItemInstance Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedInventoryItem : object, IInventoryItem, IItemInstance Constructors | Improve this Doc View Source UnturnedInventoryItem(UnturnedPlayerInventory, ItemJar) Declaration public UnturnedInventoryItem(UnturnedPlayerInventory inventory, ItemJar itemJar) Parameters Type Name Description UnturnedPlayerInventory inventory ItemJar itemJar Properties | Improve this Doc View Source Inventory Declaration public UnturnedPlayerInventory Inventory { get; } Property Value Type Description UnturnedPlayerInventory | Improve this Doc View Source Item Declaration public UnturnedItem Item { get; } Property Value Type Description UnturnedItem | Improve this Doc View Source ItemJar Declaration public ItemJar ItemJar { get; } Property Value Type Description ItemJar Methods | Improve this Doc View Source DestroyAsync() Declaration public Task<bool> DestroyAsync() Returns Type Description Task < System.Boolean > | Improve this Doc View Source DropAsync() Declaration public Task DropAsync() Returns Type Description Task Explicit Interface Implementations | Improve this Doc View Source IItemInstance.Item Declaration IItem IItemInstance.Item { get; } Returns Type Description IItem Implements IInventoryItem IItemInstance Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedItem.DestroyItem.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedItem.DestroyItem.html",
    "title": "Delegate UnturnedItem.DestroyItem | OpenMod Docs",
    "keywords": "Delegate UnturnedItem.DestroyItem Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public delegate Task<bool> DestroyItem(); Returns Type Description Task < System.Boolean > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedItem.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedItem.html",
    "title": "Class UnturnedItem | OpenMod Docs",
    "keywords": "Class UnturnedItem Inheritance System.Object UnturnedItem Implements IItem Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedItem : object, IItem Constructors | Improve this Doc View Source UnturnedItem(Item, UnturnedItem.DestroyItem) Declaration public UnturnedItem(Item item, UnturnedItem.DestroyItem destroyItem) Parameters Type Name Description Item item UnturnedItem.DestroyItem destroyItem Properties | Improve this Doc View Source Asset Declaration public IItemAsset Asset { get; } Property Value Type Description IItemAsset | Improve this Doc View Source Item Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source ItemInstanceId Declaration public string ItemInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source State Declaration public IItemState State { get; } Property Value Type Description IItemState Methods | Improve this Doc View Source DestroyAsync() Declaration public Task<bool> DestroyAsync() Returns Type Description Task < System.Boolean > | Improve this Doc View Source SetItemAmountAsync(Double) Declaration public Task SetItemAmountAsync(double amount) Parameters Type Name Description System.Double amount Returns Type Description Task | Improve this Doc View Source SetItemDurabilityAsync(Double) Declaration public Task SetItemDurabilityAsync(double durability) Parameters Type Name Description System.Double durability Returns Type Description Task | Improve this Doc View Source SetItemQualityAsync(Double) Declaration public Task SetItemQualityAsync(double quality) Parameters Type Name Description System.Double quality Returns Type Description Task Implements IItem Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedItemAsset.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedItemAsset.html",
    "title": "Class UnturnedItemAsset | OpenMod Docs",
    "keywords": "Class UnturnedItemAsset Inheritance System.Object UnturnedItemAsset Implements IItemAsset Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedItemAsset : object, IItemAsset Constructors | Improve this Doc View Source UnturnedItemAsset(ItemAsset) Declaration public UnturnedItemAsset(ItemAsset itemAsset) Parameters Type Name Description ItemAsset itemAsset Properties | Improve this Doc View Source ItemAsset Declaration public ItemAsset ItemAsset { get; } Property Value Type Description ItemAsset | Improve this Doc View Source ItemAssetId Declaration public string ItemAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source ItemName Declaration public string ItemName { get; } Property Value Type Description System.String | Improve this Doc View Source ItemType Declaration public string ItemType { get; } Property Value Type Description System.String | Improve this Doc View Source MaxAmount Declaration public double? MaxAmount { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source MaxDurability Declaration public double? MaxDurability { get; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source MaxQuality Declaration public double? MaxQuality { get; } Property Value Type Description System.Nullable < System.Double > Implements IItemAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedItemAssetCommandParameterResolveProvider.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedItemAssetCommandParameterResolveProvider.html",
    "title": "Class UnturnedItemAssetCommandParameterResolveProvider | OpenMod Docs",
    "keywords": "Class UnturnedItemAssetCommandParameterResolveProvider Inheritance System.Object UnturnedItemAssetCommandParameterResolveProvider Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedItemAssetCommandParameterResolveProvider : ICommandParameterResolveProvider Constructors | Improve this Doc View Source UnturnedItemAssetCommandParameterResolveProvider(IItemDirectory) Declaration public UnturnedItemAssetCommandParameterResolveProvider(IItemDirectory itemDirectory) Parameters Type Name Description IItemDirectory itemDirectory Methods | Improve this Doc View Source ResolveAsync(Type, String) Declaration public Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source Supports(Type) Declaration public bool Supports(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedItemDirectory.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedItemDirectory.html",
    "title": "Class UnturnedItemDirectory | OpenMod Docs",
    "keywords": "Class UnturnedItemDirectory Inheritance System.Object UnturnedItemDirectory Implements IItemDirectory Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedItemDirectory : object, IItemDirectory Methods | Improve this Doc View Source GetItemAssetsAsync() Declaration public Task<IReadOnlyCollection<IItemAsset>> GetItemAssetsAsync() Returns Type Description Task < IReadOnlyCollection < IItemAsset >> | Improve this Doc View Source GetItemDropsAsync() Declaration public Task<IReadOnlyCollection<IItemDrop>> GetItemDropsAsync() Returns Type Description Task < IReadOnlyCollection < IItemDrop >> Implements IItemDirectory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedItemDrop.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedItemDrop.html",
    "title": "Class UnturnedItemDrop | OpenMod Docs",
    "keywords": "Class UnturnedItemDrop Inheritance System.Object UnturnedItemDrop Implements IItemDrop IItemInstance Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedItemDrop : object, IItemDrop, IItemInstance Constructors | Improve this Doc View Source UnturnedItemDrop(ItemData) Declaration public UnturnedItemDrop(ItemData itemData) Parameters Type Name Description ItemData itemData | Improve this Doc View Source UnturnedItemDrop(Byte, Byte, ItemData) Declaration public UnturnedItemDrop(byte regionX, byte regionY, ItemData itemData) Parameters Type Name Description System.Byte regionX System.Byte regionY ItemData itemData Properties | Improve this Doc View Source Item Declaration public IItem Item { get; } Property Value Type Description IItem | Improve this Doc View Source Position Declaration public Vector3 Position { get; } Property Value Type Description Vector3 | Improve this Doc View Source Region Declaration public ItemRegion Region { get; } Property Value Type Description ItemRegion | Improve this Doc View Source RegionX Declaration public byte RegionX { get; } Property Value Type Description System.Byte | Improve this Doc View Source RegionY Declaration public byte RegionY { get; } Property Value Type Description System.Byte Methods | Improve this Doc View Source DestroyAsync() Declaration public Task<bool> DestroyAsync() Returns Type Description Task < System.Boolean > Implements IItemDrop IItemInstance Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedItemSpawner.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedItemSpawner.html",
    "title": "Class UnturnedItemSpawner | OpenMod Docs",
    "keywords": "Class UnturnedItemSpawner Inheritance System.Object UnturnedItemSpawner Implements IItemSpawner Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedItemSpawner : object, IItemSpawner Methods | Improve this Doc View Source GiveItemAsync(IInventory, String, IItemState) Declaration public Task<IItemInstance> GiveItemAsync(IInventory inventory, string itemId, IItemState state = null) Parameters Type Name Description IInventory inventory System.String itemId IItemState state Returns Type Description Task < IItemInstance > Implements IItemSpawner Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedItemState.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedItemState.html",
    "title": "Class UnturnedItemState | OpenMod Docs",
    "keywords": "Class UnturnedItemState Inheritance System.Object UnturnedItemState Implements IItemState Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedItemState : object, IItemState Constructors | Improve this Doc View Source UnturnedItemState(Item) Declaration public UnturnedItemState(Item item) Parameters Type Name Description Item item Properties | Improve this Doc View Source Item Declaration public Item Item { get; } Property Value Type Description Item | Improve this Doc View Source ItemAmount Declaration public double ItemAmount { get; } Property Value Type Description System.Double | Improve this Doc View Source ItemDurability Declaration public double ItemDurability { get; } Property Value Type Description System.Double | Improve this Doc View Source ItemQuality Declaration public double ItemQuality { get; } Property Value Type Description System.Double | Improve this Doc View Source StateData Declaration public byte[] StateData { get; } Property Value Type Description System.Byte [] Implements IItemState Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedPlayerInventory.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedPlayerInventory.html",
    "title": "Class UnturnedPlayerInventory | OpenMod Docs",
    "keywords": "Class UnturnedPlayerInventory Inheritance System.Object UnturnedPlayerInventory Implements IInventory IReadOnlyCollection < IInventoryPage > Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerInventory : object, IInventory, IReadOnlyCollection<IInventoryPage> Constructors | Improve this Doc View Source UnturnedPlayerInventory(Player) Declaration public UnturnedPlayerInventory(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Inventory Declaration public PlayerInventory Inventory { get; } Property Value Type Description PlayerInventory | Improve this Doc View Source IsFull Declaration public bool IsFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Pages Declaration public IReadOnlyCollection<IInventoryPage> Pages { get; } Property Value Type Description IReadOnlyCollection < IInventoryPage > | Improve this Doc View Source Player Declaration public Player Player { get; } Property Value Type Description Player Methods | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<IInventoryPage> GetEnumerator() Returns Type Description IEnumerator < IInventoryPage > | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Implements IInventory IReadOnlyCollection<> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Items.UnturnedPlayerInventoryPage.html": {
    "href": "api/OpenMod.Unturned.Items.UnturnedPlayerInventoryPage.html",
    "title": "Class UnturnedPlayerInventoryPage | OpenMod Docs",
    "keywords": "Class UnturnedPlayerInventoryPage Inheritance System.Object UnturnedPlayerInventoryPage Implements IInventoryPage IReadOnlyCollection < IInventoryItem > Namespace : OpenMod.Unturned.Items Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerInventoryPage : object, IInventoryPage, IReadOnlyCollection<IInventoryItem> Constructors | Improve this Doc View Source UnturnedPlayerInventoryPage(UnturnedPlayerInventory, Byte, SDG.Unturned.Items) Declaration public UnturnedPlayerInventoryPage(UnturnedPlayerInventory inventory, byte pageIndex, SDG.Unturned.Items page) Parameters Type Name Description UnturnedPlayerInventory inventory System.Byte pageIndex SDG.Unturned.Items page Properties | Improve this Doc View Source Capacity Declaration public int Capacity { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description System.Int32 | Improve this Doc View Source Inventory Declaration public UnturnedPlayerInventory Inventory { get; set; } Property Value Type Description UnturnedPlayerInventory | Improve this Doc View Source IsFull Declaration public bool IsFull { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Items Declaration public IReadOnlyCollection<IInventoryItem> Items { get; } Property Value Type Description IReadOnlyCollection < IInventoryItem > | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Page Declaration public SDG.Unturned.Items Page { get; } Property Value Type Description SDG.Unturned.Items | Improve this Doc View Source PageIndex Declaration public byte PageIndex { get; } Property Value Type Description System.Byte Methods | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<IInventoryItem> GetEnumerator() Returns Type Description IEnumerator < IInventoryItem > Explicit Interface Implementations | Improve this Doc View Source IInventoryPage.Inventory Declaration IInventory IInventoryPage.Inventory { get; } Returns Type Description IInventory Implements IInventoryPage IReadOnlyCollection<> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Level.Events.html": {
    "href": "api/OpenMod.Unturned.Level.Events.html",
    "title": "Namespace OpenMod.Unturned.Level.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Level.Events Classes UnturnedLevelEvent UnturnedLevelLoadedEvent The event that is triggered when level has been loaded. UnturnedPostLevelLoadedEvent The event that is triggered after UnturnedLevelLoadedEvent. UnturnedPreLevelLoadedEvent The event that is triggered before UnturnedLevelLoadedEvent. UnturnedPrePreLevelLoadedEvent The event that is triggered before UnturnedPreLevelLoadedEvent."
  },
  "api/OpenMod.Unturned.Level.Events.UnturnedLevelEvent.html": {
    "href": "api/OpenMod.Unturned.Level.Events.UnturnedLevelEvent.html",
    "title": "Class UnturnedLevelEvent | OpenMod Docs",
    "keywords": "Class UnturnedLevelEvent Inheritance System.Object UnturnedLevelEvent UnturnedLevelLoadedEvent UnturnedPostLevelLoadedEvent UnturnedPreLevelLoadedEvent UnturnedPrePreLevelLoadedEvent Namespace : OpenMod.Unturned.Level.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedLevelEvent : Event Constructors | Improve this Doc View Source UnturnedLevelEvent() Declaration public UnturnedLevelEvent() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Level.Events.UnturnedLevelLoadedEvent.html": {
    "href": "api/OpenMod.Unturned.Level.Events.UnturnedLevelLoadedEvent.html",
    "title": "Class UnturnedLevelLoadedEvent | OpenMod Docs",
    "keywords": "Class UnturnedLevelLoadedEvent The event that is triggered when level has been loaded. Inheritance System.Object UnturnedLevelEvent UnturnedLevelLoadedEvent Namespace : OpenMod.Unturned.Level.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedLevelLoadedEvent : UnturnedLevelEvent Constructors | Improve this Doc View Source UnturnedLevelLoadedEvent() Declaration public UnturnedLevelLoadedEvent() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Level.Events.UnturnedPostLevelLoadedEvent.html": {
    "href": "api/OpenMod.Unturned.Level.Events.UnturnedPostLevelLoadedEvent.html",
    "title": "Class UnturnedPostLevelLoadedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPostLevelLoadedEvent The event that is triggered after UnturnedLevelLoadedEvent. Inheritance System.Object UnturnedLevelEvent UnturnedPostLevelLoadedEvent Namespace : OpenMod.Unturned.Level.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPostLevelLoadedEvent : UnturnedLevelEvent Constructors | Improve this Doc View Source UnturnedPostLevelLoadedEvent() Declaration public UnturnedPostLevelLoadedEvent() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Level.Events.UnturnedPreLevelLoadedEvent.html": {
    "href": "api/OpenMod.Unturned.Level.Events.UnturnedPreLevelLoadedEvent.html",
    "title": "Class UnturnedPreLevelLoadedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPreLevelLoadedEvent The event that is triggered before UnturnedLevelLoadedEvent. Inheritance System.Object UnturnedLevelEvent UnturnedPreLevelLoadedEvent Namespace : OpenMod.Unturned.Level.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPreLevelLoadedEvent : UnturnedLevelEvent Constructors | Improve this Doc View Source UnturnedPreLevelLoadedEvent() Declaration public UnturnedPreLevelLoadedEvent() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Level.Events.UnturnedPrePreLevelLoadedEvent.html": {
    "href": "api/OpenMod.Unturned.Level.Events.UnturnedPrePreLevelLoadedEvent.html",
    "title": "Class UnturnedPrePreLevelLoadedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPrePreLevelLoadedEvent The event that is triggered before UnturnedPreLevelLoadedEvent. Inheritance System.Object UnturnedLevelEvent UnturnedPrePreLevelLoadedEvent Namespace : OpenMod.Unturned.Level.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPrePreLevelLoadedEvent : UnturnedLevelEvent Constructors | Improve this Doc View Source UnturnedPrePreLevelLoadedEvent() Declaration public UnturnedPrePreLevelLoadedEvent() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Localization.html": {
    "href": "api/OpenMod.Unturned.Localization.html",
    "title": "Namespace OpenMod.Unturned.Localization | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Localization Classes OpenModStringLocalizer"
  },
  "api/OpenMod.Unturned.Localization.OpenModStringLocalizer.html": {
    "href": "api/OpenMod.Unturned.Localization.OpenModStringLocalizer.html",
    "title": "Class OpenModStringLocalizer | OpenMod Docs",
    "keywords": "Class OpenModStringLocalizer Inheritance System.Object OpenModStringLocalizer Implements IOpenModHostStringLocalizer Namespace : OpenMod.Unturned.Localization Assembly : OpenMod.Unturned.dll Syntax public class OpenModStringLocalizer : ProxyStringLocalizer, IOpenModHostStringLocalizer Constructors | Improve this Doc View Source OpenModStringLocalizer(IStringLocalizerFactory, IRuntime) Declaration public OpenModStringLocalizer(IStringLocalizerFactory stringLocalizerFactory, IRuntime runtime) Parameters Type Name Description IStringLocalizerFactory stringLocalizerFactory IRuntime runtime Implements IOpenModHostStringLocalizer Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Locations.html": {
    "href": "api/OpenMod.Unturned.Locations.html",
    "title": "Namespace OpenMod.Unturned.Locations | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Locations Classes UnturnedLocation UnturnedLocationCommandParameterResolveProvider UnturnedLocationDirectory Interfaces IUnturnedLocationDirectory"
  },
  "api/OpenMod.Unturned.Locations.IUnturnedLocationDirectory.html": {
    "href": "api/OpenMod.Unturned.Locations.IUnturnedLocationDirectory.html",
    "title": "Interface IUnturnedLocationDirectory | OpenMod Docs",
    "keywords": "Interface IUnturnedLocationDirectory Namespace : OpenMod.Unturned.Locations Assembly : OpenMod.Unturned.dll Syntax public interface IUnturnedLocationDirectory Methods | Improve this Doc View Source FindLocation(String, Boolean) Declaration UnturnedLocation FindLocation(string name, bool exact = true) Parameters Type Name Description System.String name System.Boolean exact Returns Type Description UnturnedLocation | Improve this Doc View Source GetLocations() Declaration IReadOnlyCollection<UnturnedLocation> GetLocations() Returns Type Description IReadOnlyCollection < UnturnedLocation > | Improve this Doc View Source GetNearestLocation(Vector3) Declaration UnturnedLocation GetNearestLocation(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description UnturnedLocation Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Locations.UnturnedLocation.html": {
    "href": "api/OpenMod.Unturned.Locations.UnturnedLocation.html",
    "title": "Class UnturnedLocation | OpenMod Docs",
    "keywords": "Class UnturnedLocation Inheritance System.Object UnturnedLocation Namespace : OpenMod.Unturned.Locations Assembly : OpenMod.Unturned.dll Syntax public class UnturnedLocation : object Constructors | Improve this Doc View Source UnturnedLocation(LocationDevkitNode) Declaration public UnturnedLocation(LocationDevkitNode node) Parameters Type Name Description LocationDevkitNode node | Improve this Doc View Source UnturnedLocation(LocationNode) Declaration public UnturnedLocation(LocationNode node) Parameters Type Name Description LocationNode node Properties | Improve this Doc View Source DevkitNode Declaration public LocationDevkitNode DevkitNode { get; } Property Value Type Description LocationDevkitNode | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Node Declaration public LocationNode Node { get; } Property Value Type Description LocationNode | Improve this Doc View Source Position Declaration public Vector3 Position { get; } Property Value Type Description Vector3 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Locations.UnturnedLocationCommandParameterResolveProvider.html": {
    "href": "api/OpenMod.Unturned.Locations.UnturnedLocationCommandParameterResolveProvider.html",
    "title": "Class UnturnedLocationCommandParameterResolveProvider | OpenMod Docs",
    "keywords": "Class UnturnedLocationCommandParameterResolveProvider Inheritance System.Object UnturnedLocationCommandParameterResolveProvider Namespace : OpenMod.Unturned.Locations Assembly : OpenMod.Unturned.dll Syntax public class UnturnedLocationCommandParameterResolveProvider : ICommandParameterResolveProvider Constructors | Improve this Doc View Source UnturnedLocationCommandParameterResolveProvider(ILogger<UnturnedLocationCommandParameterResolveProvider>, IUnturnedLocationDirectory) Declaration public UnturnedLocationCommandParameterResolveProvider(ILogger<UnturnedLocationCommandParameterResolveProvider> logger, IUnturnedLocationDirectory locationDirectory) Parameters Type Name Description ILogger < UnturnedLocationCommandParameterResolveProvider > logger IUnturnedLocationDirectory locationDirectory Methods | Improve this Doc View Source ResolveAsync(Type, String) Declaration public Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source Supports(Type) Declaration public bool Supports(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Locations.UnturnedLocationDirectory.html": {
    "href": "api/OpenMod.Unturned.Locations.UnturnedLocationDirectory.html",
    "title": "Class UnturnedLocationDirectory | OpenMod Docs",
    "keywords": "Class UnturnedLocationDirectory Inheritance System.Object UnturnedLocationDirectory Implements IUnturnedLocationDirectory Namespace : OpenMod.Unturned.Locations Assembly : OpenMod.Unturned.dll Syntax public class UnturnedLocationDirectory : object, IUnturnedLocationDirectory Methods | Improve this Doc View Source FindLocation(String, Boolean) Declaration public UnturnedLocation FindLocation(string name, bool exact = true) Parameters Type Name Description System.String name System.Boolean exact Returns Type Description UnturnedLocation | Improve this Doc View Source GetLocations() Declaration public IReadOnlyCollection<UnturnedLocation> GetLocations() Returns Type Description IReadOnlyCollection < UnturnedLocation > | Improve this Doc View Source GetNearestLocation(Vector3) Declaration public UnturnedLocation GetNearestLocation(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description UnturnedLocation Implements IUnturnedLocationDirectory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Logging.html": {
    "href": "api/OpenMod.Unturned.Logging.html",
    "title": "Namespace OpenMod.Unturned.Logging | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Logging Classes OpenModConsoleInputOutput OpenModWindowsConsoleInputOutput"
  },
  "api/OpenMod.Unturned.Logging.OpenModConsoleInputOutput.html": {
    "href": "api/OpenMod.Unturned.Logging.OpenModConsoleInputOutput.html",
    "title": "Class OpenModConsoleInputOutput | OpenMod Docs",
    "keywords": "Class OpenModConsoleInputOutput Inheritance System.Object OpenModConsoleInputOutput OpenModWindowsConsoleInputOutput Namespace : OpenMod.Unturned.Logging Assembly : OpenMod.Unturned.dll Syntax public class OpenModConsoleInputOutput : ICommandInputOutput Constructors | Improve this Doc View Source OpenModConsoleInputOutput(ILoggerFactory, IConfiguration, IAutoCompleteHandler) Declaration public OpenModConsoleInputOutput(ILoggerFactory loggerFactory, IConfiguration configuration, IAutoCompleteHandler autoCompleteHandler) Parameters Type Name Description ILoggerFactory loggerFactory IConfiguration configuration IAutoCompleteHandler autoCompleteHandler Methods | Improve this Doc View Source initialize(CommandWindow) Declaration public void initialize(CommandWindow commandWindow) Parameters Type Name Description CommandWindow commandWindow | Improve this Doc View Source outputError(String) Declaration public void outputError(string error) Parameters Type Name Description System.String error | Improve this Doc View Source outputInformation(String) Declaration public void outputInformation(string information) Parameters Type Name Description System.String information | Improve this Doc View Source outputWarning(String) Declaration public void outputWarning(string warning) Parameters Type Name Description System.String warning | Improve this Doc View Source shutdown(CommandWindow) Declaration public void shutdown(CommandWindow commandWindow) Parameters Type Name Description CommandWindow commandWindow | Improve this Doc View Source update() Declaration public void update() Events | Improve this Doc View Source inputCommitted Declaration public event CommandInputHandler? inputCommitted Event Type Type Description System.Nullable < CommandInputHandler > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Logging.OpenModWindowsConsoleInputOutput.html": {
    "href": "api/OpenMod.Unturned.Logging.OpenModWindowsConsoleInputOutput.html",
    "title": "Class OpenModWindowsConsoleInputOutput | OpenMod Docs",
    "keywords": "Class OpenModWindowsConsoleInputOutput Inheritance System.Object OpenModConsoleInputOutput OpenModWindowsConsoleInputOutput Inherited Members OpenModConsoleInputOutput.inputCommitted OpenModConsoleInputOutput.initialize(CommandWindow) OpenModConsoleInputOutput.shutdown(CommandWindow) OpenModConsoleInputOutput.update() OpenModConsoleInputOutput.outputInformation(String) OpenModConsoleInputOutput.outputWarning(String) OpenModConsoleInputOutput.outputError(String) Namespace : OpenMod.Unturned.Logging Assembly : OpenMod.Unturned.dll Syntax public class OpenModWindowsConsoleInputOutput : OpenModConsoleInputOutput Constructors | Improve this Doc View Source OpenModWindowsConsoleInputOutput(ILoggerFactory, IConfiguration, IAutoCompleteHandler) Declaration public OpenModWindowsConsoleInputOutput(ILoggerFactory loggerFactory, IConfiguration configuration, IAutoCompleteHandler autoCompleteHandler) Parameters Type Name Description ILoggerFactory loggerFactory IConfiguration configuration IAutoCompleteHandler autoCompleteHandler Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Module.Bootstrapper.BootstrapperModule.html": {
    "href": "api/OpenMod.Unturned.Module.Bootstrapper.BootstrapperModule.html",
    "title": "Class BootstrapperModule | OpenMod Docs",
    "keywords": "Class BootstrapperModule Bootstrapper of main or dev OpenMod module. Inheritance System.Object BootstrapperModule Namespace : OpenMod.Unturned.Module.Bootstrapper Assembly : OpenMod.Unturned.Module.Bootstrapper.dll Syntax public class BootstrapperModule : IModuleNexus Properties | Improve this Doc View Source Instance Instance of bootstrapper. Declaration public static BootstrapperModule Instance { get; } Property Value Type Description BootstrapperModule Remarks Note, this instance is used in hard-reload via reflection. Methods | Improve this Doc View Source initialize() Declaration public void initialize() | Improve this Doc View Source shutdown() Declaration public void shutdown() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Module.Bootstrapper.html": {
    "href": "api/OpenMod.Unturned.Module.Bootstrapper.html",
    "title": "Namespace OpenMod.Unturned.Module.Bootstrapper | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Module.Bootstrapper Classes BootstrapperModule Bootstrapper of main or dev OpenMod module."
  },
  "api/OpenMod.Unturned.Module.Dev.html": {
    "href": "api/OpenMod.Unturned.Module.Dev.html",
    "title": "Namespace OpenMod.Unturned.Module.Dev | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Module.Dev Classes OpenModUnturnedModule"
  },
  "api/OpenMod.Unturned.Module.Dev.OpenModUnturnedModule.html": {
    "href": "api/OpenMod.Unturned.Module.Dev.OpenModUnturnedModule.html",
    "title": "Class OpenModUnturnedModule | OpenMod Docs",
    "keywords": "Class OpenModUnturnedModule Inheritance System.Object OpenModUnturnedModule Namespace : OpenMod.Unturned.Module.Dev Assembly : OpenMod.Unturned.Module.Dev.dll Syntax public class OpenModUnturnedModule : IModuleNexus Properties | Improve this Doc View Source OpenModRuntime Declaration public Runtime.Runtime? OpenModRuntime { get; } Property Value Type Description System.Nullable < Runtime.Runtime > Methods | Improve this Doc View Source initialize() Declaration public void initialize() | Improve this Doc View Source shutdown() Declaration public void shutdown() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Module.html": {
    "href": "api/OpenMod.Unturned.Module.html",
    "title": "Namespace OpenMod.Unturned.Module | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Module Classes OpenModUnturnedModule"
  },
  "api/OpenMod.Unturned.Module.OpenModUnturnedModule.html": {
    "href": "api/OpenMod.Unturned.Module.OpenModUnturnedModule.html",
    "title": "Class OpenModUnturnedModule | OpenMod Docs",
    "keywords": "Class OpenModUnturnedModule Inheritance System.Object OpenModUnturnedModule Namespace : OpenMod.Unturned.Module Assembly : OpenMod.Unturned.Module.dll Syntax public class OpenModUnturnedModule : IModuleNexus Properties | Improve this Doc View Source IsDynamicLoad Declaration public bool IsDynamicLoad { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source OpenModRuntime Declaration public object? OpenModRuntime { get; } Property Value Type Description System.Nullable < System.Object > Methods | Improve this Doc View Source initialize() Declaration public void initialize() | Improve this Doc View Source shutdown() Declaration public void shutdown() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Module.Shared.html": {
    "href": "api/OpenMod.Unturned.Module.Shared.html",
    "title": "Namespace OpenMod.Unturned.Module.Shared | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Module.Shared Classes OpenModSharedUnturnedModule SystemDrawingRedirect"
  },
  "api/OpenMod.Unturned.Module.Shared.OpenModSharedUnturnedModule.html": {
    "href": "api/OpenMod.Unturned.Module.Shared.OpenModSharedUnturnedModule.html",
    "title": "Class OpenModSharedUnturnedModule | OpenMod Docs",
    "keywords": "Class OpenModSharedUnturnedModule Inheritance System.Object OpenModSharedUnturnedModule Namespace : OpenMod.Unturned.Module.Shared Assembly : OpenMod.Unturned.Module.Shared.dll Syntax public sealed class OpenModSharedUnturnedModule : object Methods | Improve this Doc View Source GetNugetPackageManager(String) Declaration public NuGetPackageManager GetNugetPackageManager(string openModDirectory) Parameters Type Name Description System.String openModDirectory Returns Type Description NuGetPackageManager | Improve this Doc View Source Initialize(Boolean) Declaration public bool Initialize(bool isDynamicLoad) Parameters Type Name Description System.Boolean isDynamicLoad Returns Type Description System.Boolean | Improve this Doc View Source OnPostInitialize() Declaration public void OnPostInitialize() | Improve this Doc View Source Shutdown() Declaration public void Shutdown() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Module.Shared.Patches.html": {
    "href": "api/OpenMod.Unturned.Module.Shared.Patches.html",
    "title": "Namespace OpenMod.Unturned.Module.Shared.Patches | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Module.Shared.Patches Classes UnturnedBroadcastCommenceShutdownPatch UnturnedBroadcastShutdownPatch"
  },
  "api/OpenMod.Unturned.Module.Shared.Patches.UnturnedBroadcastCommenceShutdownPatch.html": {
    "href": "api/OpenMod.Unturned.Module.Shared.Patches.UnturnedBroadcastCommenceShutdownPatch.html",
    "title": "Class UnturnedBroadcastCommenceShutdownPatch | OpenMod Docs",
    "keywords": "Class UnturnedBroadcastCommenceShutdownPatch Inheritance System.Object UnturnedBroadcastCommenceShutdownPatch Namespace : OpenMod.Unturned.Module.Shared.Patches Assembly : OpenMod.Unturned.Module.Shared.dll Syntax public static class UnturnedBroadcastCommenceShutdownPatch : object Methods | Improve this Doc View Source BeforeDisconnect() Declaration public static void BeforeDisconnect()"
  },
  "api/OpenMod.Unturned.Module.Shared.Patches.UnturnedBroadcastShutdownPatch.html": {
    "href": "api/OpenMod.Unturned.Module.Shared.Patches.UnturnedBroadcastShutdownPatch.html",
    "title": "Class UnturnedBroadcastShutdownPatch | OpenMod Docs",
    "keywords": "Class UnturnedBroadcastShutdownPatch Inheritance System.Object UnturnedBroadcastShutdownPatch Namespace : OpenMod.Unturned.Module.Shared.Patches Assembly : OpenMod.Unturned.Module.Shared.dll Syntax public static class UnturnedBroadcastShutdownPatch : object Methods | Improve this Doc View Source AfterBroadcastShutdown() Declaration public static void AfterBroadcastShutdown()"
  },
  "api/OpenMod.Unturned.Module.Shared.SystemDrawingRedirect.html": {
    "href": "api/OpenMod.Unturned.Module.Shared.SystemDrawingRedirect.html",
    "title": "Class SystemDrawingRedirect | OpenMod Docs",
    "keywords": "Class SystemDrawingRedirect Inheritance System.Object SystemDrawingRedirect Namespace : OpenMod.Unturned.Module.Shared Assembly : OpenMod.Unturned.Module.Shared.dll Syntax public static class SystemDrawingRedirect : object Methods | Improve this Doc View Source Install() Declaration public static void Install() | Improve this Doc View Source Uninstall() Declaration public static void Uninstall()"
  },
  "api/OpenMod.Unturned.OpenModUnturnedHost.html": {
    "href": "api/OpenMod.Unturned.OpenModUnturnedHost.html",
    "title": "Class OpenModUnturnedHost | OpenMod Docs",
    "keywords": "Class OpenModUnturnedHost Inheritance System.Object OpenModUnturnedHost Implements IDisposable Namespace : OpenMod.Unturned Assembly : OpenMod.Unturned.dll Syntax public class OpenModUnturnedHost : IOpenModHost, IDisposable Constructors | Improve this Doc View Source OpenModUnturnedHost(IRuntime, IHostInformation, IServiceProvider, ILifetimeScope, IDataStoreFactory, IConsoleActorAccessor, ILogger<OpenModUnturnedHost>, NuGetPackageManager, Lazy<ICommandExecutor>, Lazy<UnturnedCommandHandler>, ILoggerFactory) Declaration public OpenModUnturnedHost(IRuntime runtime, IHostInformation hostInformation, IServiceProvider serviceProvider, ILifetimeScope lifetimeScope, IDataStoreFactory dataStoreFactory, IConsoleActorAccessor consoleActorAccessor, ILogger<OpenModUnturnedHost> logger, NuGetPackageManager nuGetPackageManager, Lazy<ICommandExecutor> commandExecutor, Lazy<UnturnedCommandHandler> unturnedCommandHandler, ILoggerFactory loggerFactory) Parameters Type Name Description IRuntime runtime IHostInformation hostInformation IServiceProvider serviceProvider ILifetimeScope lifetimeScope IDataStoreFactory dataStoreFactory IConsoleActorAccessor consoleActorAccessor ILogger < OpenModUnturnedHost > logger NuGetPackageManager nuGetPackageManager Lazy < ICommandExecutor > commandExecutor Lazy < UnturnedCommandHandler > unturnedCommandHandler ILoggerFactory loggerFactory Properties | Improve this Doc View Source DataStore Declaration public IDataStore DataStore { get; } Property Value Type Description IDataStore | Improve this Doc View Source IsComponentAlive Declaration public bool IsComponentAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LifetimeScope Declaration public ILifetimeScope LifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source OpenModComponentId Declaration public string OpenModComponentId { get; } Property Value Type Description System.String | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; } Property Value Type Description System.String Methods | Improve this Doc View Source BindUnturnedEvents() Declaration protected virtual void BindUnturnedEvents() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source HasCapability(String) Declaration public bool HasCapability(string capability) Parameters Type Name Description System.String capability Returns Type Description System.Boolean | Improve this Doc View Source InitAsync() Declaration public Task InitAsync() Returns Type Description Task | Improve this Doc View Source PerformHardReloadAsync() Declaration public Task PerformHardReloadAsync() Returns Type Description Task | Improve this Doc View Source ShutdownAsync() Declaration public Task ShutdownAsync() Returns Type Description Task | Improve this Doc View Source UnbindUnturnedEvents() Declaration protected virtual void UnbindUnturnedEvents() Implements IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Permissions.html": {
    "href": "api/OpenMod.Unturned.Permissions.html",
    "title": "Namespace OpenMod.Unturned.Permissions | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Permissions Classes UnturnedAdminPermissionCheckProvider"
  },
  "api/OpenMod.Unturned.Permissions.UnturnedAdminPermissionCheckProvider.html": {
    "href": "api/OpenMod.Unturned.Permissions.UnturnedAdminPermissionCheckProvider.html",
    "title": "Class UnturnedAdminPermissionCheckProvider | OpenMod Docs",
    "keywords": "Class UnturnedAdminPermissionCheckProvider Inheritance System.Object UnturnedAdminPermissionCheckProvider Namespace : OpenMod.Unturned.Permissions Assembly : OpenMod.Unturned.dll Syntax public class UnturnedAdminPermissionCheckProvider : IPermissionCheckProvider Constructors | Improve this Doc View Source UnturnedAdminPermissionCheckProvider(IOpenModUnturnedConfiguration) Declaration public UnturnedAdminPermissionCheckProvider(IOpenModUnturnedConfiguration configuration) Parameters Type Name Description IOpenModUnturnedConfiguration configuration Methods | Improve this Doc View Source CheckPermissionAsync(IPermissionActor, String) Declaration public Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < PermissionGrantResult > | Improve this Doc View Source SupportsActor(IPermissionActor) Declaration public bool SupportsActor(IPermissionActor actor) Parameters Type Name Description IPermissionActor actor Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Persistence.Events.html": {
    "href": "api/OpenMod.Unturned.Persistence.Events.html",
    "title": "Namespace OpenMod.Unturned.Persistence.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Persistence.Events Classes UnturnedGameSavedEvent The event that is triggered when the game performs a save."
  },
  "api/OpenMod.Unturned.Persistence.Events.UnturnedGameSavedEvent.html": {
    "href": "api/OpenMod.Unturned.Persistence.Events.UnturnedGameSavedEvent.html",
    "title": "Class UnturnedGameSavedEvent | OpenMod Docs",
    "keywords": "Class UnturnedGameSavedEvent The event that is triggered when the game performs a save. Inheritance System.Object UnturnedGameSavedEvent Implements IGameSaveEvent IEvent Namespace : OpenMod.Unturned.Persistence.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedGameSavedEvent : Event, IGameSaveEvent, IEvent Implements IGameSaveEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Animator.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Animator.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Animator.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Animator.Events Classes UnturnedPlayerLeanUpdatedEvent"
  },
  "api/OpenMod.Unturned.Players.Animator.Events.UnturnedPlayerLeanUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Animator.Events.UnturnedPlayerLeanUpdatedEvent.html",
    "title": "Class UnturnedPlayerLeanUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerLeanUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerLeanUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Animator.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerLeanUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerLeanUpdatedEvent(UnturnedPlayer, LeanType) Declaration public UnturnedPlayerLeanUpdatedEvent(UnturnedPlayer player, LeanType lean) Parameters Type Name Description UnturnedPlayer player LeanType lean Properties | Improve this Doc View Source Lean Declaration public LeanType Lean { get; } Property Value Type Description LeanType Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Animator.html": {
    "href": "api/OpenMod.Unturned.Players.Animator.html",
    "title": "Namespace OpenMod.Unturned.Players.Animator | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Animator Enums LeanType"
  },
  "api/OpenMod.Unturned.Players.Animator.LeanType.html": {
    "href": "api/OpenMod.Unturned.Players.Animator.LeanType.html",
    "title": "Enum LeanType | OpenMod Docs",
    "keywords": "Enum LeanType Namespace : OpenMod.Unturned.Players.Animator Assembly : OpenMod.Unturned.dll Syntax public enum LeanType : int Fields Name Description Center Left Right"
  },
  "api/OpenMod.Unturned.Players.Bans.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Bans.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Bans.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Bans.Events Classes UnturnedPlayerBannedEvent UnturnedPlayerBanningEvent UnturnedPlayerCheckingBanEvent UnturnedPlayerUnbannedEvent UnturnedPlayerUnbanningEvent"
  },
  "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerBannedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerBannedEvent.html",
    "title": "Class UnturnedPlayerBannedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerBannedEvent Inheritance System.Object UnturnedPlayerBannedEvent Namespace : OpenMod.Unturned.Players.Bans.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerBannedEvent : Event Constructors | Improve this Doc View Source UnturnedPlayerBannedEvent(CSteamID, CSteamID, UInt32, String, UInt32) Declaration public UnturnedPlayerBannedEvent(CSteamID instigator, CSteamID bannedPlayer, uint ip, string reason, uint duration) Parameters Type Name Description CSteamID instigator CSteamID bannedPlayer System.UInt32 ip System.String reason System.UInt32 duration Properties | Improve this Doc View Source BannedPlayer Declaration public CSteamID BannedPlayer { get; } Property Value Type Description CSteamID | Improve this Doc View Source Duration Declaration public uint Duration { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source Instigator Declaration public CSteamID Instigator { get; } Property Value Type Description CSteamID | Improve this Doc View Source IP Declaration public uint IP { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source Reason Declaration public string Reason { get; set; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerBanningEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerBanningEvent.html",
    "title": "Class UnturnedPlayerBanningEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerBanningEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerBanningEvent Implements IBanningPlayerEvent IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Bans.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerBanningEvent : UnturnedPlayerEvent, IBanningPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerBanningEvent(UnturnedPlayer, String, String, Nullable<IPAddress>, IEnumerable<Byte[]>, Nullable<String>, TimeSpan) Declaration public UnturnedPlayerBanningEvent(UnturnedPlayer playerToBan, string instigatorId, string instigatorType, IPAddress? addressBan, IEnumerable<byte[]> hwidsToBan, string? reason, TimeSpan duration) Parameters Type Name Description UnturnedPlayer playerToBan System.String instigatorId System.String instigatorType System.Nullable < IPAddress > addressBan IEnumerable < System.Byte []> hwidsToBan System.Nullable < System.String > reason TimeSpan duration | Improve this Doc View Source UnturnedPlayerBanningEvent(UnturnedPlayer, String, String, Nullable<IPAddress>, Nullable<String>, TimeSpan) Declaration public UnturnedPlayerBanningEvent(UnturnedPlayer playerToBan, string instigatorId, string instigatorType, IPAddress? addressBan, string? reason, TimeSpan duration) Parameters Type Name Description UnturnedPlayer playerToBan System.String instigatorId System.String instigatorType System.Nullable < IPAddress > addressBan System.Nullable < System.String > reason TimeSpan duration Properties | Improve this Doc View Source AddressToBan Declaration public IPAddress? AddressToBan { get; } Property Value Type Description System.Nullable < IPAddress > | Improve this Doc View Source Duration Declaration public TimeSpan Duration { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source HwidsToBan Declaration public IEnumerable<byte[]>? HwidsToBan { get; } Property Value Type Description System.Nullable < IEnumerable < System.Byte []>> | Improve this Doc View Source InstigatorId Declaration public string InstigatorId { get; } Property Value Type Description System.String | Improve this Doc View Source InstigatorType Declaration public string InstigatorType { get; } Property Value Type Description System.String | Improve this Doc View Source IPToBan Declaration public uint IPToBan { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Reason Declaration public string? Reason { get; set; } Property Value Type Description System.Nullable < System.String > Implements IBanningPlayerEvent IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerCheckingBanEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerCheckingBanEvent.html",
    "title": "Class UnturnedPlayerCheckingBanEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerCheckingBanEvent Inheritance System.Object UnturnedPlayerCheckingBanEvent Namespace : OpenMod.Unturned.Players.Bans.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerCheckingBanEvent : Event Constructors | Improve this Doc View Source UnturnedPlayerCheckingBanEvent(SteamPlayerID, UInt32, Boolean, String, UInt32) Declaration public UnturnedPlayerCheckingBanEvent(SteamPlayerID steamPlayerId, uint remoteIp, bool isBanned, string reason, uint remainingDuration) Parameters Type Name Description SteamPlayerID steamPlayerId System.UInt32 remoteIp System.Boolean isBanned System.String reason System.UInt32 remainingDuration Properties | Improve this Doc View Source IsBanned Declaration public bool IsBanned { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Reason Declaration public string Reason { get; set; } Property Value Type Description System.String | Improve this Doc View Source RemainingDuration Declaration public uint RemainingDuration { get; set; } Property Value Type Description System.UInt32 | Improve this Doc View Source RemoteIP Declaration public uint RemoteIP { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source SteamPlayerId Declaration public SteamPlayerID SteamPlayerId { get; } Property Value Type Description SteamPlayerID Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerUnbannedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerUnbannedEvent.html",
    "title": "Class UnturnedPlayerUnbannedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerUnbannedEvent Inheritance System.Object UnturnedPlayerUnbannedEvent Namespace : OpenMod.Unturned.Players.Bans.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerUnbannedEvent : Event Constructors | Improve this Doc View Source UnturnedPlayerUnbannedEvent(CSteamID) Declaration public UnturnedPlayerUnbannedEvent(CSteamID unbannedPlayer) Parameters Type Name Description CSteamID unbannedPlayer Properties | Improve this Doc View Source UnbannedPlayer Declaration public CSteamID UnbannedPlayer { get; } Property Value Type Description CSteamID Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerUnbanningEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Bans.Events.UnturnedPlayerUnbanningEvent.html",
    "title": "Class UnturnedPlayerUnbanningEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerUnbanningEvent Inheritance System.Object UnturnedPlayerUnbanningEvent Implements ICancellableEvent Namespace : OpenMod.Unturned.Players.Bans.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerUnbanningEvent : Event, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerUnbanningEvent(CSteamID, CSteamID) Declaration public UnturnedPlayerUnbanningEvent(CSteamID instigator, CSteamID playerToUnban) Parameters Type Name Description CSteamID instigator CSteamID playerToUnban Properties | Improve this Doc View Source Instigator Declaration public CSteamID Instigator { get; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PlayerToUnban Declaration public CSteamID PlayerToUnban { get; } Property Value Type Description CSteamID Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.BattlEye.Events.html": {
    "href": "api/OpenMod.Unturned.Players.BattlEye.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.BattlEye.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.BattlEye.Events Classes UnturnedBattlEyeKickedEvent"
  },
  "api/OpenMod.Unturned.Players.BattlEye.Events.UnturnedBattlEyeKickedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.BattlEye.Events.UnturnedBattlEyeKickedEvent.html",
    "title": "Class UnturnedBattlEyeKickedEvent | OpenMod Docs",
    "keywords": "Class UnturnedBattlEyeKickedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedBattlEyeKickedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.BattlEye.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedBattlEyeKickedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedBattlEyeKickedEvent(UnturnedPlayer, String) Declaration public UnturnedBattlEyeKickedEvent(UnturnedPlayer player, string reason) Parameters Type Name Description UnturnedPlayer player System.String reason Properties | Improve this Doc View Source Reason Declaration public string Reason { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Chat.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Chat.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Chat.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Chat.Events Classes UnturnedPlayerChattingEvent UnturnedServerSendingMessageEvent"
  },
  "api/OpenMod.Unturned.Players.Chat.Events.UnturnedPlayerChattingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Chat.Events.UnturnedPlayerChattingEvent.html",
    "title": "Class UnturnedPlayerChattingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerChattingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerChattingEvent Implements IPlayerChattingEvent IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Chat.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerChattingEvent : UnturnedPlayerEvent, IPlayerChattingEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerChattingEvent(UnturnedPlayer, EChatMode, Color, Boolean, String) Declaration public UnturnedPlayerChattingEvent(UnturnedPlayer player, EChatMode mode, Color color, bool isRich, string message) Parameters Type Name Description UnturnedPlayer player EChatMode mode Color color System.Boolean isRich System.String message Properties | Improve this Doc View Source Color Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsRich Declaration public bool IsRich { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Message Declaration public string Message { get; } Property Value Type Description System.String | Improve this Doc View Source Mode Declaration public EChatMode Mode { get; } Property Value Type Description EChatMode Implements IPlayerChattingEvent IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Chat.Events.UnturnedServerSendingMessageEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Chat.Events.UnturnedServerSendingMessageEvent.html",
    "title": "Class UnturnedServerSendingMessageEvent | OpenMod Docs",
    "keywords": "Class UnturnedServerSendingMessageEvent Inheritance System.Object UnturnedServerSendingMessageEvent Namespace : OpenMod.Unturned.Players.Chat.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedServerSendingMessageEvent : Core.Eventing.Event Constructors | Improve this Doc View Source UnturnedServerSendingMessageEvent(UnturnedPlayer, UnturnedPlayer, String, Color, EChatMode, String, Boolean) Declaration public UnturnedServerSendingMessageEvent(UnturnedPlayer fromPlayer, UnturnedPlayer toPlayer, string text, Color color, EChatMode mode, string iconUrl, bool isRich) Parameters Type Name Description UnturnedPlayer fromPlayer UnturnedPlayer toPlayer System.String text Color color EChatMode mode System.String iconUrl System.Boolean isRich Properties | Improve this Doc View Source Color Declaration public Color Color { get; set; } Property Value Type Description Color | Improve this Doc View Source FromPlayer Declaration public UnturnedPlayer FromPlayer { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source IconUrl Declaration public string IconUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsRich Declaration public bool IsRich { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Mode Declaration public EChatMode Mode { get; } Property Value Type Description EChatMode | Improve this Doc View Source Text Declaration public string Text { get; set; } Property Value Type Description System.String | Improve this Doc View Source ToPlayer Declaration public UnturnedPlayer ToPlayer { get; } Property Value Type Description UnturnedPlayer Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Clothing.ClothingType.html": {
    "href": "api/OpenMod.Unturned.Players.Clothing.ClothingType.html",
    "title": "Enum ClothingType | OpenMod Docs",
    "keywords": "Enum ClothingType Namespace : OpenMod.Unturned.Players.Clothing Assembly : OpenMod.Unturned.dll Syntax public enum ClothingType : int Fields Name Description Backpack Glasses Hat Mask Pants Shirt Vest"
  },
  "api/OpenMod.Unturned.Players.Clothing.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Clothing.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Clothing.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Clothing.Events Classes UnturnedPlayerClothingEquippedEvent UnturnedPlayerClothingEquippingEvent UnturnedPlayerClothingUnequippedEvent UnturnedPlayerClothingUnequippingEvent"
  },
  "api/OpenMod.Unturned.Players.Clothing.Events.UnturnedPlayerClothingEquippedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Clothing.Events.UnturnedPlayerClothingEquippedEvent.html",
    "title": "Class UnturnedPlayerClothingEquippedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerClothingEquippedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemEquippedEvent UnturnedPlayerClothingEquippedEvent Implements IPlayerItemEquippedEvent IPlayerEvent IItemEvent IEvent Inherited Members UnturnedPlayerItemEquippedEvent.Item UnturnedPlayerItemEquippedEvent.IItemEvent.Item UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Clothing.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerClothingEquippedEvent : UnturnedPlayerItemEquippedEvent, IPlayerItemEquippedEvent, IPlayerEvent, IItemEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerClothingEquippedEvent(UnturnedPlayer, UnturnedClothingItem) Declaration public UnturnedPlayerClothingEquippedEvent(UnturnedPlayer player, UnturnedClothingItem item) Parameters Type Name Description UnturnedPlayer player UnturnedClothingItem item Properties | Improve this Doc View Source Type Declaration public ClothingType Type { get; } Property Value Type Description ClothingType Implements IPlayerItemEquippedEvent IPlayerEvent IItemEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Clothing.Events.UnturnedPlayerClothingEquippingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Clothing.Events.UnturnedPlayerClothingEquippingEvent.html",
    "title": "Class UnturnedPlayerClothingEquippingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerClothingEquippingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemEquippingEvent UnturnedPlayerClothingEquippingEvent Implements IPlayerItemEquippingEvent IPlayerEvent IItemEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerItemEquippingEvent.Item UnturnedPlayerItemEquippingEvent.IItemEvent.Item UnturnedPlayerItemEquippingEvent.IsCancelled UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Clothing.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerClothingEquippingEvent : UnturnedPlayerItemEquippingEvent, IPlayerItemEquippingEvent, IPlayerEvent, IItemEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerClothingEquippingEvent(UnturnedPlayer, UnturnedClothingItem) Declaration public UnturnedPlayerClothingEquippingEvent(UnturnedPlayer player, UnturnedClothingItem item) Parameters Type Name Description UnturnedPlayer player UnturnedClothingItem item Properties | Improve this Doc View Source Type Declaration public ClothingType Type { get; } Property Value Type Description ClothingType Implements IPlayerItemEquippingEvent IPlayerEvent IItemEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Clothing.Events.UnturnedPlayerClothingUnequippedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Clothing.Events.UnturnedPlayerClothingUnequippedEvent.html",
    "title": "Class UnturnedPlayerClothingUnequippedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerClothingUnequippedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemUnequippedEvent UnturnedPlayerClothingUnequippedEvent Implements IPlayerItemUnequippedEvent IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Clothing.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerClothingUnequippedEvent : UnturnedPlayerItemUnequippedEvent, IPlayerItemUnequippedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerClothingUnequippedEvent(UnturnedPlayer, ClothingType) Declaration public UnturnedPlayerClothingUnequippedEvent(UnturnedPlayer player, ClothingType type) Parameters Type Name Description UnturnedPlayer player ClothingType type Properties | Improve this Doc View Source Type Declaration public ClothingType Type { get; } Property Value Type Description ClothingType Implements IPlayerItemUnequippedEvent IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Clothing.Events.UnturnedPlayerClothingUnequippingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Clothing.Events.UnturnedPlayerClothingUnequippingEvent.html",
    "title": "Class UnturnedPlayerClothingUnequippingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerClothingUnequippingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemUnequippingEvent UnturnedPlayerClothingUnequippingEvent Implements IPlayerItemUnequippingEvent IPlayerEvent IItemEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerItemUnequippingEvent.Item UnturnedPlayerItemUnequippingEvent.IItemEvent.Item UnturnedPlayerItemUnequippingEvent.IsCancelled UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Clothing.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerClothingUnequippingEvent : UnturnedPlayerItemUnequippingEvent, IPlayerItemUnequippingEvent, IPlayerEvent, IItemEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerClothingUnequippingEvent(UnturnedPlayer, UnturnedClothingItem) Declaration public UnturnedPlayerClothingUnequippingEvent(UnturnedPlayer player, UnturnedClothingItem item) Parameters Type Name Description UnturnedPlayer player UnturnedClothingItem item Properties | Improve this Doc View Source Type Declaration public ClothingType Type { get; } Property Value Type Description ClothingType Implements IPlayerItemUnequippingEvent IPlayerEvent IItemEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Clothing.html": {
    "href": "api/OpenMod.Unturned.Players.Clothing.html",
    "title": "Namespace OpenMod.Unturned.Players.Clothing | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Clothing Enums ClothingType"
  },
  "api/OpenMod.Unturned.Players.Connections.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Connections.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Connections.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Connections.Events Classes UnturnedPlayerConnectedEvent UnturnedPlayerDisconnectedEvent UnturnedPlayerRejectedEvent"
  },
  "api/OpenMod.Unturned.Players.Connections.Events.UnturnedPlayerConnectedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Connections.Events.UnturnedPlayerConnectedEvent.html",
    "title": "Class UnturnedPlayerConnectedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerConnectedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerSpawnedEvent UnturnedPlayerConnectedEvent Implements IPlayerSpawnedEvent IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Connections.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerConnectedEvent : UnturnedPlayerSpawnedEvent, IPlayerSpawnedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerConnectedEvent(UnturnedPlayer) Declaration public UnturnedPlayerConnectedEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerSpawnedEvent IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Connections.Events.UnturnedPlayerDisconnectedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Connections.Events.UnturnedPlayerDisconnectedEvent.html",
    "title": "Class UnturnedPlayerDisconnectedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerDisconnectedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerDisconnectedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Connections.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerDisconnectedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerDisconnectedEvent(UnturnedPlayer) Declaration public UnturnedPlayerDisconnectedEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Connections.Events.UnturnedPlayerRejectedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Connections.Events.UnturnedPlayerRejectedEvent.html",
    "title": "Class UnturnedPlayerRejectedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerRejectedEvent Inheritance System.Object UnturnedPlayerRejectedEvent Namespace : OpenMod.Unturned.Players.Connections.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerRejectedEvent : Event Constructors | Improve this Doc View Source UnturnedPlayerRejectedEvent(CSteamID, ESteamRejection, String) Declaration public UnturnedPlayerRejectedEvent(CSteamID steamID, ESteamRejection rejection, string explanation) Parameters Type Name Description CSteamID steamID ESteamRejection rejection System.String explanation Properties | Improve this Doc View Source Explanation Declaration public string Explanation { get; } Property Value Type Description System.String | Improve this Doc View Source Rejection Declaration public ESteamRejection Rejection { get; } Property Value Type Description ESteamRejection | Improve this Doc View Source SteamId Declaration public CSteamID SteamId { get; } Property Value Type Description CSteamID Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Crafting.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Crafting.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Crafting.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Crafting.Events Classes UnturnedPlayerCraftingEvent"
  },
  "api/OpenMod.Unturned.Players.Crafting.Events.UnturnedPlayerCraftingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Crafting.Events.UnturnedPlayerCraftingEvent.html",
    "title": "Class UnturnedPlayerCraftingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerCraftingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerCraftingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Crafting.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerCraftingEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerCraftingEvent(UnturnedPlayer, UInt16, Byte) Declaration public UnturnedPlayerCraftingEvent(UnturnedPlayer player, ushort itemId, byte blueprintIndex) Parameters Type Name Description UnturnedPlayer player System.UInt16 itemId System.Byte blueprintIndex Properties | Improve this Doc View Source BlueprintIndex Declaration public byte BlueprintIndex { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ItemId Declaration public ushort ItemId { get; set; } Property Value Type Description System.UInt16 Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Equipment.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Equipment.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Equipment.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Equipment.Events Classes UnturnedPlayerItemEquippedEvent UnturnedPlayerItemEquippingEvent UnturnedPlayerItemUnequippedEvent UnturnedPlayerItemUnequippingEvent UnturnedPlayerPunchEvent"
  },
  "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerItemEquippedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerItemEquippedEvent.html",
    "title": "Class UnturnedPlayerItemEquippedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerItemEquippedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemEquippedEvent UnturnedPlayerClothingEquippedEvent Implements IPlayerItemEquippedEvent IPlayerEvent IItemEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Equipment.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerItemEquippedEvent : UnturnedPlayerEvent, IPlayerItemEquippedEvent, IPlayerEvent, IItemEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerItemEquippedEvent(UnturnedPlayer, UnturnedItem) Declaration public UnturnedPlayerItemEquippedEvent(UnturnedPlayer player, UnturnedItem item) Parameters Type Name Description UnturnedPlayer player UnturnedItem item Properties | Improve this Doc View Source Item Declaration public UnturnedItem Item { get; } Property Value Type Description UnturnedItem Explicit Interface Implementations | Improve this Doc View Source IItemEvent.Item Declaration IItem IItemEvent.Item { get; } Returns Type Description IItem Implements IPlayerItemEquippedEvent IPlayerEvent IItemEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerItemEquippingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerItemEquippingEvent.html",
    "title": "Class UnturnedPlayerItemEquippingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerItemEquippingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemEquippingEvent UnturnedPlayerClothingEquippingEvent Implements IPlayerItemEquippingEvent IPlayerEvent IItemEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Equipment.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerItemEquippingEvent : UnturnedPlayerEvent, IPlayerItemEquippingEvent, IPlayerEvent, IItemEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerItemEquippingEvent(UnturnedPlayer, UnturnedItem) Declaration public UnturnedPlayerItemEquippingEvent(UnturnedPlayer player, UnturnedItem item) Parameters Type Name Description UnturnedPlayer player UnturnedItem item Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Declaration public UnturnedItem Item { get; } Property Value Type Description UnturnedItem Explicit Interface Implementations | Improve this Doc View Source IItemEvent.Item Declaration IItem IItemEvent.Item { get; } Returns Type Description IItem Implements IPlayerItemEquippingEvent IPlayerEvent IItemEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerItemUnequippedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerItemUnequippedEvent.html",
    "title": "Class UnturnedPlayerItemUnequippedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerItemUnequippedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemUnequippedEvent UnturnedPlayerClothingUnequippedEvent Implements IPlayerItemUnequippedEvent IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Equipment.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerItemUnequippedEvent : UnturnedPlayerEvent, IPlayerItemUnequippedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerItemUnequippedEvent(UnturnedPlayer) Declaration public UnturnedPlayerItemUnequippedEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerItemUnequippedEvent IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerItemUnequippingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerItemUnequippingEvent.html",
    "title": "Class UnturnedPlayerItemUnequippingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerItemUnequippingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemUnequippingEvent UnturnedPlayerClothingUnequippingEvent Implements IPlayerItemUnequippingEvent IPlayerEvent IItemEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Equipment.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerItemUnequippingEvent : UnturnedPlayerEvent, IPlayerItemUnequippingEvent, IPlayerEvent, IItemEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerItemUnequippingEvent(UnturnedPlayer, UnturnedItem) Declaration public UnturnedPlayerItemUnequippingEvent(UnturnedPlayer player, UnturnedItem item) Parameters Type Name Description UnturnedPlayer player UnturnedItem item Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Declaration public UnturnedItem Item { get; } Property Value Type Description UnturnedItem Explicit Interface Implementations | Improve this Doc View Source IItemEvent.Item Declaration IItem IItemEvent.Item { get; } Returns Type Description IItem Implements IPlayerItemUnequippingEvent IPlayerEvent IItemEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerPunchEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Equipment.Events.UnturnedPlayerPunchEvent.html",
    "title": "Class UnturnedPlayerPunchEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerPunchEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerPunchEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Equipment.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerPunchEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerPunchEvent(UnturnedPlayer, EPlayerPunch) Declaration public UnturnedPlayerPunchEvent(UnturnedPlayer player, EPlayerPunch punch) Parameters Type Name Description UnturnedPlayer player EPlayerPunch punch Properties | Improve this Doc View Source Punch Declaration public EPlayerPunch Punch { get; } Property Value Type Description EPlayerPunch Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.html": {
    "href": "api/OpenMod.Unturned.Players.html",
    "title": "Namespace OpenMod.Unturned.Players | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players Classes UnturnedPlayer UnturnedPlayerAsset UnturnedPlayerCommandParameterResolveProvider"
  },
  "api/OpenMod.Unturned.Players.Input.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Input.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Input.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Input.Events Classes UnturnedPlayerPluginKeyStateChangedEvent"
  },
  "api/OpenMod.Unturned.Players.Input.Events.UnturnedPlayerPluginKeyStateChangedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Input.Events.UnturnedPlayerPluginKeyStateChangedEvent.html",
    "title": "Class UnturnedPlayerPluginKeyStateChangedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerPluginKeyStateChangedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerPluginKeyStateChangedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Input.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerPluginKeyStateChangedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerPluginKeyStateChangedEvent(UnturnedPlayer, Byte, Boolean) Declaration public UnturnedPlayerPluginKeyStateChangedEvent(UnturnedPlayer player, byte key, bool state) Parameters Type Name Description UnturnedPlayer player System.Byte key System.Boolean state Properties | Improve this Doc View Source Key Declaration public byte Key { get; } Property Value Type Description System.Byte | Improve this Doc View Source State Declaration public bool State { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Interacting.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Interacting.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Interacting.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Interacting.Events Classes UnturnedPlayerBedClaimingEvent"
  },
  "api/OpenMod.Unturned.Players.Interacting.Events.UnturnedPlayerBedClaimingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Interacting.Events.UnturnedPlayerBedClaimingEvent.html",
    "title": "Class UnturnedPlayerBedClaimingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerBedClaimingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerBedClaimingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Interacting.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerBedClaimingEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerBedClaimingEvent(InteractableBed, UnturnedPlayer) Declaration public UnturnedPlayerBedClaimingEvent(InteractableBed bed, UnturnedPlayer player) Parameters Type Name Description InteractableBed bed UnturnedPlayer player Properties | Improve this Doc View Source Bed Declaration public InteractableBed Bed { get; } Property Value Type Description InteractableBed | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Inventory.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Inventory.Events Classes UnturnedPlayerClosedStorageEvent UnturnedPlayerDroppedItemEvent UnturnedPlayerInventoryResizedEvent UnturnedPlayerInventoryUpdatedEvent UnturnedPlayerItemAddedEvent UnturnedPlayerItemRemovedEvent UnturnedPlayerItemUpdatedEvent UnturnedPlayerOpenedStorageEvent UnturnedPlayerTakingItemEvent"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerClosedStorageEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerClosedStorageEvent.html",
    "title": "Class UnturnedPlayerClosedStorageEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerClosedStorageEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerClosedStorageEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Inventory.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerClosedStorageEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerClosedStorageEvent(UnturnedPlayer) Declaration public UnturnedPlayerClosedStorageEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerDroppedItemEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerDroppedItemEvent.html",
    "title": "Class UnturnedPlayerDroppedItemEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerDroppedItemEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerDroppedItemEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Inventory.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerDroppedItemEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerDroppedItemEvent(UnturnedPlayer, Item) Declaration public UnturnedPlayerDroppedItemEvent(UnturnedPlayer player, Item item) Parameters Type Name Description UnturnedPlayer player Item item Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Item Declaration public Item Item { get; } Property Value Type Description Item Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerInventoryResizedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerInventoryResizedEvent.html",
    "title": "Class UnturnedPlayerInventoryResizedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerInventoryResizedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerInventoryResizedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Inventory.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerInventoryResizedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerInventoryResizedEvent(UnturnedPlayer, Byte, Byte, Byte) Declaration public UnturnedPlayerInventoryResizedEvent(UnturnedPlayer player, byte page, byte width, byte height) Parameters Type Name Description UnturnedPlayer player System.Byte page System.Byte width System.Byte height Properties | Improve this Doc View Source Height Declaration public byte Height { get; } Property Value Type Description System.Byte | Improve this Doc View Source Page Declaration public byte Page { get; } Property Value Type Description System.Byte | Improve this Doc View Source Width Declaration public byte Width { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerInventoryUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerInventoryUpdatedEvent.html",
    "title": "Class UnturnedPlayerInventoryUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerInventoryUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerInventoryUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Inventory.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerInventoryUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerInventoryUpdatedEvent(UnturnedPlayer) Declaration public UnturnedPlayerInventoryUpdatedEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerItemAddedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerItemAddedEvent.html",
    "title": "Class UnturnedPlayerItemAddedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerItemAddedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemAddedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Inventory.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerItemAddedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerItemAddedEvent(UnturnedPlayer, Byte, Byte, ItemJar) Declaration public UnturnedPlayerItemAddedEvent(UnturnedPlayer player, byte page, byte index, ItemJar itemJar) Parameters Type Name Description UnturnedPlayer player System.Byte page System.Byte index ItemJar itemJar Properties | Improve this Doc View Source Index Declaration public byte Index { get; } Property Value Type Description System.Byte | Improve this Doc View Source ItemJar Declaration public ItemJar ItemJar { get; } Property Value Type Description ItemJar | Improve this Doc View Source Page Declaration public byte Page { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerItemRemovedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerItemRemovedEvent.html",
    "title": "Class UnturnedPlayerItemRemovedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerItemRemovedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemRemovedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Inventory.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerItemRemovedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerItemRemovedEvent(UnturnedPlayer, Byte, Byte, ItemJar) Declaration public UnturnedPlayerItemRemovedEvent(UnturnedPlayer player, byte page, byte index, ItemJar itemJar) Parameters Type Name Description UnturnedPlayer player System.Byte page System.Byte index ItemJar itemJar Properties | Improve this Doc View Source Index Declaration public byte Index { get; } Property Value Type Description System.Byte | Improve this Doc View Source ItemJar Declaration public ItemJar ItemJar { get; } Property Value Type Description ItemJar | Improve this Doc View Source Page Declaration public byte Page { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerItemUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerItemUpdatedEvent.html",
    "title": "Class UnturnedPlayerItemUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerItemUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerItemUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Inventory.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerItemUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerItemUpdatedEvent(UnturnedPlayer, Byte, Byte, ItemJar) Declaration public UnturnedPlayerItemUpdatedEvent(UnturnedPlayer player, byte page, byte index, ItemJar itemJar) Parameters Type Name Description UnturnedPlayer player System.Byte page System.Byte index ItemJar itemJar Properties | Improve this Doc View Source Index Declaration public byte Index { get; } Property Value Type Description System.Byte | Improve this Doc View Source ItemJar Declaration public ItemJar ItemJar { get; } Property Value Type Description ItemJar | Improve this Doc View Source Page Declaration public byte Page { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerOpenedStorageEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerOpenedStorageEvent.html",
    "title": "Class UnturnedPlayerOpenedStorageEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerOpenedStorageEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerOpenedStorageEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Inventory.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerOpenedStorageEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerOpenedStorageEvent(UnturnedPlayer) Declaration public UnturnedPlayerOpenedStorageEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerTakingItemEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Inventory.Events.UnturnedPlayerTakingItemEvent.html",
    "title": "Class UnturnedPlayerTakingItemEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerTakingItemEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerTakingItemEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Inventory.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerTakingItemEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerTakingItemEvent(UnturnedPlayer, Byte, Byte, UInt32, Byte, Byte, Byte, Byte, ItemData) Declaration public UnturnedPlayerTakingItemEvent(UnturnedPlayer player, byte regionX, byte regionY, uint instanceId, byte inventoryX, byte inventoryY, byte inventoryRotation, byte inventoryPage, ItemData itemData) Parameters Type Name Description UnturnedPlayer player System.Byte regionX System.Byte regionY System.UInt32 instanceId System.Byte inventoryX System.Byte inventoryY System.Byte inventoryRotation System.Byte inventoryPage ItemData itemData Properties | Improve this Doc View Source InstanceId Declaration public uint InstanceId { get; } Property Value Type Description System.UInt32 | Improve this Doc View Source InventoryPage Declaration public byte InventoryPage { get; } Property Value Type Description System.Byte | Improve this Doc View Source InventoryRotation Declaration public byte InventoryRotation { get; } Property Value Type Description System.Byte | Improve this Doc View Source InventoryX Declaration public byte InventoryX { get; } Property Value Type Description System.Byte | Improve this Doc View Source InventoryY Declaration public byte InventoryY { get; } Property Value Type Description System.Byte | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ItemData Declaration public ItemData ItemData { get; } Property Value Type Description ItemData | Improve this Doc View Source RegionX Declaration public byte RegionX { get; } Property Value Type Description System.Byte | Improve this Doc View Source RegionY Declaration public byte RegionY { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Life.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Life.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Life.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Life.Events Classes UnturnedPlayerDamagedEvent UnturnedPlayerDamagingEvent UnturnedPlayerDeathEvent UnturnedPlayerDyingEvent UnturnedPlayerFallDamagingEvent UnturnedPlayerRevivedEvent UnturnedPlayerSpawnedEvent"
  },
  "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerDamagedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerDamagedEvent.html",
    "title": "Class UnturnedPlayerDamagedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerDamagedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerDamagedEvent Implements IPlayerDamagedEvent IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Life.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerDamagedEvent : UnturnedPlayerEvent, IPlayerDamagedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerDamagedEvent(UnturnedPlayer, Byte, EDeathCause, ELimb, CSteamID, IDamageSource) Declaration public UnturnedPlayerDamagedEvent(UnturnedPlayer player, byte damageAmount, EDeathCause cause, ELimb limb, CSteamID killer, IDamageSource damageSource) Parameters Type Name Description UnturnedPlayer player System.Byte damageAmount EDeathCause cause ELimb limb CSteamID killer IDamageSource damageSource Properties | Improve this Doc View Source Cause Declaration public EDeathCause Cause { get; } Property Value Type Description EDeathCause | Improve this Doc View Source DamageAmount Declaration public byte DamageAmount { get; } Property Value Type Description System.Byte | Improve this Doc View Source DamageSource Declaration public IDamageSource DamageSource { get; } Property Value Type Description IDamageSource | Improve this Doc View Source Killer Declaration public CSteamID Killer { get; set; } Property Value Type Description CSteamID | Improve this Doc View Source Limb Declaration public ELimb Limb { get; set; } Property Value Type Description ELimb Explicit Interface Implementations | Improve this Doc View Source IPlayerDamagedEvent.DamageAmount Declaration double IPlayerDamagedEvent.DamageAmount { get; } Returns Type Description System.Double Implements IPlayerDamagedEvent IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerDamagingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerDamagingEvent.html",
    "title": "Class UnturnedPlayerDamagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerDamagingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerDamagingEvent UnturnedPlayerDyingEvent Implements IPlayerDamagingEvent IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Life.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerDamagingEvent : UnturnedPlayerEvent, IPlayerDamagingEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerDamagingEvent(UnturnedPlayer, Byte, EDeathCause, ELimb, CSteamID, IDamageSource, Boolean, System.Numerics.Vector3, ERagdollEffect, Boolean) Declaration public UnturnedPlayerDamagingEvent(UnturnedPlayer player, byte amount, EDeathCause cause, ELimb limb, CSteamID killer, IDamageSource source, bool trackKill, System.Numerics.Vector3 ragdoll, ERagdollEffect ragdollEffect, bool canCauseBleeding) Parameters Type Name Description UnturnedPlayer player System.Byte amount EDeathCause cause ELimb limb CSteamID killer IDamageSource source System.Boolean trackKill System.Numerics.Vector3 ragdoll ERagdollEffect ragdollEffect System.Boolean canCauseBleeding Properties | Improve this Doc View Source CanCauseBleeding Declaration public bool CanCauseBleeding { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Cause Declaration public EDeathCause Cause { get; set; } Property Value Type Description EDeathCause | Improve this Doc View Source DamageAmount Declaration public byte DamageAmount { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source DamageSource Declaration public IDamageSource DamageSource { get; } Property Value Type Description IDamageSource | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Killer Declaration public CSteamID Killer { get; set; } Property Value Type Description CSteamID | Improve this Doc View Source Limb Declaration public ELimb Limb { get; set; } Property Value Type Description ELimb | Improve this Doc View Source Ragdoll Declaration public System.Numerics.Vector3 Ragdoll { get; set; } Property Value Type Description System.Numerics.Vector3 | Improve this Doc View Source RagdollEffect Declaration public ERagdollEffect RagdollEffect { get; set; } Property Value Type Description ERagdollEffect | Improve this Doc View Source TrackKill Declaration public bool TrackKill { get; set; } Property Value Type Description System.Boolean Explicit Interface Implementations | Improve this Doc View Source IPlayerDamagingEvent.DamageAmount Declaration double IPlayerDamagingEvent.DamageAmount { get; set; } Returns Type Description System.Double Implements IPlayerDamagingEvent IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerDeathEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerDeathEvent.html",
    "title": "Class UnturnedPlayerDeathEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerDeathEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerDeathEvent Implements IPlayerDeathEvent IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Life.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerDeathEvent : UnturnedPlayerEvent, IPlayerDeathEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerDeathEvent(UnturnedPlayer, EDeathCause, ELimb, CSteamID) Declaration public UnturnedPlayerDeathEvent(UnturnedPlayer player, EDeathCause cause, ELimb limb, CSteamID instigator) Parameters Type Name Description UnturnedPlayer player EDeathCause cause ELimb limb CSteamID instigator Properties | Improve this Doc View Source DeathCause Declaration public EDeathCause DeathCause { get; } Property Value Type Description EDeathCause | Improve this Doc View Source DeathPosition Declaration public Vector3 DeathPosition { get; } Property Value Type Description Vector3 | Improve this Doc View Source Instigator Declaration public CSteamID Instigator { get; } Property Value Type Description CSteamID | Improve this Doc View Source Limb Declaration public ELimb Limb { get; } Property Value Type Description ELimb Implements IPlayerDeathEvent IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerDyingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerDyingEvent.html",
    "title": "Class UnturnedPlayerDyingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerDyingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerDamagingEvent UnturnedPlayerDyingEvent Implements IPlayerDyingEvent IPlayerDamagingEvent IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerDamagingEvent.DamageAmount UnturnedPlayerDamagingEvent.IPlayerDamagingEvent.DamageAmount UnturnedPlayerDamagingEvent.Cause UnturnedPlayerDamagingEvent.Limb UnturnedPlayerDamagingEvent.Killer UnturnedPlayerDamagingEvent.DamageSource UnturnedPlayerDamagingEvent.TrackKill UnturnedPlayerDamagingEvent.Ragdoll UnturnedPlayerDamagingEvent.RagdollEffect UnturnedPlayerDamagingEvent.CanCauseBleeding UnturnedPlayerDamagingEvent.IsCancelled UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Life.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerDyingEvent : UnturnedPlayerDamagingEvent, IPlayerDyingEvent, IPlayerDamagingEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerDyingEvent(UnturnedPlayer, Byte, EDeathCause, ELimb, CSteamID, IDamageSource, Boolean, Vector3, ERagdollEffect, Boolean) Declaration public UnturnedPlayerDyingEvent(UnturnedPlayer player, byte amount, EDeathCause cause, ELimb limb, CSteamID killer, IDamageSource source, bool trackKill, Vector3 ragdoll, ERagdollEffect ragdollEffect, bool canCauseBleeding) Parameters Type Name Description UnturnedPlayer player System.Byte amount EDeathCause cause ELimb limb CSteamID killer IDamageSource source System.Boolean trackKill Vector3 ragdoll ERagdollEffect ragdollEffect System.Boolean canCauseBleeding Implements IPlayerDyingEvent IPlayerDamagingEvent IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerFallDamagingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerFallDamagingEvent.html",
    "title": "Class UnturnedPlayerFallDamagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerFallDamagingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerFallDamagingEvent Implements IPlayerDamagingEvent IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Life.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerFallDamagingEvent : UnturnedPlayerEvent, IPlayerDamagingEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerFallDamagingEvent(UnturnedPlayer, Single, Byte, IDamageSource, Boolean) Declaration public UnturnedPlayerFallDamagingEvent(UnturnedPlayer player, float velocity, byte amount, IDamageSource source, bool shouldBreakLegs) Parameters Type Name Description UnturnedPlayer player System.Single velocity System.Byte amount IDamageSource source System.Boolean shouldBreakLegs Properties | Improve this Doc View Source DamageAmount Declaration public byte DamageAmount { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source DamageSource Declaration public IDamageSource DamageSource { get; } Property Value Type Description IDamageSource | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldBreakLegs Declaration public bool ShouldBreakLegs { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Velocity Declaration public float Velocity { get; } Property Value Type Description System.Single Explicit Interface Implementations | Improve this Doc View Source IPlayerDamagingEvent.DamageAmount Declaration double IPlayerDamagingEvent.DamageAmount { get; set; } Returns Type Description System.Double Implements IPlayerDamagingEvent IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerRevivedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerRevivedEvent.html",
    "title": "Class UnturnedPlayerRevivedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerRevivedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerSpawnedEvent UnturnedPlayerRevivedEvent Implements IPlayerSpawnedEvent IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Life.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerRevivedEvent : UnturnedPlayerSpawnedEvent, IPlayerSpawnedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerRevivedEvent(UnturnedPlayer) Declaration public UnturnedPlayerRevivedEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerSpawnedEvent IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerSpawnedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Life.Events.UnturnedPlayerSpawnedEvent.html",
    "title": "Class UnturnedPlayerSpawnedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerSpawnedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerSpawnedEvent UnturnedPlayerConnectedEvent UnturnedPlayerRevivedEvent Implements IPlayerSpawnedEvent IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Life.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerSpawnedEvent : UnturnedPlayerEvent, IPlayerSpawnedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerSpawnedEvent(UnturnedPlayer) Declaration protected UnturnedPlayerSpawnedEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerSpawnedEvent IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Movement.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Movement.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Movement.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Movement.Events Classes UnturnedPlayerGestureUpdatedEvent UnturnedPlayerJumpedEvent UnturnedPlayerSafetyUpdatedEvent UnturnedPlayerStanceUpdatedEvent UnturnedPlayerTeleportingEvent"
  },
  "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerGestureUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerGestureUpdatedEvent.html",
    "title": "Class UnturnedPlayerGestureUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerGestureUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerGestureUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Movement.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerGestureUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerGestureUpdatedEvent(UnturnedPlayer, EPlayerGesture) Declaration public UnturnedPlayerGestureUpdatedEvent(UnturnedPlayer player, EPlayerGesture gesture) Parameters Type Name Description UnturnedPlayer player EPlayerGesture gesture Properties | Improve this Doc View Source Gesture Declaration public EPlayerGesture Gesture { get; } Property Value Type Description EPlayerGesture Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerJumpedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerJumpedEvent.html",
    "title": "Class UnturnedPlayerJumpedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerJumpedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerJumpedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Movement.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerJumpedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerJumpedEvent(UnturnedPlayer) Declaration public UnturnedPlayerJumpedEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerSafetyUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerSafetyUpdatedEvent.html",
    "title": "Class UnturnedPlayerSafetyUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerSafetyUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerSafetyUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Movement.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerSafetyUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerSafetyUpdatedEvent(UnturnedPlayer, Boolean) Declaration public UnturnedPlayerSafetyUpdatedEvent(UnturnedPlayer player, bool safe) Parameters Type Name Description UnturnedPlayer player System.Boolean safe Properties | Improve this Doc View Source IsSafe Declaration public bool IsSafe { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerStanceUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerStanceUpdatedEvent.html",
    "title": "Class UnturnedPlayerStanceUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerStanceUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStanceUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Movement.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerStanceUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerStanceUpdatedEvent(UnturnedPlayer) Declaration public UnturnedPlayerStanceUpdatedEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerTeleportingEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Movement.Events.UnturnedPlayerTeleportingEvent.html",
    "title": "Class UnturnedPlayerTeleportingEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerTeleportingEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerTeleportingEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Movement.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerTeleportingEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerTeleportingEvent(UnturnedPlayer, Vector3, Single) Declaration public UnturnedPlayerTeleportingEvent(UnturnedPlayer player, Vector3 position, float yaw) Parameters Type Name Description UnturnedPlayer player Vector3 position System.Single yaw Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Position Declaration public Vector3 Position { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source Yaw Declaration public float Yaw { get; set; } Property Value Type Description System.Single Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Quests.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Quests.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Quests.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Quests.Events Classes UnturnedPlayerFlagChangedEvent UnturnedPlayerGroupChangedEvent UnturnedPlayerGroupIdChangedEvent UnturnedPlayerGroupOrRankChangedEvent UnturnedPlayerGroupRankChangedEvent UnturnedPlayerJoiningGroupEvent UnturnedPlayerLeavingGroupEvent"
  },
  "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerFlagChangedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerFlagChangedEvent.html",
    "title": "Class UnturnedPlayerFlagChangedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerFlagChangedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerFlagChangedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Quests.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerFlagChangedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerFlagChangedEvent(UnturnedPlayer, PlayerQuestFlag) Declaration public UnturnedPlayerFlagChangedEvent(UnturnedPlayer player, PlayerQuestFlag flag) Parameters Type Name Description UnturnedPlayer player PlayerQuestFlag flag Properties | Improve this Doc View Source Flag Declaration public PlayerQuestFlag Flag { get; } Property Value Type Description PlayerQuestFlag Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerGroupChangedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerGroupChangedEvent.html",
    "title": "Class UnturnedPlayerGroupChangedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerGroupChangedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerGroupOrRankChangedEvent UnturnedPlayerGroupChangedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerGroupOrRankChangedEvent.OldGroupId UnturnedPlayerGroupOrRankChangedEvent.OldGroupRank UnturnedPlayerGroupOrRankChangedEvent.NewGroupId UnturnedPlayerGroupOrRankChangedEvent.NewGroupRank UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Quests.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerGroupChangedEvent : UnturnedPlayerGroupOrRankChangedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerGroupChangedEvent(UnturnedPlayer, CSteamID, EPlayerGroupRank, CSteamID, EPlayerGroupRank) Declaration public UnturnedPlayerGroupChangedEvent(UnturnedPlayer player, CSteamID oldGroupId, EPlayerGroupRank oldGroupRank, CSteamID newGroupId, EPlayerGroupRank newGroupRank) Parameters Type Name Description UnturnedPlayer player CSteamID oldGroupId EPlayerGroupRank oldGroupRank CSteamID newGroupId EPlayerGroupRank newGroupRank Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerGroupIdChangedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerGroupIdChangedEvent.html",
    "title": "Class UnturnedPlayerGroupIdChangedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerGroupIdChangedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerGroupIdChangedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Quests.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerGroupIdChangedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerGroupIdChangedEvent(UnturnedPlayer, CSteamID, CSteamID) Declaration public UnturnedPlayerGroupIdChangedEvent(UnturnedPlayer player, CSteamID oldGroupId, CSteamID newGroupId) Parameters Type Name Description UnturnedPlayer player CSteamID oldGroupId CSteamID newGroupId Properties | Improve this Doc View Source NewGroupId Declaration public CSteamID NewGroupId { get; } Property Value Type Description CSteamID | Improve this Doc View Source OldGroupId Declaration public CSteamID OldGroupId { get; } Property Value Type Description CSteamID Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerGroupOrRankChangedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerGroupOrRankChangedEvent.html",
    "title": "Class UnturnedPlayerGroupOrRankChangedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerGroupOrRankChangedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerGroupOrRankChangedEvent UnturnedPlayerGroupChangedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Quests.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerGroupOrRankChangedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerGroupOrRankChangedEvent(UnturnedPlayer, CSteamID, EPlayerGroupRank, CSteamID, EPlayerGroupRank) Declaration public UnturnedPlayerGroupOrRankChangedEvent(UnturnedPlayer player, CSteamID oldGroupId, EPlayerGroupRank oldGroupRank, CSteamID newGroupId, EPlayerGroupRank newGroupRank) Parameters Type Name Description UnturnedPlayer player CSteamID oldGroupId EPlayerGroupRank oldGroupRank CSteamID newGroupId EPlayerGroupRank newGroupRank Properties | Improve this Doc View Source NewGroupId Declaration public CSteamID NewGroupId { get; } Property Value Type Description CSteamID | Improve this Doc View Source NewGroupRank Declaration public EPlayerGroupRank NewGroupRank { get; } Property Value Type Description EPlayerGroupRank | Improve this Doc View Source OldGroupId Declaration public CSteamID OldGroupId { get; } Property Value Type Description CSteamID | Improve this Doc View Source OldGroupRank Declaration public EPlayerGroupRank OldGroupRank { get; } Property Value Type Description EPlayerGroupRank Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerGroupRankChangedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerGroupRankChangedEvent.html",
    "title": "Class UnturnedPlayerGroupRankChangedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerGroupRankChangedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerGroupRankChangedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Quests.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerGroupRankChangedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerGroupRankChangedEvent(UnturnedPlayer, EPlayerGroupRank, EPlayerGroupRank) Declaration public UnturnedPlayerGroupRankChangedEvent(UnturnedPlayer player, EPlayerGroupRank oldGroupRank, EPlayerGroupRank newGroupRank) Parameters Type Name Description UnturnedPlayer player EPlayerGroupRank oldGroupRank EPlayerGroupRank newGroupRank Properties | Improve this Doc View Source NewGroupRank Declaration public EPlayerGroupRank NewGroupRank { get; } Property Value Type Description EPlayerGroupRank | Improve this Doc View Source OldGroupRank Declaration public EPlayerGroupRank OldGroupRank { get; } Property Value Type Description EPlayerGroupRank Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerJoiningGroupEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerJoiningGroupEvent.html",
    "title": "Class UnturnedPlayerJoiningGroupEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerJoiningGroupEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerJoiningGroupEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Quests.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerJoiningGroupEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerJoiningGroupEvent(UnturnedPlayer, CSteamID, EPlayerGroupRank) Declaration public UnturnedPlayerJoiningGroupEvent(UnturnedPlayer player, CSteamID newGroupId, EPlayerGroupRank newGroupRank) Parameters Type Name Description UnturnedPlayer player CSteamID newGroupId EPlayerGroupRank newGroupRank Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NewGroupId Declaration public CSteamID NewGroupId { get; } Property Value Type Description CSteamID | Improve this Doc View Source NewGroupRank Declaration public EPlayerGroupRank NewGroupRank { get; } Property Value Type Description EPlayerGroupRank Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerLeavingGroupEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Quests.Events.UnturnedPlayerLeavingGroupEvent.html",
    "title": "Class UnturnedPlayerLeavingGroupEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerLeavingGroupEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerLeavingGroupEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Quests.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerLeavingGroupEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerLeavingGroupEvent(UnturnedPlayer) Declaration public UnturnedPlayerLeavingGroupEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Skills.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Skills.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Skills.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Skills.Events Classes UnturnedPlayerExperienceUpdatedEvent UnturnedPlayerReputationUpdatedEvent"
  },
  "api/OpenMod.Unturned.Players.Skills.Events.UnturnedPlayerExperienceUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Skills.Events.UnturnedPlayerExperienceUpdatedEvent.html",
    "title": "Class UnturnedPlayerExperienceUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerExperienceUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerExperienceUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Skills.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerExperienceUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerExperienceUpdatedEvent(UnturnedPlayer, UInt32) Declaration public UnturnedPlayerExperienceUpdatedEvent(UnturnedPlayer player, uint experience) Parameters Type Name Description UnturnedPlayer player System.UInt32 experience Properties | Improve this Doc View Source Experience Declaration public uint Experience { get; } Property Value Type Description System.UInt32 Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Skills.Events.UnturnedPlayerReputationUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Skills.Events.UnturnedPlayerReputationUpdatedEvent.html",
    "title": "Class UnturnedPlayerReputationUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerReputationUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerReputationUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Skills.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerReputationUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerReputationUpdatedEvent(UnturnedPlayer, Int32) Declaration public UnturnedPlayerReputationUpdatedEvent(UnturnedPlayer player, int reputation) Parameters Type Name Description UnturnedPlayer player System.Int32 reputation Properties | Improve this Doc View Source Reputation Declaration public int Reputation { get; } Property Value Type Description System.Int32 Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Stats.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Stats.Events Classes UnturnedPlayerBleedingUpdatedEvent UnturnedPlayerBrokenUpdatedEvent UnturnedPlayerFoodUpdatedEvent UnturnedPlayerHealthUpdatedEvent UnturnedPlayerLifeUpdatedEvent UnturnedPlayerOxygenUpdatedEvent UnturnedPlayerStaminaUpdatedEvent UnturnedPlayerStatIncrementedEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerTemperatureUpdatedEvent UnturnedPlayerVirusUpdatedEvent UnturnedPlayerVisionUpdatedEvent UnturnedPlayerWaterUpdatedEvent"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerBleedingUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerBleedingUpdatedEvent.html",
    "title": "Class UnturnedPlayerBleedingUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerBleedingUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerBleedingUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerBleedingUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerBleedingUpdatedEvent(UnturnedPlayer, Boolean) Declaration public UnturnedPlayerBleedingUpdatedEvent(UnturnedPlayer player, bool isBleeding) Parameters Type Name Description UnturnedPlayer player System.Boolean isBleeding Properties | Improve this Doc View Source IsBleeding Declaration public bool IsBleeding { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerBrokenUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerBrokenUpdatedEvent.html",
    "title": "Class UnturnedPlayerBrokenUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerBrokenUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerBrokenUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerBrokenUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerBrokenUpdatedEvent(UnturnedPlayer, Boolean) Declaration public UnturnedPlayerBrokenUpdatedEvent(UnturnedPlayer player, bool isBroken) Parameters Type Name Description UnturnedPlayer player System.Boolean isBroken Properties | Improve this Doc View Source IsBroken Declaration public bool IsBroken { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerFoodUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerFoodUpdatedEvent.html",
    "title": "Class UnturnedPlayerFoodUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerFoodUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerFoodUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerFoodUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerFoodUpdatedEvent(UnturnedPlayer, Byte) Declaration public UnturnedPlayerFoodUpdatedEvent(UnturnedPlayer player, byte food) Parameters Type Name Description UnturnedPlayer player System.Byte food Properties | Improve this Doc View Source Food Declaration public byte Food { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerHealthUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerHealthUpdatedEvent.html",
    "title": "Class UnturnedPlayerHealthUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerHealthUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerHealthUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerHealthUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerHealthUpdatedEvent(UnturnedPlayer, Byte) Declaration public UnturnedPlayerHealthUpdatedEvent(UnturnedPlayer player, byte health) Parameters Type Name Description UnturnedPlayer player System.Byte health Properties | Improve this Doc View Source Health Declaration public byte Health { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerLifeUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerLifeUpdatedEvent.html",
    "title": "Class UnturnedPlayerLifeUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerLifeUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerLifeUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerLifeUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerLifeUpdatedEvent(UnturnedPlayer, Boolean) Declaration public UnturnedPlayerLifeUpdatedEvent(UnturnedPlayer player, bool isDead) Parameters Type Name Description UnturnedPlayer player System.Boolean isDead Properties | Improve this Doc View Source IsDead Declaration public bool IsDead { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerOxygenUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerOxygenUpdatedEvent.html",
    "title": "Class UnturnedPlayerOxygenUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerOxygenUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerOxygenUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerOxygenUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerOxygenUpdatedEvent(UnturnedPlayer, Byte) Declaration public UnturnedPlayerOxygenUpdatedEvent(UnturnedPlayer player, byte oxygen) Parameters Type Name Description UnturnedPlayer player System.Byte oxygen Properties | Improve this Doc View Source Oxygen Declaration public byte Oxygen { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerStaminaUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerStaminaUpdatedEvent.html",
    "title": "Class UnturnedPlayerStaminaUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerStaminaUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerStaminaUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerStaminaUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerStaminaUpdatedEvent(UnturnedPlayer, Byte) Declaration public UnturnedPlayerStaminaUpdatedEvent(UnturnedPlayer player, byte stamina) Parameters Type Name Description UnturnedPlayer player System.Byte stamina Properties | Improve this Doc View Source Stamina Declaration public byte Stamina { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerStatIncrementedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerStatIncrementedEvent.html",
    "title": "Class UnturnedPlayerStatIncrementedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerStatIncrementedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerStatIncrementedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerStatIncrementedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerStatIncrementedEvent(UnturnedPlayer, EPlayerStat) Declaration public UnturnedPlayerStatIncrementedEvent(UnturnedPlayer player, EPlayerStat stat) Parameters Type Name Description UnturnedPlayer player EPlayerStat stat Properties | Improve this Doc View Source Stat Declaration public EPlayerStat Stat { get; } Property Value Type Description EPlayerStat Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerStatUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerStatUpdatedEvent.html",
    "title": "Class UnturnedPlayerStatUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerStatUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerBleedingUpdatedEvent UnturnedPlayerBrokenUpdatedEvent UnturnedPlayerFoodUpdatedEvent UnturnedPlayerHealthUpdatedEvent UnturnedPlayerLifeUpdatedEvent UnturnedPlayerOxygenUpdatedEvent UnturnedPlayerStaminaUpdatedEvent UnturnedPlayerStatIncrementedEvent UnturnedPlayerTemperatureUpdatedEvent UnturnedPlayerVirusUpdatedEvent UnturnedPlayerVisionUpdatedEvent UnturnedPlayerWaterUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedPlayerStatUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerStatUpdatedEvent(UnturnedPlayer) Declaration protected UnturnedPlayerStatUpdatedEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerTemperatureUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerTemperatureUpdatedEvent.html",
    "title": "Class UnturnedPlayerTemperatureUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerTemperatureUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerTemperatureUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerTemperatureUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerTemperatureUpdatedEvent(UnturnedPlayer, EPlayerTemperature) Declaration public UnturnedPlayerTemperatureUpdatedEvent(UnturnedPlayer player, EPlayerTemperature temperature) Parameters Type Name Description UnturnedPlayer player EPlayerTemperature temperature Properties | Improve this Doc View Source Temperature Declaration public EPlayerTemperature Temperature { get; } Property Value Type Description EPlayerTemperature Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerVirusUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerVirusUpdatedEvent.html",
    "title": "Class UnturnedPlayerVirusUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerVirusUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerVirusUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerVirusUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerVirusUpdatedEvent(UnturnedPlayer, Byte) Declaration public UnturnedPlayerVirusUpdatedEvent(UnturnedPlayer player, byte virus) Parameters Type Name Description UnturnedPlayer player System.Byte virus Properties | Improve this Doc View Source Virus Declaration public byte Virus { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerVisionUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerVisionUpdatedEvent.html",
    "title": "Class UnturnedPlayerVisionUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerVisionUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerVisionUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerVisionUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerVisionUpdatedEvent(UnturnedPlayer, Boolean) Declaration public UnturnedPlayerVisionUpdatedEvent(UnturnedPlayer player, bool isViewing) Parameters Type Name Description UnturnedPlayer player System.Boolean isViewing Properties | Improve this Doc View Source IsViewing Declaration public bool IsViewing { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerWaterUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Stats.Events.UnturnedPlayerWaterUpdatedEvent.html",
    "title": "Class UnturnedPlayerWaterUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerWaterUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerStatUpdatedEvent UnturnedPlayerWaterUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Stats.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerWaterUpdatedEvent : UnturnedPlayerStatUpdatedEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerWaterUpdatedEvent(UnturnedPlayer, Byte) Declaration public UnturnedPlayerWaterUpdatedEvent(UnturnedPlayer player, byte water) Parameters Type Name Description UnturnedPlayer player System.Byte water Properties | Improve this Doc View Source Water Declaration public byte Water { get; } Property Value Type Description System.Byte Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.UI.Events.html": {
    "href": "api/OpenMod.Unturned.Players.UI.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.UI.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.UI.Events Classes UnturnedPlayerButtonClickedEvent UnturnedPlayerTextInputtedEvent UnturnedPlayerUIEvent"
  },
  "api/OpenMod.Unturned.Players.UI.Events.UnturnedPlayerButtonClickedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.UI.Events.UnturnedPlayerButtonClickedEvent.html",
    "title": "Class UnturnedPlayerButtonClickedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerButtonClickedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerUIEvent UnturnedPlayerButtonClickedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.UI.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerButtonClickedEvent : UnturnedPlayerUIEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerButtonClickedEvent(UnturnedPlayer, String) Declaration public UnturnedPlayerButtonClickedEvent(UnturnedPlayer player, string buttonName) Parameters Type Name Description UnturnedPlayer player System.String buttonName Properties | Improve this Doc View Source ButtonName Declaration public string ButtonName { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.UI.Events.UnturnedPlayerTextInputtedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.UI.Events.UnturnedPlayerTextInputtedEvent.html",
    "title": "Class UnturnedPlayerTextInputtedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerTextInputtedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerUIEvent UnturnedPlayerTextInputtedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.UI.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerTextInputtedEvent : UnturnedPlayerUIEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerTextInputtedEvent(UnturnedPlayer, String, String) Declaration public UnturnedPlayerTextInputtedEvent(UnturnedPlayer player, string textInputName, string text) Parameters Type Name Description UnturnedPlayer player System.String textInputName System.String text Properties | Improve this Doc View Source Text Declaration public string Text { get; } Property Value Type Description System.String | Improve this Doc View Source TextInputName Declaration public string TextInputName { get; } Property Value Type Description System.String Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.UI.Events.UnturnedPlayerUIEvent.html": {
    "href": "api/OpenMod.Unturned.Players.UI.Events.UnturnedPlayerUIEvent.html",
    "title": "Class UnturnedPlayerUIEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerUIEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerUIEvent UnturnedPlayerButtonClickedEvent UnturnedPlayerTextInputtedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.UI.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedPlayerUIEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerUIEvent(UnturnedPlayer) Declaration protected UnturnedPlayerUIEvent(UnturnedPlayer player) Parameters Type Name Description UnturnedPlayer player Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.UnturnedPlayer.html": {
    "href": "api/OpenMod.Unturned.Players.UnturnedPlayer.html",
    "title": "Class UnturnedPlayer | OpenMod Docs",
    "keywords": "Class UnturnedPlayer Inheritance System.Object UnturnedPlayer Implements IPlayer IEntity IGameObject IHasHealth IHasInventory ICanEnterVehicle IDamageSource IHasHunger IHasThirst Namespace : OpenMod.Unturned.Players Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayer : IEquatable<UnturnedPlayer>, IPlayer, IEntity, IGameObject, IHasHealth, IHasInventory, ICanEnterVehicle, IDamageSource, IHasHunger, IHasThirst Constructors | Improve this Doc View Source UnturnedPlayer(Player) Declaration protected UnturnedPlayer(Player player) Parameters Type Name Description Player player Properties | Improve this Doc View Source Address Declaration public IPAddress? Address { get; } Property Value Type Description System.Nullable < IPAddress > | Improve this Doc View Source Asset Declaration public IEntityAsset Asset { get; } Property Value Type Description IEntityAsset | Improve this Doc View Source CurrentVehicle Gets the current vehicle. Returns null if the player is not a passenger. Declaration public UnturnedVehicle CurrentVehicle { get; } Property Value Type Description UnturnedVehicle | Improve this Doc View Source DamageSourceName Declaration public string DamageSourceName { get; } Property Value Type Description System.String | Improve this Doc View Source EntityInstanceId Declaration public string EntityInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source Health Declaration public double Health { get; } Property Value Type Description System.Double | Improve this Doc View Source Hunger Declaration public double Hunger { get; } Property Value Type Description System.Double | Improve this Doc View Source Inventory Gets the inventory of the player. Declaration public UnturnedPlayerInventory Inventory { get; } Property Value Type Description UnturnedPlayerInventory | Improve this Doc View Source IsAlive Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Declaration public double MaxHealth { get; } Property Value Type Description System.Double | Improve this Doc View Source MaxHunger Declaration public double MaxHunger { get; } Property Value Type Description System.Double | Improve this Doc View Source MaxThirst Declaration public double MaxThirst { get; } Property Value Type Description System.Double | Improve this Doc View Source Player Declaration public Player Player { get; } Property Value Type Description Player | Improve this Doc View Source PlayerLife Declaration public PlayerLife PlayerLife { get; } Property Value Type Description PlayerLife | Improve this Doc View Source Stance Declaration public string Stance { get; } Property Value Type Description System.String | Improve this Doc View Source State Declaration public IEntityState State { get; } Property Value Type Description IEntityState | Improve this Doc View Source SteamId Declaration public CSteamID SteamId { get; } Property Value Type Description CSteamID | Improve this Doc View Source SteamPlayer Declaration public SteamPlayer SteamPlayer { get; } Property Value Type Description SteamPlayer | Improve this Doc View Source Thirst Declaration public double Thirst { get; } Property Value Type Description System.Double | Improve this Doc View Source Transform Declaration public IWorldTransform Transform { get; } Property Value Type Description IWorldTransform Methods | Improve this Doc View Source DamageAsync(Double) Declaration public Task DamageAsync(double amount) Parameters Type Name Description System.Double amount Returns Type Description Task | Improve this Doc View Source Equals(UnturnedPlayer) Declaration public bool Equals(UnturnedPlayer other) Parameters Type Name Description UnturnedPlayer other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source KillAsync() Declaration public Task KillAsync() Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String) Declaration public Task PrintMessageAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, Color) Declaration public Task PrintMessageAsync(string message, Color color) Parameters Type Name Description System.String message Color color Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, Color, Boolean, String) Declaration public Task PrintMessageAsync(string message, Color color, bool isRich, string iconUrl) Parameters Type Name Description System.String message Color color System.Boolean isRich System.String iconUrl Returns Type Description Task | Improve this Doc View Source SetFullHealthAsync() Declaration public Task SetFullHealthAsync() Returns Type Description Task | Improve this Doc View Source SetHealthAsync(Double) Declaration public Task SetHealthAsync(double health) Parameters Type Name Description System.Double health Returns Type Description Task | Improve this Doc View Source SetHungerAsync(Double) Declaration public Task SetHungerAsync(double hunger) Parameters Type Name Description System.Double hunger Returns Type Description Task | Improve this Doc View Source SetPositionAsync(System.Numerics.Vector3) Declaration public Task<bool> SetPositionAsync(System.Numerics.Vector3 position) Parameters Type Name Description System.Numerics.Vector3 position Returns Type Description Task < System.Boolean > | Improve this Doc View Source SetPositionAsync(System.Numerics.Vector3, Quaternion) Declaration public Task<bool> SetPositionAsync(System.Numerics.Vector3 position, Quaternion rotation) Parameters Type Name Description System.Numerics.Vector3 position Quaternion rotation Returns Type Description Task < System.Boolean > | Improve this Doc View Source SetThirstAsync(Double) Declaration public Task SetThirstAsync(double thirst) Parameters Type Name Description System.Double thirst Returns Type Description Task Explicit Interface Implementations | Improve this Doc View Source IHasInventory.Inventory Declaration IInventory IHasInventory.Inventory { get; } Returns Type Description IInventory | Improve this Doc View Source ICanEnterVehicle.CurrentVehicle Declaration IVehicle ICanEnterVehicle.CurrentVehicle { get; } Returns Type Description IVehicle Implements IPlayer IEntity IGameObject IHasHealth IHasInventory ICanEnterVehicle IDamageSource IHasHunger IHasThirst Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.UnturnedPlayerAsset.html": {
    "href": "api/OpenMod.Unturned.Players.UnturnedPlayerAsset.html",
    "title": "Class UnturnedPlayerAsset | OpenMod Docs",
    "keywords": "Class UnturnedPlayerAsset Inheritance System.Object UnturnedPlayerAsset Implements IEntityAsset Namespace : OpenMod.Unturned.Players Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerAsset : object, IEntityAsset Properties | Improve this Doc View Source EntityAssetId Declaration public string EntityAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source EntityType Declaration public string EntityType { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Declaration public static UnturnedPlayerAsset Instance { get; } Property Value Type Description UnturnedPlayerAsset | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IEntityAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.UnturnedPlayerCommandParameterResolveProvider.html": {
    "href": "api/OpenMod.Unturned.Players.UnturnedPlayerCommandParameterResolveProvider.html",
    "title": "Class UnturnedPlayerCommandParameterResolveProvider | OpenMod Docs",
    "keywords": "Class UnturnedPlayerCommandParameterResolveProvider Inheritance System.Object UnturnedPlayerCommandParameterResolveProvider Namespace : OpenMod.Unturned.Players Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerCommandParameterResolveProvider : ICommandParameterResolveProvider Methods | Improve this Doc View Source ResolveAsync(Type, String) Declaration public Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source Supports(Type) Declaration public bool Supports(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Useables.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Useables.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Useables.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Useables.Events Classes UnturnedPlayerPerformingAidEvent"
  },
  "api/OpenMod.Unturned.Players.Useables.Events.UnturnedPlayerPerformingAidEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Useables.Events.UnturnedPlayerPerformingAidEvent.html",
    "title": "Class UnturnedPlayerPerformingAidEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerPerformingAidEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerPerformingAidEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Useables.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerPerformingAidEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerPerformingAidEvent(UnturnedPlayer, UnturnedPlayer, ItemConsumeableAsset) Declaration public UnturnedPlayerPerformingAidEvent(UnturnedPlayer player, UnturnedPlayer target, ItemConsumeableAsset consumeableAsset) Parameters Type Name Description UnturnedPlayer player UnturnedPlayer target ItemConsumeableAsset consumeableAsset Properties | Improve this Doc View Source ConsumeableAsset Declaration public ItemConsumeableAsset ConsumeableAsset { get; } Property Value Type Description ItemConsumeableAsset | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Target Declaration public UnturnedPlayer Target { get; } Property Value Type Description UnturnedPlayer Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Voice.Events.html": {
    "href": "api/OpenMod.Unturned.Players.Voice.Events.html",
    "title": "Namespace OpenMod.Unturned.Players.Voice.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Players.Voice.Events Classes UnturnedPlayerRelayingVoiceEvent UnturnedPlayerTalkingUpdatedEvent"
  },
  "api/OpenMod.Unturned.Players.Voice.Events.UnturnedPlayerRelayingVoiceEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Voice.Events.UnturnedPlayerRelayingVoiceEvent.html",
    "title": "Class UnturnedPlayerRelayingVoiceEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerRelayingVoiceEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerRelayingVoiceEvent Implements IPlayerEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Voice.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerRelayingVoiceEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerRelayingVoiceEvent(UnturnedPlayer, Boolean, Boolean, PlayerVoice.RelayVoiceCullingHandler) Declaration public UnturnedPlayerRelayingVoiceEvent(UnturnedPlayer player, bool wantsToUseWalkieTalkie, bool shouldBroadcastOverRadio, PlayerVoice.RelayVoiceCullingHandler cullingHandler) Parameters Type Name Description UnturnedPlayer player System.Boolean wantsToUseWalkieTalkie System.Boolean shouldBroadcastOverRadio PlayerVoice.RelayVoiceCullingHandler cullingHandler Properties | Improve this Doc View Source CullingHandler Declaration public PlayerVoice.RelayVoiceCullingHandler CullingHandler { get; set; } Property Value Type Description PlayerVoice.RelayVoiceCullingHandler | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ShouldBroadcastOverRadio Declaration public bool ShouldBroadcastOverRadio { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source WantsToUseWalkieTalkie Declaration public bool WantsToUseWalkieTalkie { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Players.Voice.Events.UnturnedPlayerTalkingUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Players.Voice.Events.UnturnedPlayerTalkingUpdatedEvent.html",
    "title": "Class UnturnedPlayerTalkingUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerTalkingUpdatedEvent Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerTalkingUpdatedEvent Implements IPlayerEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Players.Voice.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerTalkingUpdatedEvent : UnturnedPlayerEvent, IPlayerEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerTalkingUpdatedEvent(UnturnedPlayer, Boolean) Declaration public UnturnedPlayerTalkingUpdatedEvent(UnturnedPlayer player, bool isTalking) Parameters Type Name Description UnturnedPlayer player System.Boolean isTalking Properties | Improve this Doc View Source IsTalking Declaration public bool IsTalking { get; } Property Value Type Description System.Boolean Implements IPlayerEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Plugins.html": {
    "href": "api/OpenMod.Unturned.Plugins.html",
    "title": "Namespace OpenMod.Unturned.Plugins | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Plugins Classes OpenModPluginsBroadcaster Adds plugins to and removes them from Unturned's plugin advertising. OpenModUnturnedPlugin Base class for all Unturned plugins."
  },
  "api/OpenMod.Unturned.Plugins.OpenModPluginsBroadcaster.html": {
    "href": "api/OpenMod.Unturned.Plugins.OpenModPluginsBroadcaster.html",
    "title": "Class OpenModPluginsBroadcaster | OpenMod Docs",
    "keywords": "Class OpenModPluginsBroadcaster Adds plugins to and removes them from Unturned's plugin advertising. Inheritance System.Object OpenModPluginsBroadcaster Implements IEventListener < PluginUnloadedEvent > Namespace : OpenMod.Unturned.Plugins Assembly : OpenMod.Unturned.dll Syntax public class OpenModPluginsBroadcaster : IEventListener<PluginLoadedEvent>, IEventListener<PluginUnloadedEvent> Constructors | Improve this Doc View Source OpenModPluginsBroadcaster(IPluginActivator, IOpenModUnturnedConfiguration) Declaration public OpenModPluginsBroadcaster(IPluginActivator pluginActivator, IOpenModUnturnedConfiguration unturnedConfiguration) Parameters Type Name Description IPluginActivator pluginActivator IOpenModUnturnedConfiguration unturnedConfiguration Implements IEventListener<> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Plugins.OpenModUnturnedPlugin.html": {
    "href": "api/OpenMod.Unturned.Plugins.OpenModUnturnedPlugin.html",
    "title": "Class OpenModUnturnedPlugin | OpenMod Docs",
    "keywords": "Class OpenModUnturnedPlugin Base class for all Unturned plugins. Inheritance System.Object OpenModUnityEnginePlugin OpenModUnturnedPlugin Inherited Members OpenModUnityEnginePlugin.LoadAsync() OpenModUnityEnginePlugin.OnLoadAsync() OpenModUnityEnginePlugin.UnloadAsync() OpenModUnityEnginePlugin.OnUnloadAsync() Namespace : OpenMod.Unturned.Plugins Assembly : OpenMod.Unturned.dll Syntax public abstract class OpenModUnturnedPlugin : OpenModUnityEnginePlugin Constructors | Improve this Doc View Source OpenModUnturnedPlugin(IServiceProvider) Declaration protected OpenModUnturnedPlugin(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Resources.Events.html": {
    "href": "api/OpenMod.Unturned.Resources.Events.html",
    "title": "Namespace OpenMod.Unturned.Resources.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Resources.Events Classes UnturnedResourceDamagingEvent"
  },
  "api/OpenMod.Unturned.Resources.Events.UnturnedResourceDamagingEvent.html": {
    "href": "api/OpenMod.Unturned.Resources.Events.UnturnedResourceDamagingEvent.html",
    "title": "Class UnturnedResourceDamagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedResourceDamagingEvent Inheritance System.Object UnturnedResourceDamagingEvent Implements ICancellableEvent Namespace : OpenMod.Unturned.Resources.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedResourceDamagingEvent : Event, ICancellableEvent Constructors | Improve this Doc View Source UnturnedResourceDamagingEvent(ResourceSpawnpoint, UInt16, EDamageOrigin, UnturnedPlayer, CSteamID) Declaration public UnturnedResourceDamagingEvent(ResourceSpawnpoint resourceSpawnpoint, ushort damageAmount, EDamageOrigin damageOrigin, UnturnedPlayer instigator, CSteamID instigatorId) Parameters Type Name Description ResourceSpawnpoint resourceSpawnpoint System.UInt16 damageAmount EDamageOrigin damageOrigin UnturnedPlayer instigator CSteamID instigatorId Properties | Improve this Doc View Source DamageAmount Declaration public ushort DamageAmount { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source DamageOrigin Declaration public EDamageOrigin DamageOrigin { get; } Property Value Type Description EDamageOrigin | Improve this Doc View Source Instigator Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source InstigatorId Declaration public CSteamID InstigatorId { get; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ResourceSpawnpoint Declaration public ResourceSpawnpoint ResourceSpawnpoint { get; } Property Value Type Description ResourceSpawnpoint Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Commands.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Commands.html",
    "title": "Namespace OpenMod.Unturned.RocketMod.Commands | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.RocketMod.Commands Classes RconPlayer RocketModCommandEventListener RocketModCommandFromOpenMod RocketModExecuteCommandEventTrigger"
  },
  "api/OpenMod.Unturned.RocketMod.Commands.RconPlayer.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Commands.RconPlayer.html",
    "title": "Class RconPlayer | OpenMod Docs",
    "keywords": "Class RconPlayer Inheritance System.Object Rocket.API.ConsolePlayer RconPlayer Implements Rocket.API.IRocketPlayer System.IComparable Inherited Members Rocket.API.ConsolePlayer.CompareTo(System.Object) Rocket.API.ConsolePlayer.Id Rocket.API.ConsolePlayer.DisplayName Rocket.API.ConsolePlayer.IsAdmin Namespace : OpenMod.Unturned.RocketMod.Commands Assembly : OpenMod.Unturned.dll Syntax public class RconPlayer : ConsolePlayer, IRocketPlayer, IComparable Constructors | Improve this Doc View Source RconPlayer() Declaration public RconPlayer() | Improve this Doc View Source RconPlayer(ICommandActor) Declaration public RconPlayer(ICommandActor actor) Parameters Type Name Description ICommandActor actor Fields | Improve this Doc View Source CommandActor Declaration public readonly ICommandActor? CommandActor Field Value Type Description System.Nullable < ICommandActor > Implements Rocket.API.IRocketPlayer System.IComparable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Commands.RocketModCommandEventListener.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Commands.RocketModCommandEventListener.html",
    "title": "Class RocketModCommandEventListener | OpenMod Docs",
    "keywords": "Class RocketModCommandEventListener Inheritance System.Object RocketModCommandEventListener Namespace : OpenMod.Unturned.RocketMod.Commands Assembly : OpenMod.Unturned.dll Syntax public class RocketModCommandEventListener : object Constructors | Improve this Doc View Source RocketModCommandEventListener(ICommandCooldownStore, IOpenModStringLocalizer) Declaration public RocketModCommandEventListener(ICommandCooldownStore commandCooldownStore, IOpenModStringLocalizer stringLocalizer) Parameters Type Name Description ICommandCooldownStore commandCooldownStore IOpenModStringLocalizer stringLocalizer Methods | Improve this Doc View Source HandleEventAsync(Nullable<Object>, CommandExecutedEvent) Declaration public Task HandleEventAsync(object? _, CommandExecutedEvent event) Parameters Type Name Description System.Nullable < System.Object > _ CommandExecutedEvent event Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Commands.RocketModCommandFromOpenMod.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Commands.RocketModCommandFromOpenMod.html",
    "title": "Class RocketModCommandFromOpenMod | OpenMod Docs",
    "keywords": "Class RocketModCommandFromOpenMod Inheritance System.Object RocketModCommandFromOpenMod Implements Rocket.API.IRocketCommand Namespace : OpenMod.Unturned.RocketMod.Commands Assembly : OpenMod.Unturned.dll Syntax public class RocketModCommandFromOpenMod : object, IRocketCommand Constructors | Improve this Doc View Source RocketModCommandFromOpenMod(ICommandContext) Declaration public RocketModCommandFromOpenMod(ICommandContext commandContext) Parameters Type Name Description ICommandContext commandContext Properties | Improve this Doc View Source Aliases Declaration public List<string> Aliases { get; } Property Value Type Description List < System.String > | Improve this Doc View Source AllowedCaller Declaration public AllowedCaller AllowedCaller { get; } Property Value Type Description Rocket.API.AllowedCaller | Improve this Doc View Source Help Declaration public string Help { get; } Property Value Type Description System.String | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source Permissions Declaration public List<string> Permissions { get; } Property Value Type Description List < System.String > | Improve this Doc View Source Syntax Declaration public string Syntax { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Execute(IRocketPlayer, String[]) Declaration public void Execute(IRocketPlayer player, string[] command) Parameters Type Name Description Rocket.API.IRocketPlayer player System.String [] command Implements Rocket.API.IRocketCommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Commands.RocketModExecuteCommandEventTrigger.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Commands.RocketModExecuteCommandEventTrigger.html",
    "title": "Class RocketModExecuteCommandEventTrigger | OpenMod Docs",
    "keywords": "Class RocketModExecuteCommandEventTrigger Inheritance System.Object RocketModExecuteCommandEventTrigger Namespace : OpenMod.Unturned.RocketMod.Commands Assembly : OpenMod.Unturned.dll Syntax public class RocketModExecuteCommandEventTrigger : object Constructors | Improve this Doc View Source RocketModExecuteCommandEventTrigger() Declaration public RocketModExecuteCommandEventTrigger() Properties | Improve this Doc View Source RocketModExecuteEvent Declaration public FieldInfo? RocketModExecuteEvent { get; } Property Value Type Description System.Nullable < FieldInfo > Methods | Improve this Doc View Source HandleEventAsync(Nullable<Object>, CommandExecutingEvent) Declaration public Task HandleEventAsync(object? _, CommandExecutingEvent event) Parameters Type Name Description System.Nullable < System.Object > _ CommandExecutingEvent event Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Economy.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Economy.html",
    "title": "Namespace OpenMod.Unturned.RocketMod.Economy | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.RocketMod.Economy Classes UconomyEconomyProvider UconomyIntegration"
  },
  "api/OpenMod.Unturned.RocketMod.Economy.UconomyEconomyProvider.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Economy.UconomyEconomyProvider.html",
    "title": "Class UconomyEconomyProvider | OpenMod Docs",
    "keywords": "Class UconomyEconomyProvider Inheritance System.Object UconomyEconomyProvider Implements IEconomyProvider IDisposable Namespace : OpenMod.Unturned.RocketMod.Economy Assembly : OpenMod.Unturned.dll Syntax public class UconomyEconomyProvider : object, IEconomyProvider, IDisposable Constructors | Improve this Doc View Source UconomyEconomyProvider(IRocketModComponent, IEventBus, IOpenModHostStringLocalizer) Declaration public UconomyEconomyProvider(IRocketModComponent rocketModComponent, IEventBus eventBus, IOpenModHostStringLocalizer stringLocalizer) Parameters Type Name Description IRocketModComponent rocketModComponent IEventBus eventBus IOpenModHostStringLocalizer stringLocalizer Properties | Improve this Doc View Source CurrencyName Declaration public string CurrencyName { get; } Property Value Type Description System.String | Improve this Doc View Source CurrencySymbol Declaration public string CurrencySymbol { get; } Property Value Type Description System.String Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetBalanceAsync(String, String) Declaration public Task<decimal> GetBalanceAsync(string ownerId, string ownerType) Parameters Type Name Description System.String ownerId System.String ownerType Returns Type Description Task < System.Decimal > | Improve this Doc View Source SetBalanceAsync(String, String, Decimal) Declaration public Task SetBalanceAsync(string ownerId, string ownerType, decimal balance) Parameters Type Name Description System.String ownerId System.String ownerType System.Decimal balance Returns Type Description Task | Improve this Doc View Source UpdateBalanceAsync(String, String, Decimal, Nullable<String>) Declaration public Task<decimal> UpdateBalanceAsync(string ownerId, string ownerType, decimal changeAmount, string? reason) Parameters Type Name Description System.String ownerId System.String ownerType System.Decimal changeAmount System.Nullable < System.String > reason Returns Type Description Task < System.Decimal > Implements IEconomyProvider IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Economy.UconomyIntegration.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Economy.UconomyIntegration.html",
    "title": "Class UconomyIntegration | OpenMod Docs",
    "keywords": "Class UconomyIntegration Inheritance System.Object UconomyIntegration Namespace : OpenMod.Unturned.RocketMod.Economy Assembly : OpenMod.Unturned.dll Syntax public static class UconomyIntegration : object Methods | Improve this Doc View Source GetUconomyAssembly() Gets the Uconomy assembly if loaded or null. Declaration public static Assembly? GetUconomyAssembly() Returns Type Description System.Nullable < Assembly > | Improve this Doc View Source GetUconomyFile() Gets the path to the Uconomy assembly. Will return null if not found. Declaration public static string? GetUconomyFile() Returns Type Description System.Nullable < System.String > | Improve this Doc View Source IsUconomyInstalled() Returns true if Uconomy is installed. Declaration public static bool IsUconomyInstalled() Returns Type Description System.Boolean | Improve this Doc View Source IsUconomyLoaded() Returns true if the Uconomy assembly is loaded. Declaration public static bool IsUconomyLoaded() Returns Type Description System.Boolean"
  },
  "api/OpenMod.Unturned.RocketMod.Events.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Events.html",
    "title": "Namespace OpenMod.Unturned.RocketMod.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.RocketMod.Events Classes RocketModInitializedEvent The event that is triggered when RocketMod is loaded and ready. It is fired before plugins are loaded. RocketModPluginsLoadedEvent The event that is triggered when all RocketMod plugins have been loaded. Note that some plugins can still load after this event."
  },
  "api/OpenMod.Unturned.RocketMod.Events.RocketModInitializedEvent.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Events.RocketModInitializedEvent.html",
    "title": "Class RocketModInitializedEvent | OpenMod Docs",
    "keywords": "Class RocketModInitializedEvent The event that is triggered when RocketMod is loaded and ready. It is fired before plugins are loaded. Inheritance System.Object RocketModInitializedEvent Namespace : OpenMod.Unturned.RocketMod.Events Assembly : OpenMod.Unturned.dll Syntax public class RocketModInitializedEvent : Event Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Events.RocketModPluginsLoadedEvent.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Events.RocketModPluginsLoadedEvent.html",
    "title": "Class RocketModPluginsLoadedEvent | OpenMod Docs",
    "keywords": "Class RocketModPluginsLoadedEvent The event that is triggered when all RocketMod plugins have been loaded. Note that some plugins can still load after this event. Inheritance System.Object RocketModPluginsLoadedEvent Namespace : OpenMod.Unturned.RocketMod.Events Assembly : OpenMod.Unturned.dll Syntax public class RocketModPluginsLoadedEvent : Event Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.html": {
    "href": "api/OpenMod.Unturned.RocketMod.html",
    "title": "Namespace OpenMod.Unturned.RocketMod | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.RocketMod Classes RocketModComponent The OpenMod component for RocketMod. RocketModIntegration The OpenMod integration for RocketMod. RocketModPluginsLoadedEventListener Interfaces IRocketModComponent"
  },
  "api/OpenMod.Unturned.RocketMod.IRocketModComponent.html": {
    "href": "api/OpenMod.Unturned.RocketMod.IRocketModComponent.html",
    "title": "Interface IRocketModComponent | OpenMod Docs",
    "keywords": "Interface IRocketModComponent Namespace : OpenMod.Unturned.RocketMod Assembly : OpenMod.Unturned.dll Syntax public interface IRocketModComponent : IOpenModComponent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Permissions.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Permissions.html",
    "title": "Namespace OpenMod.Unturned.RocketMod.Permissions | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.RocketMod.Permissions Classes OpenModPermissionRoleWrapper OpenModPlayerPermissionActorWrapper RocketCooldownPermissionCheckProvider RocketGroupWrapper RocketPermissionProxyProvider RocketPermissionRoleStore RocketPermissionStore"
  },
  "api/OpenMod.Unturned.RocketMod.Permissions.OpenModPermissionRoleWrapper.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Permissions.OpenModPermissionRoleWrapper.html",
    "title": "Class OpenModPermissionRoleWrapper | OpenMod Docs",
    "keywords": "Class OpenModPermissionRoleWrapper Inheritance System.Object OpenModPermissionRoleWrapper Namespace : OpenMod.Unturned.RocketMod.Permissions Assembly : OpenMod.Unturned.dll Syntax public class OpenModPermissionRoleWrapper : IPermissionRole Constructors | Improve this Doc View Source OpenModPermissionRoleWrapper(RocketPermissionsGroup) Declaration public OpenModPermissionRoleWrapper(RocketPermissionsGroup group) Parameters Type Name Description Rocket.API.Serialisation.RocketPermissionsGroup group Properties | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source FullActorName Declaration public string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source IsAutoAssigned Declaration public bool IsAutoAssigned { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Parents Declaration public HashSet<string> Parents { get; } Property Value Type Description HashSet < System.String > | Improve this Doc View Source Priority Declaration public int Priority { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Permissions.OpenModPlayerPermissionActorWrapper.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Permissions.OpenModPlayerPermissionActorWrapper.html",
    "title": "Class OpenModPlayerPermissionActorWrapper | OpenMod Docs",
    "keywords": "Class OpenModPlayerPermissionActorWrapper Inheritance System.Object OpenModPlayerPermissionActorWrapper Namespace : OpenMod.Unturned.RocketMod.Permissions Assembly : OpenMod.Unturned.dll Syntax public class OpenModPlayerPermissionActorWrapper : IPermissionActor Constructors | Improve this Doc View Source OpenModPlayerPermissionActorWrapper(IRocketPlayer) Declaration public OpenModPlayerPermissionActorWrapper(IRocketPlayer player) Parameters Type Name Description Rocket.API.IRocketPlayer player Fields | Improve this Doc View Source Player Declaration public IRocketPlayer Player Field Value Type Description Rocket.API.IRocketPlayer Properties | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source FullActorName Declaration public string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Permissions.RocketCooldownPermissionCheckProvider.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Permissions.RocketCooldownPermissionCheckProvider.html",
    "title": "Class RocketCooldownPermissionCheckProvider | OpenMod Docs",
    "keywords": "Class RocketCooldownPermissionCheckProvider Inheritance System.Object RocketCooldownPermissionCheckProvider Namespace : OpenMod.Unturned.RocketMod.Permissions Assembly : OpenMod.Unturned.dll Syntax public class RocketCooldownPermissionCheckProvider : IPermissionCheckProvider Constructors | Improve this Doc View Source RocketCooldownPermissionCheckProvider(IOpenModHostStringLocalizer) Declaration public RocketCooldownPermissionCheckProvider(IOpenModHostStringLocalizer stringLocalizer) Parameters Type Name Description IOpenModHostStringLocalizer stringLocalizer Methods | Improve this Doc View Source CheckPermissionAsync(IPermissionActor, String) Declaration public Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < PermissionGrantResult > | Improve this Doc View Source SupportsActor(IPermissionActor) Declaration public bool SupportsActor(IPermissionActor actor) Parameters Type Name Description IPermissionActor actor Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Permissions.RocketGroupWrapper.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Permissions.RocketGroupWrapper.html",
    "title": "Class RocketGroupWrapper | OpenMod Docs",
    "keywords": "Class RocketGroupWrapper Inheritance System.Object RocketGroupWrapper Namespace : OpenMod.Unturned.RocketMod.Permissions Assembly : OpenMod.Unturned.dll Syntax public class RocketGroupWrapper : IPermissionRole Constructors | Improve this Doc View Source RocketGroupWrapper(RocketPermissionsGroup) Declaration public RocketGroupWrapper(RocketPermissionsGroup rocketGroup) Parameters Type Name Description Rocket.API.Serialisation.RocketPermissionsGroup rocketGroup Properties | Improve this Doc View Source DisplayName Declaration public string DisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source FullActorName Declaration public string FullActorName { get; } Property Value Type Description System.String | Improve this Doc View Source Id Declaration public string Id { get; } Property Value Type Description System.String | Improve this Doc View Source IsAutoAssigned Declaration public bool IsAutoAssigned { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Parents Declaration public HashSet<string> Parents { get; } Property Value Type Description HashSet < System.String > | Improve this Doc View Source Priority Declaration public int Priority { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public string Type { get; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Permissions.RocketPermissionProxyProvider.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Permissions.RocketPermissionProxyProvider.html",
    "title": "Class RocketPermissionProxyProvider | OpenMod Docs",
    "keywords": "Class RocketPermissionProxyProvider Inheritance System.Object RocketPermissionProxyProvider Implements Rocket.API.IRocketPermissionsProvider IDisposable Namespace : OpenMod.Unturned.RocketMod.Permissions Assembly : OpenMod.Unturned.dll Syntax public class RocketPermissionProxyProvider : object, IRocketPermissionsProvider, IDisposable Constructors | Improve this Doc View Source RocketPermissionProxyProvider(IRocketModComponent, IPermissionChecker, IPermissionRoleStore, IPermissionRegistry) Declaration public RocketPermissionProxyProvider(IRocketModComponent rocketModComponent, IPermissionChecker permissionChecker, IPermissionRoleStore permissionRoleStore, IPermissionRegistry permissionRegistry) Parameters Type Name Description IRocketModComponent rocketModComponent IPermissionChecker permissionChecker IPermissionRoleStore permissionRoleStore IPermissionRegistry permissionRegistry Methods | Improve this Doc View Source AddGroup(RocketPermissionsGroup) Declaration public RocketPermissionsProviderResult AddGroup(RocketPermissionsGroup group) Parameters Type Name Description Rocket.API.Serialisation.RocketPermissionsGroup group Returns Type Description Rocket.API.RocketPermissionsProviderResult | Improve this Doc View Source AddPlayerToGroup(String, IRocketPlayer) Declaration public RocketPermissionsProviderResult AddPlayerToGroup(string groupId, IRocketPlayer player) Parameters Type Name Description System.String groupId Rocket.API.IRocketPlayer player Returns Type Description Rocket.API.RocketPermissionsProviderResult | Improve this Doc View Source DeleteGroup(String) Declaration public RocketPermissionsProviderResult DeleteGroup(string groupId) Parameters Type Name Description System.String groupId Returns Type Description Rocket.API.RocketPermissionsProviderResult | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetGroup(String) Declaration public RocketPermissionsGroup GetGroup(string groupId) Parameters Type Name Description System.String groupId Returns Type Description Rocket.API.Serialisation.RocketPermissionsGroup | Improve this Doc View Source GetGroups(IRocketPlayer, Boolean) Declaration public List<RocketPermissionsGroup> GetGroups(IRocketPlayer player, bool includeParentGroups) Parameters Type Name Description Rocket.API.IRocketPlayer player System.Boolean includeParentGroups Returns Type Description List < Rocket.API.Serialisation.RocketPermissionsGroup > | Improve this Doc View Source GetPermissions(IRocketPlayer) Declaration public List<Permission> GetPermissions(IRocketPlayer player) Parameters Type Name Description Rocket.API.IRocketPlayer player Returns Type Description List < Rocket.API.Serialisation.Permission > | Improve this Doc View Source GetPermissions(IRocketPlayer, List<String>) Declaration public List<Permission> GetPermissions(IRocketPlayer player, List<string> requestedPermissions) Parameters Type Name Description Rocket.API.IRocketPlayer player List < System.String > requestedPermissions Returns Type Description List < Rocket.API.Serialisation.Permission > | Improve this Doc View Source HasPermission(IRocketPlayer, List<String>) Declaration public bool HasPermission(IRocketPlayer player, List<string> requestedPermissions) Parameters Type Name Description Rocket.API.IRocketPlayer player List < System.String > requestedPermissions Returns Type Description System.Boolean | Improve this Doc View Source Install() Declaration public void Install() | Improve this Doc View Source Reload() Declaration public void Reload() | Improve this Doc View Source RemovePlayerFromGroup(String, IRocketPlayer) Declaration public RocketPermissionsProviderResult RemovePlayerFromGroup(string groupId, IRocketPlayer player) Parameters Type Name Description System.String groupId Rocket.API.IRocketPlayer player Returns Type Description Rocket.API.RocketPermissionsProviderResult | Improve this Doc View Source SaveGroup(RocketPermissionsGroup) Declaration public RocketPermissionsProviderResult SaveGroup(RocketPermissionsGroup group) Parameters Type Name Description Rocket.API.Serialisation.RocketPermissionsGroup group Returns Type Description Rocket.API.RocketPermissionsProviderResult Implements Rocket.API.IRocketPermissionsProvider IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Permissions.RocketPermissionRoleStore.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Permissions.RocketPermissionRoleStore.html",
    "title": "Class RocketPermissionRoleStore | OpenMod Docs",
    "keywords": "Class RocketPermissionRoleStore Inheritance System.Object RocketPermissionRoleStore Namespace : OpenMod.Unturned.RocketMod.Permissions Assembly : OpenMod.Unturned.dll Syntax public class RocketPermissionRoleStore : IPermissionRoleStore Constructors | Improve this Doc View Source RocketPermissionRoleStore(IPermissionRoleStore) Declaration public RocketPermissionRoleStore(IPermissionRoleStore basePermissionRoleStore) Parameters Type Name Description IPermissionRoleStore basePermissionRoleStore Methods | Improve this Doc View Source AddRoleToActorAsync(IPermissionActor, String) Declaration public Task<bool> AddRoleToActorAsync(IPermissionActor actor, string roleId) Parameters Type Name Description IPermissionActor actor System.String roleId Returns Type Description Task < System.Boolean > | Improve this Doc View Source CreateRoleAsync(IPermissionRole) Declaration public Task<bool> CreateRoleAsync(IPermissionRole role) Parameters Type Name Description IPermissionRole role Returns Type Description Task < System.Boolean > | Improve this Doc View Source DeleteRoleAsync(String) Declaration public Task<bool> DeleteRoleAsync(string roleId) Parameters Type Name Description System.String roleId Returns Type Description Task < System.Boolean > | Improve this Doc View Source GetAutoAssignedRolesAsync(String, String) Declaration public Task<IReadOnlyCollection<string>> GetAutoAssignedRolesAsync(string actorId, string actorType) Parameters Type Name Description System.String actorId System.String actorType Returns Type Description Task < IReadOnlyCollection < System.String >> | Improve this Doc View Source GetPersistentDataAsync<T>(String, String) Declaration public Task<T> GetPersistentDataAsync<T>(string roleId, string key) Parameters Type Name Description System.String roleId System.String key Returns Type Description Task <T> Type Parameters Name Description T | Improve this Doc View Source GetRoleAsync(String) Declaration public Task<IPermissionRole?> GetRoleAsync(string roleId) Parameters Type Name Description System.String roleId Returns Type Description Task < System.Nullable < IPermissionRole >> | Improve this Doc View Source GetRolesAsync() Declaration public Task<IReadOnlyCollection<IPermissionRole>> GetRolesAsync() Returns Type Description Task < IReadOnlyCollection < IPermissionRole >> | Improve this Doc View Source GetRolesAsync(IPermissionActor, Boolean) Declaration public Task<IReadOnlyCollection<IPermissionRole>> GetRolesAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor System.Boolean inherit Returns Type Description Task < IReadOnlyCollection < IPermissionRole >> | Improve this Doc View Source RemoveRoleFromActorAsync(IPermissionActor, String) Declaration public Task<bool> RemoveRoleFromActorAsync(IPermissionActor actor, string roleId) Parameters Type Name Description IPermissionActor actor System.String roleId Returns Type Description Task < System.Boolean > | Improve this Doc View Source SavePersistentDataAsync<T>(String, String, T) Declaration public Task SavePersistentDataAsync<T>(string roleId, string key, T data) Parameters Type Name Description System.String roleId System.String key T data Returns Type Description Task Type Parameters Name Description T | Improve this Doc View Source UpdateRoleAsync(IPermissionRole) Declaration public Task<bool> UpdateRoleAsync(IPermissionRole role) Parameters Type Name Description IPermissionRole role Returns Type Description Task < System.Boolean > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Permissions.RocketPermissionStore.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Permissions.RocketPermissionStore.html",
    "title": "Class RocketPermissionStore | OpenMod Docs",
    "keywords": "Class RocketPermissionStore Inheritance System.Object RocketPermissionStore Namespace : OpenMod.Unturned.RocketMod.Permissions Assembly : OpenMod.Unturned.dll Syntax public class RocketPermissionStore : IPermissionStore Methods | Improve this Doc View Source AddDeniedPermissionAsync(IPermissionActor, String) Declaration public Task<bool> AddDeniedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < System.Boolean > | Improve this Doc View Source AddGrantedPermissionAsync(IPermissionActor, String) Declaration public Task<bool> AddGrantedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < System.Boolean > | Improve this Doc View Source GetDeniedPermissionsAsync(IPermissionActor, Boolean) Declaration public Task<IReadOnlyCollection<string>> GetDeniedPermissionsAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor System.Boolean inherit Returns Type Description Task < IReadOnlyCollection < System.String >> | Improve this Doc View Source GetGrantedPermissionsAsync(IPermissionActor, Boolean) Declaration public Task<IReadOnlyCollection<string>> GetGrantedPermissionsAsync(IPermissionActor actor, bool inherit = true) Parameters Type Name Description IPermissionActor actor System.Boolean inherit Returns Type Description Task < IReadOnlyCollection < System.String >> | Improve this Doc View Source RemoveDeniedPermissionAsync(IPermissionActor, String) Declaration public Task<bool> RemoveDeniedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < System.Boolean > | Improve this Doc View Source RemoveGrantedPermissionAsync(IPermissionActor, String) Declaration public Task<bool> RemoveGrantedPermissionAsync(IPermissionActor actor, string permission) Parameters Type Name Description IPermissionActor actor System.String permission Returns Type Description Task < System.Boolean > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Rcon.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Rcon.html",
    "title": "Namespace OpenMod.Unturned.RocketMod.Rcon | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.RocketMod.Rcon Classes RconStartListener RocketModRconClient RocketModRconHost RocketModRconPacket Enums NewLineType"
  },
  "api/OpenMod.Unturned.RocketMod.Rcon.NewLineType.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Rcon.NewLineType.html",
    "title": "Enum NewLineType | OpenMod Docs",
    "keywords": "Enum NewLineType Namespace : OpenMod.Unturned.RocketMod.Rcon Assembly : OpenMod.Unturned.dll Syntax public enum NewLineType : int Fields Name Description Linux Mac Windows"
  },
  "api/OpenMod.Unturned.RocketMod.Rcon.RconStartListener.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Rcon.RconStartListener.html",
    "title": "Class RconStartListener | OpenMod Docs",
    "keywords": "Class RconStartListener Inheritance System.Object RconStartListener Implements IEventListener < RocketModInitializedEvent > Namespace : OpenMod.Unturned.RocketMod.Rcon Assembly : OpenMod.Unturned.dll Syntax public class RconStartListener : IEventListener<OpenModInitializedEvent>, IEventListener<RocketModInitializedEvent> Constructors | Improve this Doc View Source RconStartListener(IEventBus, IRuntime, IConfiguration, IOpenModUnturnedConfiguration) Declaration public RconStartListener(IEventBus eventBus, IRuntime runtime, IConfiguration openModConfiguration, IOpenModUnturnedConfiguration unturnedConfiguration) Parameters Type Name Description IEventBus eventBus IRuntime runtime IConfiguration openModConfiguration IOpenModUnturnedConfiguration unturnedConfiguration Methods | Improve this Doc View Source HandleEventAsync(Nullable<Object>, RocketModInitializedEvent) Declaration public Task HandleEventAsync(object? sender, RocketModInitializedEvent event) Parameters Type Name Description System.Nullable < System.Object > sender RocketModInitializedEvent event Returns Type Description Task | Improve this Doc View Source HandleEventAsync(Nullable<Object>, OpenModInitializedEvent) Declaration public Task HandleEventAsync(object? sender, OpenModInitializedEvent event) Parameters Type Name Description System.Nullable < System.Object > sender OpenModInitializedEvent event Returns Type Description Task Implements IEventListener<> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Rcon.RocketModRconClient.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Rcon.RocketModRconClient.html",
    "title": "Class RocketModRconClient | OpenMod Docs",
    "keywords": "Class RocketModRconClient Inheritance System.Object RocketModRconClient Namespace : OpenMod.Unturned.RocketMod.Rcon Assembly : OpenMod.Unturned.dll Syntax public class RocketModRconClient : BaseTcpRconClient Constructors | Improve this Doc View Source RocketModRconClient(ILogger<RocketModRconClient>, TcpClient, IRconHost, IServiceProvider) Declaration public RocketModRconClient(ILogger<RocketModRconClient> logger, TcpClient tcpClient, IRconHost host, IServiceProvider serviceProvider) Parameters Type Name Description ILogger < RocketModRconClient > logger TcpClient tcpClient IRconHost host IServiceProvider serviceProvider Methods | Improve this Doc View Source OnDataReceivedAsync(ArraySegment<Byte>) Declaration protected override Task OnDataReceivedAsync(ArraySegment<byte> data) Parameters Type Name Description ArraySegment < System.Byte > data Returns Type Description Task | Improve this Doc View Source SendMessageAsync(String, CancellationToken) Declaration public override Task SendMessageAsync(string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.String message CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SendPacketAsync(RocketModRconPacket, CancellationToken) Declaration protected Task SendPacketAsync(RocketModRconPacket packet, CancellationToken cancellationToken = null) Parameters Type Name Description RocketModRconPacket packet CancellationToken cancellationToken Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Rcon.RocketModRconHost.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Rcon.RocketModRconHost.html",
    "title": "Class RocketModRconHost | OpenMod Docs",
    "keywords": "Class RocketModRconHost Inheritance System.Object RocketModRconHost Namespace : OpenMod.Unturned.RocketMod.Rcon Assembly : OpenMod.Unturned.dll Syntax public class RocketModRconHost : BaseTcpRconHost<RocketModRconClient> Constructors | Improve this Doc View Source RocketModRconHost(IServiceProvider) Declaration public RocketModRconHost(IServiceProvider serviceProvider) Parameters Type Name Description IServiceProvider serviceProvider Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.Rcon.RocketModRconPacket.html": {
    "href": "api/OpenMod.Unturned.RocketMod.Rcon.RocketModRconPacket.html",
    "title": "Class RocketModRconPacket | OpenMod Docs",
    "keywords": "Class RocketModRconPacket Inheritance System.Object RocketModRconPacket Namespace : OpenMod.Unturned.RocketMod.Rcon Assembly : OpenMod.Unturned.dll Syntax public class RocketModRconPacket : object Properties | Improve this Doc View Source Body Declaration public string? Body { get; set; } Property Value Type Description System.Nullable < System.String > | Improve this Doc View Source NewLineType Declaration public NewLineType NewLineType { get; set; } Property Value Type Description NewLineType Methods | Improve this Doc View Source Serialize() Declaration public byte[] Serialize() Returns Type Description System.Byte [] Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.RocketModComponent.html": {
    "href": "api/OpenMod.Unturned.RocketMod.RocketModComponent.html",
    "title": "Class RocketModComponent | OpenMod Docs",
    "keywords": "Class RocketModComponent The OpenMod component for RocketMod. Inheritance System.Object RocketModComponent Implements IRocketModComponent IOpenModComponent Namespace : OpenMod.Unturned.RocketMod Assembly : OpenMod.Unturned.dll Syntax public class RocketModComponent : object, IRocketModComponent, IOpenModComponent Constructors | Improve this Doc View Source RocketModComponent(IRuntime) Declaration public RocketModComponent(IRuntime runtime) Parameters Type Name Description IRuntime runtime Properties | Improve this Doc View Source DataStore Declaration public IDataStore DataStore { get; } Property Value Type Description IDataStore | Improve this Doc View Source IsComponentAlive Declaration public bool IsComponentAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LifetimeScope Declaration public ILifetimeScope LifetimeScope { get; } Property Value Type Description ILifetimeScope | Improve this Doc View Source OpenModComponentId Declaration public string OpenModComponentId { get; } Property Value Type Description System.String | Improve this Doc View Source WorkingDirectory Declaration public string WorkingDirectory { get; } Property Value Type Description System.String Implements IRocketModComponent IOpenModComponent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.RocketModIntegration.html": {
    "href": "api/OpenMod.Unturned.RocketMod.RocketModIntegration.html",
    "title": "Class RocketModIntegration | OpenMod Docs",
    "keywords": "Class RocketModIntegration The OpenMod integration for RocketMod. Inheritance System.Object RocketModIntegration Namespace : OpenMod.Unturned.RocketMod Assembly : OpenMod.Unturned.dll Syntax public class RocketModIntegration : IDisposable Constructors | Improve this Doc View Source RocketModIntegration(IRocketModComponent, IEventBus, ILogger<RocketModIntegration>, ILoggerFactory) Declaration public RocketModIntegration(IRocketModComponent rocketModComponent, IEventBus eventBus, ILogger<RocketModIntegration> logger, ILoggerFactory loggerFactory) Parameters Type Name Description IRocketModComponent rocketModComponent IEventBus eventBus ILogger < RocketModIntegration > logger ILoggerFactory loggerFactory Methods | Improve this Doc View Source Dispose() Disposes the RocketMod integration. Declaration public void Dispose() Remarks This API is for OpenMod internal usage only and should not be called by plugins. | Improve this Doc View Source GetRocketFolder() Declaration public static string GetRocketFolder() Returns Type Description System.String | Improve this Doc View Source Install() Installs the RocketMod integration. Declaration public void Install() Remarks This API is for OpenMod internal usage only and should not be called by plugins. | Improve this Doc View Source IsRocketModApiAssembly(Assembly) Checks if the given assembly is the Rocket.API assembly. Declaration public static bool IsRocketModApiAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description System.Boolean | Improve this Doc View Source IsRocketModApiLoaded(out Nullable<Assembly>) Checks if the Rocket.API assembly is loaded. Declaration public static bool IsRocketModApiLoaded(out Assembly? assembly) Parameters Type Name Description System.Nullable < Assembly > assembly Returns Type Description System.Boolean | Improve this Doc View Source IsRocketModAssembly(Assembly) Checks if the given assembly is a RocketMod assembly. Declaration public static bool IsRocketModAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description System.Boolean | Improve this Doc View Source IsRocketModCoreAssembly(Assembly) Checks if the given assembly is the Rocket.Core assembly. Declaration public static bool IsRocketModCoreAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description System.Boolean | Improve this Doc View Source IsRocketModCoreLoaded(out Nullable<Assembly>) Checks if the Rocket.Core assembly is loaded. Declaration public static bool IsRocketModCoreLoaded(out Assembly? assembly) Parameters Type Name Description System.Nullable < Assembly > assembly Returns Type Description System.Boolean | Improve this Doc View Source IsRocketModInstalled() Checks if RocketMod is installed as an Unturned module. Declaration public static bool IsRocketModInstalled() Returns Type Description System.Boolean | Improve this Doc View Source IsRocketModReady() Checks if RocketMod for Unturned is loaded and ready. Declaration public static bool IsRocketModReady() Returns Type Description System.Boolean | Improve this Doc View Source IsRocketModUnturnedAssembly(Assembly) Checks if the given assembly is the Rocket.Unturned assembly. Declaration public static bool IsRocketModUnturnedAssembly(Assembly assembly) Parameters Type Name Description Assembly assembly Returns Type Description System.Boolean | Improve this Doc View Source IsRocketModUnturnedLoaded(out Nullable<Assembly>) Checks if the Rocket.Unturned assembly is loaded. Declaration public static bool IsRocketModUnturnedLoaded(out Assembly? assembly) Parameters Type Name Description System.Nullable < Assembly > assembly Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.RocketMod.RocketModPluginsLoadedEventListener.html": {
    "href": "api/OpenMod.Unturned.RocketMod.RocketModPluginsLoadedEventListener.html",
    "title": "Class RocketModPluginsLoadedEventListener | OpenMod Docs",
    "keywords": "Class RocketModPluginsLoadedEventListener Inheritance System.Object RocketModPluginsLoadedEventListener Namespace : OpenMod.Unturned.RocketMod Assembly : OpenMod.Unturned.dll Syntax public class RocketModPluginsLoadedEventListener : IEventListener<RocketModPluginsLoadedEvent> Constructors | Improve this Doc View Source RocketModPluginsLoadedEventListener(ILoggerFactory, IRocketModComponent, IOpenModUnturnedConfiguration) Declaration public RocketModPluginsLoadedEventListener(ILoggerFactory loggerFactory, IRocketModComponent rocketModComponent, IOpenModUnturnedConfiguration unturnedConfiguration) Parameters Type Name Description ILoggerFactory loggerFactory IRocketModComponent rocketModComponent IOpenModUnturnedConfiguration unturnedConfiguration Methods | Improve this Doc View Source HandleEventAsync(Nullable<Object>, RocketModPluginsLoadedEvent) Declaration public Task HandleEventAsync(object? sender, RocketModPluginsLoadedEvent event) Parameters Type Name Description System.Nullable < System.Object > sender RocketModPluginsLoadedEvent event Returns Type Description Task Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Server.Events.html": {
    "href": "api/OpenMod.Unturned.Server.Events.html",
    "title": "Namespace OpenMod.Unturned.Server.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Server.Events Classes UnturnedServerHostedEvent The event that is triggered when the server has been hosted. UnturnedShutdownCommencedEvent The event that is triggered when the game shutdown has commenced."
  },
  "api/OpenMod.Unturned.Server.Events.UnturnedServerHostedEvent.html": {
    "href": "api/OpenMod.Unturned.Server.Events.UnturnedServerHostedEvent.html",
    "title": "Class UnturnedServerHostedEvent | OpenMod Docs",
    "keywords": "Class UnturnedServerHostedEvent The event that is triggered when the server has been hosted. Inheritance System.Object UnturnedServerHostedEvent Namespace : OpenMod.Unturned.Server.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedServerHostedEvent : Event Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Server.Events.UnturnedShutdownCommencedEvent.html": {
    "href": "api/OpenMod.Unturned.Server.Events.UnturnedShutdownCommencedEvent.html",
    "title": "Class UnturnedShutdownCommencedEvent | OpenMod Docs",
    "keywords": "Class UnturnedShutdownCommencedEvent The event that is triggered when the game shutdown has commenced. Inheritance System.Object UnturnedShutdownCommencedEvent Namespace : OpenMod.Unturned.Server.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedShutdownCommencedEvent : Event Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.ServiceConfigurator.html": {
    "href": "api/OpenMod.Unturned.ServiceConfigurator.html",
    "title": "Class ServiceConfigurator | OpenMod Docs",
    "keywords": "Class ServiceConfigurator Inheritance System.Object ServiceConfigurator Namespace : OpenMod.Unturned Assembly : OpenMod.Unturned.dll Syntax public class ServiceConfigurator : IServiceConfigurator Methods | Improve this Doc View Source ConfigureServices(IOpenModServiceConfigurationContext, IServiceCollection) Declaration public void ConfigureServices(IOpenModServiceConfigurationContext openModStartupContext, IServiceCollection serviceCollection) Parameters Type Name Description IOpenModServiceConfigurationContext openModStartupContext IServiceCollection serviceCollection Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Steam.CSteamIDCommandParameterResolveProvider.html": {
    "href": "api/OpenMod.Unturned.Steam.CSteamIDCommandParameterResolveProvider.html",
    "title": "Class CSteamIDCommandParameterResolveProvider | OpenMod Docs",
    "keywords": "Class CSteamIDCommandParameterResolveProvider Inheritance System.Object CSteamIDCommandParameterResolveProvider Namespace : OpenMod.Unturned.Steam Assembly : OpenMod.Unturned.dll Syntax public class CSteamIDCommandParameterResolveProvider : ICommandParameterResolveProvider Methods | Improve this Doc View Source ResolveAsync(Type, String) Declaration public Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source Supports(Type) Declaration public bool Supports(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Steam.html": {
    "href": "api/OpenMod.Unturned.Steam.html",
    "title": "Namespace OpenMod.Unturned.Steam | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Steam Classes CSteamIDCommandParameterResolveProvider"
  },
  "api/OpenMod.Unturned.UnturnedHostInformation.html": {
    "href": "api/OpenMod.Unturned.UnturnedHostInformation.html",
    "title": "Class UnturnedHostInformation | OpenMod Docs",
    "keywords": "Class UnturnedHostInformation Inheritance System.Object UnturnedHostInformation Implements IGameHostInformation IHostInformation Namespace : OpenMod.Unturned Assembly : OpenMod.Unturned.dll Syntax public class UnturnedHostInformation : object, IGameHostInformation, IHostInformation Constructors | Improve this Doc View Source UnturnedHostInformation() Declaration public UnturnedHostInformation() Properties | Improve this Doc View Source GameDisplayName Declaration public string GameDisplayName { get; } Property Value Type Description System.String | Improve this Doc View Source GameVersion Declaration public string GameVersion { get; } Property Value Type Description System.String | Improve this Doc View Source HostName Declaration public string HostName { get; } Property Value Type Description System.String | Improve this Doc View Source HostVersion Declaration public SemVersion HostVersion { get; } Property Value Type Description SemVersion | Improve this Doc View Source IsClient Declaration public bool IsClient { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsServer Declaration public bool IsServer { get; } Property Value Type Description System.Boolean | Improve this Doc View Source ServerAddress Declaration public IPAddress? ServerAddress { get; } Property Value Type Description System.Nullable < IPAddress > | Improve this Doc View Source ServerInstance Declaration public string ServerInstance { get; } Property Value Type Description System.String | Improve this Doc View Source ServerName Declaration public string ServerName { get; } Property Value Type Description System.String | Improve this Doc View Source ServerPort Declaration public ushort? ServerPort { get; } Property Value Type Description System.Nullable < System.UInt16 > Implements IGameHostInformation IHostInformation Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.Events.html": {
    "href": "api/OpenMod.Unturned.Users.Events.html",
    "title": "Namespace OpenMod.Unturned.Users.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Users.Events Classes UnturnedPendingUserDisconnectedEvent The event that is triggered when a pending user has disconnected. UnturnedPendingUserEvent The base event for all pending Unturned user related events. UnturnedUserConnectedEvent The event that is triggered when an Unturned user has connected. UnturnedUserConnectingEvent The event that is triggered when an Unturned user is connecting. UnturnedUserDisconnectedEvent The event that is triggered when an Unturned user has disconnected. UnturnedUserEvent The base event for all Unturned user related events. UnturnedUserFirstConnectingEvent The event that is triggered when an Unturned user connects for the first time."
  },
  "api/OpenMod.Unturned.Users.Events.UnturnedPendingUserDisconnectedEvent.html": {
    "href": "api/OpenMod.Unturned.Users.Events.UnturnedPendingUserDisconnectedEvent.html",
    "title": "Class UnturnedPendingUserDisconnectedEvent | OpenMod Docs",
    "keywords": "Class UnturnedPendingUserDisconnectedEvent The event that is triggered when a pending user has disconnected. Inheritance System.Object UnturnedPendingUserEvent UnturnedPendingUserDisconnectedEvent Implements IUserEvent IUserDisconnectedEvent Inherited Members UnturnedPendingUserEvent.User Namespace : OpenMod.Unturned.Users.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPendingUserDisconnectedEvent : UnturnedPendingUserEvent, IUserEvent, IUserDisconnectedEvent Constructors | Improve this Doc View Source UnturnedPendingUserDisconnectedEvent(UnturnedPendingUser) Declaration public UnturnedPendingUserDisconnectedEvent(UnturnedPendingUser user) Parameters Type Name Description UnturnedPendingUser user Implements IUserEvent IUserDisconnectedEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.Events.UnturnedPendingUserEvent.html": {
    "href": "api/OpenMod.Unturned.Users.Events.UnturnedPendingUserEvent.html",
    "title": "Class UnturnedPendingUserEvent | OpenMod Docs",
    "keywords": "Class UnturnedPendingUserEvent The base event for all pending Unturned user related events. Inheritance System.Object UnturnedPendingUserEvent UnturnedPendingUserDisconnectedEvent UnturnedUserConnectingEvent Implements IUserEvent Namespace : OpenMod.Unturned.Users.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedPendingUserEvent : Event, IUserEvent Constructors | Improve this Doc View Source UnturnedPendingUserEvent(UnturnedPendingUser) Declaration protected UnturnedPendingUserEvent(UnturnedPendingUser user) Parameters Type Name Description UnturnedPendingUser user Properties | Improve this Doc View Source User Gets the pending Unturned user related to the event. Declaration public UnturnedPendingUser User { get; } Property Value Type Description UnturnedPendingUser Implements IUserEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.Events.UnturnedUserConnectedEvent.html": {
    "href": "api/OpenMod.Unturned.Users.Events.UnturnedUserConnectedEvent.html",
    "title": "Class UnturnedUserConnectedEvent | OpenMod Docs",
    "keywords": "Class UnturnedUserConnectedEvent The event that is triggered when an Unturned user has connected. Inheritance System.Object UnturnedUserEvent UnturnedUserConnectedEvent Implements IUserEvent IUserConnectedEvent Inherited Members UnturnedUserEvent.User Namespace : OpenMod.Unturned.Users.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedUserConnectedEvent : UnturnedUserEvent, IUserEvent, IUserConnectedEvent Constructors | Improve this Doc View Source UnturnedUserConnectedEvent(UnturnedUser) Declaration public UnturnedUserConnectedEvent(UnturnedUser user) Parameters Type Name Description UnturnedUser user Implements IUserEvent IUserConnectedEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.Events.UnturnedUserConnectingEvent.html": {
    "href": "api/OpenMod.Unturned.Users.Events.UnturnedUserConnectingEvent.html",
    "title": "Class UnturnedUserConnectingEvent | OpenMod Docs",
    "keywords": "Class UnturnedUserConnectingEvent The event that is triggered when an Unturned user is connecting. Inheritance System.Object UnturnedPendingUserEvent UnturnedUserConnectingEvent UnturnedUserFirstConnectingEvent Implements IUserEvent IUserConnectingEvent Inherited Members UnturnedPendingUserEvent.User Namespace : OpenMod.Unturned.Users.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedUserConnectingEvent : UnturnedPendingUserEvent, IUserEvent, IUserConnectingEvent Constructors | Improve this Doc View Source UnturnedUserConnectingEvent(UnturnedPendingUser) Declaration public UnturnedUserConnectingEvent(UnturnedPendingUser user) Parameters Type Name Description UnturnedPendingUser user Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RejectionReason Declaration public string? RejectionReason { get; } Property Value Type Description System.Nullable < System.String > Methods | Improve this Doc View Source RejectAsync(String) Declaration public Task RejectAsync(string reason) Parameters Type Name Description System.String reason Returns Type Description Task Implements IUserEvent IUserConnectingEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.Events.UnturnedUserDisconnectedEvent.html": {
    "href": "api/OpenMod.Unturned.Users.Events.UnturnedUserDisconnectedEvent.html",
    "title": "Class UnturnedUserDisconnectedEvent | OpenMod Docs",
    "keywords": "Class UnturnedUserDisconnectedEvent The event that is triggered when an Unturned user has disconnected. Inheritance System.Object UnturnedUserEvent UnturnedUserDisconnectedEvent Implements IUserEvent IUserDisconnectedEvent Inherited Members UnturnedUserEvent.User Namespace : OpenMod.Unturned.Users.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedUserDisconnectedEvent : UnturnedUserEvent, IUserEvent, IUserDisconnectedEvent Constructors | Improve this Doc View Source UnturnedUserDisconnectedEvent(UnturnedUser) Declaration public UnturnedUserDisconnectedEvent(UnturnedUser user) Parameters Type Name Description UnturnedUser user Implements IUserEvent IUserDisconnectedEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.Events.UnturnedUserEvent.html": {
    "href": "api/OpenMod.Unturned.Users.Events.UnturnedUserEvent.html",
    "title": "Class UnturnedUserEvent | OpenMod Docs",
    "keywords": "Class UnturnedUserEvent The base event for all Unturned user related events. Inheritance System.Object UnturnedUserEvent UnturnedUserConnectedEvent UnturnedUserDisconnectedEvent Implements IUserEvent Namespace : OpenMod.Unturned.Users.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedUserEvent : Event, IUserEvent Constructors | Improve this Doc View Source UnturnedUserEvent(UnturnedUser) Declaration protected UnturnedUserEvent(UnturnedUser user) Parameters Type Name Description UnturnedUser user Properties | Improve this Doc View Source User Gets the Unturned user related to the event. Declaration public UnturnedUser User { get; } Property Value Type Description UnturnedUser Implements IUserEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.Events.UnturnedUserFirstConnectingEvent.html": {
    "href": "api/OpenMod.Unturned.Users.Events.UnturnedUserFirstConnectingEvent.html",
    "title": "Class UnturnedUserFirstConnectingEvent | OpenMod Docs",
    "keywords": "Class UnturnedUserFirstConnectingEvent The event that is triggered when an Unturned user connects for the first time. Inheritance System.Object UnturnedPendingUserEvent UnturnedUserConnectingEvent UnturnedUserFirstConnectingEvent Implements IUserEvent IUserConnectingEvent IUserFirstConnectingEvent Inherited Members UnturnedUserConnectingEvent.IsCancelled UnturnedUserConnectingEvent.RejectionReason UnturnedUserConnectingEvent.RejectAsync(String) UnturnedPendingUserEvent.User Namespace : OpenMod.Unturned.Users.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedUserFirstConnectingEvent : UnturnedUserConnectingEvent, IUserEvent, IUserConnectingEvent, IUserFirstConnectingEvent Constructors | Improve this Doc View Source UnturnedUserFirstConnectingEvent(UnturnedPendingUser) Declaration public UnturnedUserFirstConnectingEvent(UnturnedPendingUser user) Parameters Type Name Description UnturnedPendingUser user Implements IUserEvent IUserConnectingEvent IUserFirstConnectingEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.html": {
    "href": "api/OpenMod.Unturned.Users.html",
    "title": "Namespace OpenMod.Unturned.Users | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Users Classes UnturnedCommandHandler UnturnedPendingUser Represents a pending unturned user. UnturnedPendingUserSession UnturnedUser Represents an Unturned user. UnturnedUserDirectory UnturnedUserProvider UnturnedUserSession Interfaces IUnturnedUserDirectory The service used for querying Unturned users. Unlike these methods are not async and are guaranteed to not block."
  },
  "api/OpenMod.Unturned.Users.IUnturnedUserDirectory.html": {
    "href": "api/OpenMod.Unturned.Users.IUnturnedUserDirectory.html",
    "title": "Interface IUnturnedUserDirectory | OpenMod Docs",
    "keywords": "Interface IUnturnedUserDirectory The service used for querying Unturned users. Unlike these methods are not async and are guaranteed to not block. Namespace : OpenMod.Unturned.Users Assembly : OpenMod.Unturned.dll Syntax public interface IUnturnedUserDirectory Methods | Improve this Doc View Source FindPendingUser(CSteamID) Tries to find a pending Unturned player user based on Steam ID. Declaration UnturnedPendingUser FindPendingUser(CSteamID steamId) Parameters Type Name Description CSteamID steamId The Steam ID of the pending Unturned user to look for. Returns Type Description UnturnedPendingUser The pending Unturned user if found; otherwise, null . | Improve this Doc View Source FindUser(CSteamID) Tries to find a Unturned user based on Steam ID. Declaration UnturnedUser FindUser(CSteamID steamId) Parameters Type Name Description CSteamID steamId The Steam ID of the Unturned user to look for. Returns Type Description UnturnedUser The Unturned user if found; otherwise, null . | Improve this Doc View Source FindUser(String, UserSearchMode) Tries to find a Unturned player user based on ID or name depending on . Declaration UnturnedUser FindUser(string searchString, UserSearchMode searchMode) Parameters Type Name Description System.String searchString Name or ID of the user. The value depends on . UserSearchMode searchMode The search mode. See . Returns Type Description UnturnedUser The Unturned user if found; otherwise, null . | Improve this Doc View Source GetOnlineUsers() Gets all online Unturned users. Declaration ICollection<UnturnedUser> GetOnlineUsers() Returns Type Description ICollection < UnturnedUser > All online Unturned users. | Improve this Doc View Source GetPendingUser(SteamPending) Gets the Unturned user instance for the given pending player. Declaration UnturnedPendingUser GetPendingUser(SteamPending pending) Parameters Type Name Description SteamPending pending The pending player to get the Unturned user of. Returns Type Description UnturnedPendingUser The Unturned user instance of the given pending player. | Improve this Doc View Source GetPendingUsers() Gets all pending Unturned users. Declaration ICollection<UnturnedPendingUser> GetPendingUsers() Returns Type Description ICollection < UnturnedPendingUser > All pending Unturned users. | Improve this Doc View Source GetUser(Player) Gets the Unturned user instance for the given player. Declaration UnturnedUser GetUser(Player player) Parameters Type Name Description Player player The player to get the Unturned user of. Returns Type Description UnturnedUser The Unturned user instance of the given player. Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.UnturnedCommandHandler.html": {
    "href": "api/OpenMod.Unturned.Users.UnturnedCommandHandler.html",
    "title": "Class UnturnedCommandHandler | OpenMod Docs",
    "keywords": "Class UnturnedCommandHandler Inheritance System.Object UnturnedCommandHandler Namespace : OpenMod.Unturned.Users Assembly : OpenMod.Unturned.dll Syntax public class UnturnedCommandHandler : IDisposable Constructors | Improve this Doc View Source UnturnedCommandHandler(ICommandExecutor, IUserManager) Declaration public UnturnedCommandHandler(ICommandExecutor commandExecutor, IUserManager userManager) Parameters Type Name Description ICommandExecutor commandExecutor IUserManager userManager Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source OnCheckCommandPermissions(SteamPlayer, String, ref Boolean, ref Boolean) Declaration protected virtual void OnCheckCommandPermissions(SteamPlayer steamPlayer, string text, ref bool shouldExecuteCommand, ref bool shouldList) Parameters Type Name Description SteamPlayer steamPlayer System.String text System.Boolean shouldExecuteCommand System.Boolean shouldList | Improve this Doc View Source Subscribe() Declaration public virtual void Subscribe() | Improve this Doc View Source Unsubscribe() Declaration public virtual void Unsubscribe() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.UnturnedPendingUser.html": {
    "href": "api/OpenMod.Unturned.Users.UnturnedPendingUser.html",
    "title": "Class UnturnedPendingUser | OpenMod Docs",
    "keywords": "Class UnturnedPendingUser Represents a pending unturned user. Inheritance System.Object UnturnedPendingUser Implements IEquatable < UnturnedPendingUser > IEquatable < UnturnedUser > Namespace : OpenMod.Unturned.Users Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPendingUser : UserBase, IEquatable<UnturnedPendingUser>, IEquatable<UnturnedUser> Constructors | Improve this Doc View Source UnturnedPendingUser(IUserProvider, IUserDataStore, SteamPending) Declaration public UnturnedPendingUser(IUserProvider userProvider, IUserDataStore userDataStore, SteamPending steamPending) Parameters Type Name Description IUserProvider userProvider IUserDataStore userDataStore SteamPending steamPending Properties | Improve this Doc View Source Id See SteamId . Declaration public override string Id { get; } Property Value Type Description System.String | Improve this Doc View Source SteamId The Steam ID of the user. Declaration public CSteamID SteamId { get; } Property Value Type Description CSteamID | Improve this Doc View Source SteamPending The wrapped SteamPending. Declaration public SteamPending SteamPending { get; } Property Value Type Description SteamPending Methods | Improve this Doc View Source Equals(UnturnedPendingUser) Declaration public bool Equals(UnturnedPendingUser other) Parameters Type Name Description UnturnedPendingUser other Returns Type Description System.Boolean | Improve this Doc View Source Equals(UnturnedUser) Declaration public bool Equals(UnturnedUser other) Parameters Type Name Description UnturnedUser other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source PrintMessageAsync(String) Declaration public override Task PrintMessageAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, System.Drawing.Color) Declaration public override Task PrintMessageAsync(string message, System.Drawing.Color color) Parameters Type Name Description System.String message Color color Returns Type Description Task Implements IEquatable<> IEquatable<> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.UnturnedPendingUserSession.html": {
    "href": "api/OpenMod.Unturned.Users.UnturnedPendingUserSession.html",
    "title": "Class UnturnedPendingUserSession | OpenMod Docs",
    "keywords": "Class UnturnedPendingUserSession Inheritance System.Object UnturnedPendingUserSession Namespace : OpenMod.Unturned.Users Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPendingUserSession : UserSessionBase Constructors | Improve this Doc View Source UnturnedPendingUserSession(UnturnedPendingUser) Declaration public UnturnedPendingUserSession(UnturnedPendingUser user) Parameters Type Name Description UnturnedPendingUser user Methods | Improve this Doc View Source DisconnectAsync(String) Declaration public override Task DisconnectAsync(string reason = \"\") Parameters Type Name Description System.String reason Returns Type Description Task | Improve this Doc View Source OnSessionEnd() Declaration public void OnSessionEnd() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.UnturnedUser.html": {
    "href": "api/OpenMod.Unturned.Users.UnturnedUser.html",
    "title": "Class UnturnedUser | OpenMod Docs",
    "keywords": "Class UnturnedUser Represents an Unturned user. Inheritance System.Object UnturnedUser Implements IEquatable < UnturnedUser > IEquatable < UnturnedPendingUser > IPlayerUser < UnturnedPlayer > IPlayerUser IUser Namespace : OpenMod.Unturned.Users Assembly : OpenMod.Unturned.dll Syntax public class UnturnedUser : UserBase, IEquatable<UnturnedUser>, IEquatable<UnturnedPendingUser>, IPlayerUser<UnturnedPlayer>, IPlayerUser, IUser Constructors | Improve this Doc View Source UnturnedUser(UnturnedUserProvider, IUserDataStore, Player, UnturnedPendingUser) Declaration protected UnturnedUser(UnturnedUserProvider userProvider, IUserDataStore userDataStore, Player player, UnturnedPendingUser pending = null) Parameters Type Name Description UnturnedUserProvider userProvider IUserDataStore userDataStore Player player UnturnedPendingUser pending Properties | Improve this Doc View Source Id See SteamId . Declaration public override string Id { get; } Property Value Type Description System.String | Improve this Doc View Source Player Declaration public UnturnedPlayer Player { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source SteamId The Steam ID of the Unturned user. Declaration public CSteamID SteamId { get; } Property Value Type Description CSteamID Methods | Improve this Doc View Source Equals(UnturnedPendingUser) Declaration public bool Equals(UnturnedPendingUser other) Parameters Type Name Description UnturnedPendingUser other Returns Type Description System.Boolean | Improve this Doc View Source Equals(UnturnedUser) Declaration public bool Equals(UnturnedUser other) Parameters Type Name Description UnturnedUser other Returns Type Description System.Boolean | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source PrintMessageAsync(String) Declaration public override Task PrintMessageAsync(string message) Parameters Type Name Description System.String message Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, Color) Declaration public override Task PrintMessageAsync(string message, Color color) Parameters Type Name Description System.String message Color color Returns Type Description Task | Improve this Doc View Source PrintMessageAsync(String, Color, Boolean, String) Declaration public Task PrintMessageAsync(string message, Color color, bool isRich, string iconUrl) Parameters Type Name Description System.String message Color color System.Boolean isRich System.String iconUrl Returns Type Description Task Explicit Interface Implementations | Improve this Doc View Source IPlayerUser.Player Declaration IPlayer IPlayerUser.Player { get; } Returns Type Description IPlayer Implements IEquatable<> IEquatable<> IPlayerUser<T> IPlayerUser IUser Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.UnturnedUserDirectory.html": {
    "href": "api/OpenMod.Unturned.Users.UnturnedUserDirectory.html",
    "title": "Class UnturnedUserDirectory | OpenMod Docs",
    "keywords": "Class UnturnedUserDirectory Inheritance System.Object UnturnedUserDirectory Implements IUnturnedUserDirectory Namespace : OpenMod.Unturned.Users Assembly : OpenMod.Unturned.dll Syntax public class UnturnedUserDirectory : object, IUnturnedUserDirectory Constructors | Improve this Doc View Source UnturnedUserDirectory(IUserManager) Declaration public UnturnedUserDirectory(IUserManager userManager) Parameters Type Name Description IUserManager userManager Methods | Improve this Doc View Source FindPendingUser(CSteamID) Declaration public UnturnedPendingUser FindPendingUser(CSteamID steamId) Parameters Type Name Description CSteamID steamId Returns Type Description UnturnedPendingUser | Improve this Doc View Source FindUser(CSteamID) Declaration public UnturnedUser FindUser(CSteamID steamId) Parameters Type Name Description CSteamID steamId Returns Type Description UnturnedUser | Improve this Doc View Source FindUser(String, UserSearchMode) Declaration public UnturnedUser FindUser(string searchString, UserSearchMode searchMode) Parameters Type Name Description System.String searchString UserSearchMode searchMode Returns Type Description UnturnedUser | Improve this Doc View Source GetOnlineUsers() Declaration public ICollection<UnturnedUser> GetOnlineUsers() Returns Type Description ICollection < UnturnedUser > | Improve this Doc View Source GetPendingUser(SteamPending) Declaration public UnturnedPendingUser GetPendingUser(SteamPending pending) Parameters Type Name Description SteamPending pending Returns Type Description UnturnedPendingUser | Improve this Doc View Source GetPendingUsers() Declaration public ICollection<UnturnedPendingUser> GetPendingUsers() Returns Type Description ICollection < UnturnedPendingUser > | Improve this Doc View Source GetUnturnedUserProvider() Declaration protected UnturnedUserProvider GetUnturnedUserProvider() Returns Type Description UnturnedUserProvider | Improve this Doc View Source GetUser(Player) Declaration public UnturnedUser GetUser(Player player) Parameters Type Name Description Player player Returns Type Description UnturnedUser Implements IUnturnedUserDirectory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.UnturnedUserProvider.html": {
    "href": "api/OpenMod.Unturned.Users.UnturnedUserProvider.html",
    "title": "Class UnturnedUserProvider | OpenMod Docs",
    "keywords": "Class UnturnedUserProvider Inheritance System.Object UnturnedUserProvider Implements IDisposable Namespace : OpenMod.Unturned.Users Assembly : OpenMod.Unturned.dll Syntax public class UnturnedUserProvider : IUserProvider, IDisposable Constructors | Improve this Doc View Source UnturnedUserProvider(IEventBus, IOpenModStringLocalizer, IUserDataSeeder, IUserDataStore, IRuntime) Declaration public UnturnedUserProvider(IEventBus eventBus, IOpenModStringLocalizer stringLocalizer, IUserDataSeeder dataSeeder, IUserDataStore userDataStore, IRuntime runtime) Parameters Type Name Description IEventBus eventBus IOpenModStringLocalizer stringLocalizer IUserDataSeeder dataSeeder IUserDataStore userDataStore IRuntime runtime Methods | Improve this Doc View Source BanAsync(IUser, Nullable<IUser>, Nullable<String>, Nullable<DateTime>) Declaration public Task<bool> BanAsync(IUser user, IUser? instigator = null, string? reason = null, DateTime? expireDate = null) Parameters Type Name Description IUser user System.Nullable < IUser > instigator System.Nullable < System.String > reason System.Nullable < DateTime > expireDate Returns Type Description Task < System.Boolean > | Improve this Doc View Source BanAsync(IUser, Nullable<String>, Nullable<DateTime>) Declaration public Task<bool> BanAsync(IUser user, string? reason = null, DateTime? expireDate = null) Parameters Type Name Description IUser user System.Nullable < System.String > reason System.Nullable < DateTime > expireDate Returns Type Description Task < System.Boolean > | Improve this Doc View Source BroadcastAsync(String, Nullable<System.Drawing.Color>) Declaration public Task BroadcastAsync(string message, System.Drawing.Color? color) Parameters Type Name Description System.String message System.Nullable < System.Drawing.Color > color Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, Nullable<System.Drawing.Color>, Boolean, String) Declaration public Task BroadcastAsync(string message, System.Drawing.Color? color, bool isRich, string iconUrl) Parameters Type Name Description System.String message System.Nullable < System.Drawing.Color > color System.Boolean isRich System.String iconUrl Returns Type Description Task | Improve this Doc View Source BroadcastAsync(String, String, Nullable<System.Drawing.Color>) Declaration public Task BroadcastAsync(string userType, string message, System.Drawing.Color? color) Parameters Type Name Description System.String userType System.String message System.Nullable < System.Drawing.Color > color Returns Type Description Task | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source FindUserAsync(String, String, UserSearchMode) Declaration public Task<IUser?> FindUserAsync(string userType, string searchString, UserSearchMode searchMode) Parameters Type Name Description System.String userType System.String searchString UserSearchMode searchMode Returns Type Description Task < System.Nullable < IUser >> | Improve this Doc View Source FinishSession(UnturnedPendingUser) Declaration protected virtual void FinishSession(UnturnedPendingUser pending) Parameters Type Name Description UnturnedPendingUser pending | Improve this Doc View Source GetOnlineUsers() Declaration public ICollection<UnturnedUser> GetOnlineUsers() Returns Type Description ICollection < UnturnedUser > | Improve this Doc View Source GetPendingUsers() Declaration public ICollection<UnturnedPendingUser> GetPendingUsers() Returns Type Description ICollection < UnturnedPendingUser > | Improve this Doc View Source GetUser(CSteamID) Declaration public virtual UnturnedUser GetUser(CSteamID id) Parameters Type Name Description CSteamID id Returns Type Description UnturnedUser | Improve this Doc View Source GetUser(Player) Declaration public virtual UnturnedUser GetUser(Player player) Parameters Type Name Description Player player Returns Type Description UnturnedUser | Improve this Doc View Source GetUser(SteamPlayer) Declaration public virtual UnturnedUser GetUser(SteamPlayer player) Parameters Type Name Description SteamPlayer player Returns Type Description UnturnedUser | Improve this Doc View Source GetUsersAsync(String) Declaration public Task<IReadOnlyCollection<IUser>> GetUsersAsync(string userType) Parameters Type Name Description System.String userType Returns Type Description Task < IReadOnlyCollection < IUser >> | Improve this Doc View Source KickAsync(IUser, Nullable<String>) Declaration public Task<bool> KickAsync(IUser user, string? reason = null) Parameters Type Name Description IUser user System.Nullable < System.String > reason Returns Type Description Task < System.Boolean > | Improve this Doc View Source OnPendingPlayerConnecting(ValidateAuthTicketResponse_t, ref Boolean, ref Nullable<String>) Declaration protected virtual void OnPendingPlayerConnecting(ValidateAuthTicketResponse_t callback, ref bool isValid, ref string? explanation) Parameters Type Name Description ValidateAuthTicketResponse_t callback System.Boolean isValid System.Nullable < System.String > explanation | Improve this Doc View Source OnPlayerConnected(CSteamID) Declaration protected virtual void OnPlayerConnected(CSteamID steamID) Parameters Type Name Description CSteamID steamID | Improve this Doc View Source OnPlayerDisconnected(CSteamID) Declaration protected virtual void OnPlayerDisconnected(CSteamID steamID) Parameters Type Name Description CSteamID steamID | Improve this Doc View Source OnRejectingPlayer(CSteamID, ESteamRejection, String) Declaration protected virtual void OnRejectingPlayer(CSteamID steamId, ESteamRejection rejection, string explanation) Parameters Type Name Description CSteamID steamId ESteamRejection rejection System.String explanation | Improve this Doc View Source SupportsUserType(String) Declaration public bool SupportsUserType(string userType) Parameters Type Name Description System.String userType Returns Type Description System.Boolean Implements IDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Users.UnturnedUserSession.html": {
    "href": "api/OpenMod.Unturned.Users.UnturnedUserSession.html",
    "title": "Class UnturnedUserSession | OpenMod Docs",
    "keywords": "Class UnturnedUserSession Inheritance System.Object UnturnedUserSession Namespace : OpenMod.Unturned.Users Assembly : OpenMod.Unturned.dll Syntax public class UnturnedUserSession : UserSessionBase Constructors | Improve this Doc View Source UnturnedUserSession(UnturnedUser, Nullable<IUserSession>) Declaration public UnturnedUserSession(UnturnedUser user, IUserSession? baseSession = null) Parameters Type Name Description UnturnedUser user System.Nullable < IUserSession > baseSession Methods | Improve this Doc View Source DisconnectAsync(String) Declaration public override Task DisconnectAsync(string reason = \"\") Parameters Type Name Description System.String reason Returns Type Description Task | Improve this Doc View Source OnSessionEnd() Declaration public void OnSessionEnd() Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.html",
    "title": "Namespace OpenMod.Unturned.Vehicles.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Vehicles.Events Classes UnturnedPlayerEnteredVehicleEvent The event that is triggered when a player has entered a vehicle. UnturnedPlayerEnteringVehicleEvent The event that is triggered when a player is entering a vehicle. UnturnedPlayerExitedVehicleEvent The event that is triggered when a player has exited a vehicle. UnturnedPlayerExitingVehicleEvent The event that is triggered when a player is exitting a vehicle. UnturnedPlayerSwappedSeatEvent The event that is triggered when a player has swapped their seat. UnturnedPlayerSwappingSeatEvent The event that is triggered when a player is swapping their seat. UnturnedVehicleCarjackingEvent The event that is triggered when a player is trying to carjack a vehicle. UnturnedVehicleDamagingEvent The event that is triggered when damage is being dealt to a vehicle. UnturnedVehicleDamagingTireEvent The event that is triggered when damage is dealt to a tire of a vehicle. UnturnedVehicleEvent The base class for all Unturned vehicle related events. UnturnedVehicleExplodingEvent The event that is triggered when a vehicle is going to explode. UnturnedVehicleLockpickingEvent The event that is triggered when a player tries to lockpick a vehicle. UnturnedVehicleLockUpdatedEvent The event that is triggered when the vehicle lock has been updated. UnturnedVehicleLockUpdatingEvent The event that is triggered when a vehicle lock status is getting updated. UnturnedVehicleRepairingEvent The event that is triggered when a player is repairing a vehicle. UnturnedVehicleReplacingBatteryEvent The event that is triggered when a player is replacing a vehicles battery. UnturnedVehicleSiphoningEvent The event that is triggered when a player is siphoning a vehicle. UnturnedVehicleSpawnedEvent The event that is triggered when a vehicle has spawned. UnturnedVehicleStealingBatteryEvent The event that is triggered when a player is removing a battery."
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerEnteredVehicleEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerEnteredVehicleEvent.html",
    "title": "Class UnturnedPlayerEnteredVehicleEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerEnteredVehicleEvent The event that is triggered when a player has entered a vehicle. Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerEnteredVehicleEvent Implements IPlayerEnteredVehicleEvent IPlayerEvent IVehicleEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerEnteredVehicleEvent : UnturnedPlayerEvent, IPlayerEnteredVehicleEvent, IPlayerEvent, IVehicleEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerEnteredVehicleEvent(UnturnedPlayer, UnturnedVehicle) Declaration public UnturnedPlayerEnteredVehicleEvent(UnturnedPlayer player, UnturnedVehicle vehicle) Parameters Type Name Description UnturnedPlayer player UnturnedVehicle vehicle Properties | Improve this Doc View Source Vehicle Declaration public UnturnedVehicle Vehicle { get; } Property Value Type Description UnturnedVehicle Explicit Interface Implementations | Improve this Doc View Source IVehicleEvent.Vehicle Declaration IVehicle IVehicleEvent.Vehicle { get; } Returns Type Description IVehicle Implements IPlayerEnteredVehicleEvent IPlayerEvent IVehicleEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerEnteringVehicleEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerEnteringVehicleEvent.html",
    "title": "Class UnturnedPlayerEnteringVehicleEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerEnteringVehicleEvent The event that is triggered when a player is entering a vehicle. Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerEnteringVehicleEvent Implements IPlayerEnteringVehicleEvent IPlayerEvent IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerEnteringVehicleEvent : UnturnedPlayerEvent, IPlayerEnteringVehicleEvent, IPlayerEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerEnteringVehicleEvent(UnturnedPlayer, UnturnedVehicle) Declaration public UnturnedPlayerEnteringVehicleEvent(UnturnedPlayer player, UnturnedVehicle vehicle) Parameters Type Name Description UnturnedPlayer player UnturnedVehicle vehicle Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Vehicle Declaration public UnturnedVehicle Vehicle { get; } Property Value Type Description UnturnedVehicle Explicit Interface Implementations | Improve this Doc View Source IVehicleEvent.Vehicle Declaration IVehicle IVehicleEvent.Vehicle { get; } Returns Type Description IVehicle Implements IPlayerEnteringVehicleEvent IPlayerEvent IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerExitedVehicleEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerExitedVehicleEvent.html",
    "title": "Class UnturnedPlayerExitedVehicleEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerExitedVehicleEvent The event that is triggered when a player has exited a vehicle. Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerExitedVehicleEvent Implements IPlayerExitedVehicleEvent IPlayerEvent IVehicleEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerExitedVehicleEvent : UnturnedPlayerEvent, IPlayerExitedVehicleEvent, IPlayerEvent, IVehicleEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerExitedVehicleEvent(UnturnedPlayer, UnturnedVehicle) Declaration public UnturnedPlayerExitedVehicleEvent(UnturnedPlayer player, UnturnedVehicle vehicle) Parameters Type Name Description UnturnedPlayer player UnturnedVehicle vehicle Properties | Improve this Doc View Source Vehicle Declaration public UnturnedVehicle Vehicle { get; } Property Value Type Description UnturnedVehicle Explicit Interface Implementations | Improve this Doc View Source IVehicleEvent.Vehicle Declaration IVehicle IVehicleEvent.Vehicle { get; } Returns Type Description IVehicle Implements IPlayerExitedVehicleEvent IPlayerEvent IVehicleEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerExitingVehicleEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerExitingVehicleEvent.html",
    "title": "Class UnturnedPlayerExitingVehicleEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerExitingVehicleEvent The event that is triggered when a player is exitting a vehicle. Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerExitingVehicleEvent Implements IPlayerExitingVehicleEvent IPlayerEvent IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerExitingVehicleEvent : UnturnedPlayerEvent, IPlayerExitingVehicleEvent, IPlayerEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedPlayerExitingVehicleEvent(UnturnedPlayer, UnturnedVehicle, Vector3, Single) Declaration public UnturnedPlayerExitingVehicleEvent(UnturnedPlayer player, UnturnedVehicle vehicle, Vector3 pendingLocation, float pendingYaw) Parameters Type Name Description UnturnedPlayer player UnturnedVehicle vehicle Vector3 pendingLocation System.Single pendingYaw Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PendingLocation Gets or sets the location the player will get teleported to. Declaration public Vector3 PendingLocation { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source PendingYaw Gets or sets the yaw to be set of the player. Declaration public float PendingYaw { get; set; } Property Value Type Description System.Single | Improve this Doc View Source Vehicle Declaration public UnturnedVehicle Vehicle { get; } Property Value Type Description UnturnedVehicle Explicit Interface Implementations | Improve this Doc View Source IVehicleEvent.Vehicle Declaration IVehicle IVehicleEvent.Vehicle { get; } Returns Type Description IVehicle Implements IPlayerExitingVehicleEvent IPlayerEvent IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerSwappedSeatEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerSwappedSeatEvent.html",
    "title": "Class UnturnedPlayerSwappedSeatEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerSwappedSeatEvent The event that is triggered when a player has swapped their seat. Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerSwappedSeatEvent Implements IPlayerEvent IVehicleEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerSwappedSeatEvent : UnturnedPlayerEvent, IPlayerEvent, IVehicleEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerSwappedSeatEvent(UnturnedPlayer, UnturnedVehicle, Byte, Byte) Declaration public UnturnedPlayerSwappedSeatEvent(UnturnedPlayer player, UnturnedVehicle vehicle, byte fromSeatIndex, byte toSeatIndex) Parameters Type Name Description UnturnedPlayer player UnturnedVehicle vehicle System.Byte fromSeatIndex System.Byte toSeatIndex Properties | Improve this Doc View Source FromSeatIndex Gets the seat the player has swapped from. Declaration public byte FromSeatIndex { get; } Property Value Type Description System.Byte | Improve this Doc View Source ToSeatIndex Gets the seat the player has swapped to. Declaration public byte ToSeatIndex { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Vehicle Declaration public UnturnedVehicle Vehicle { get; } Property Value Type Description UnturnedVehicle Explicit Interface Implementations | Improve this Doc View Source IVehicleEvent.Vehicle Declaration IVehicle IVehicleEvent.Vehicle { get; } Returns Type Description IVehicle Implements IPlayerEvent IVehicleEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerSwappingSeatEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedPlayerSwappingSeatEvent.html",
    "title": "Class UnturnedPlayerSwappingSeatEvent | OpenMod Docs",
    "keywords": "Class UnturnedPlayerSwappingSeatEvent The event that is triggered when a player is swapping their seat. Inheritance System.Object UnturnedPlayerEvent UnturnedPlayerSwappingSeatEvent Implements IPlayerEvent ICancellableEvent IVehicleEvent IEvent Inherited Members UnturnedPlayerEvent.Player UnturnedPlayerEvent.IPlayerEvent.Player Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedPlayerSwappingSeatEvent : UnturnedPlayerEvent, IPlayerEvent, ICancellableEvent, IVehicleEvent, IEvent Constructors | Improve this Doc View Source UnturnedPlayerSwappingSeatEvent(UnturnedPlayer, UnturnedVehicle, Byte, Byte) Declaration public UnturnedPlayerSwappingSeatEvent(UnturnedPlayer player, UnturnedVehicle vehicle, byte fromSeatIndex, byte toSeatIndex) Parameters Type Name Description UnturnedPlayer player UnturnedVehicle vehicle System.Byte fromSeatIndex System.Byte toSeatIndex Properties | Improve this Doc View Source FromSeatIndex Gets the seat the player is swapping from. Declaration public byte FromSeatIndex { get; } Property Value Type Description System.Byte | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ToSeatIndex Gets the seat the player is swapping to. Declaration public byte ToSeatIndex { get; set; } Property Value Type Description System.Byte | Improve this Doc View Source Vehicle Declaration public UnturnedVehicle Vehicle { get; } Property Value Type Description UnturnedVehicle Explicit Interface Implementations | Improve this Doc View Source IVehicleEvent.Vehicle Declaration IVehicle IVehicleEvent.Vehicle { get; } Returns Type Description IVehicle Implements IPlayerEvent ICancellableEvent IVehicleEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleCarjackingEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleCarjackingEvent.html",
    "title": "Class UnturnedVehicleCarjackingEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleCarjackingEvent The event that is triggered when a player is trying to carjack a vehicle. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleCarjackingEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleCarjackingEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleCarjackingEvent(UnturnedVehicle, UnturnedPlayer, Vector3, Vector3) Declaration public UnturnedVehicleCarjackingEvent(UnturnedVehicle vehicle, UnturnedPlayer instigator, Vector3 force, Vector3 torque) Parameters Type Name Description UnturnedVehicle vehicle UnturnedPlayer instigator Vector3 force Vector3 torque Properties | Improve this Doc View Source Force Gets or sets the force to be applied. Declaration public Vector3 Force { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source Instigator Gets the player trying to carjack. Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Torque Gets or sets the torque to be applied. Declaration public Vector3 Torque { get; set; } Property Value Type Description Vector3 Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleDamagingEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleDamagingEvent.html",
    "title": "Class UnturnedVehicleDamagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleDamagingEvent The event that is triggered when damage is being dealt to a vehicle. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleDamagingEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleDamagingEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleDamagingEvent(UnturnedVehicle, Nullable<CSteamID>, UInt16, EDamageOrigin, Boolean) Declaration public UnturnedVehicleDamagingEvent(UnturnedVehicle vehicle, CSteamID? instigator, ushort pendingTotalDamage, EDamageOrigin damageOrigin, bool canRepair) Parameters Type Name Description UnturnedVehicle vehicle System.Nullable < CSteamID > instigator System.UInt16 pendingTotalDamage EDamageOrigin damageOrigin System.Boolean canRepair Properties | Improve this Doc View Source CanRepair If set to true, the damage will not explode the vehicle if its greater than the current health. Declaration public bool CanRepair { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DamageOrigin Gets the damage origin. Declaration public EDamageOrigin DamageOrigin { get; } Property Value Type Description EDamageOrigin | Improve this Doc View Source Instigator Gets the ID of the entity causing the damage. Declaration public CSteamID? Instigator { get; } Property Value Type Description System.Nullable < CSteamID > | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PendingTotalDamage Gets or sets the total damage to be dealt. Declaration public ushort PendingTotalDamage { get; set; } Property Value Type Description System.UInt16 Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleDamagingTireEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleDamagingTireEvent.html",
    "title": "Class UnturnedVehicleDamagingTireEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleDamagingTireEvent The event that is triggered when damage is dealt to a tire of a vehicle. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleDamagingTireEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleDamagingTireEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleDamagingTireEvent(UnturnedVehicle, CSteamID, Int32, EDamageOrigin) Declaration public UnturnedVehicleDamagingTireEvent(UnturnedVehicle vehicle, CSteamID instigator, int tireIndex, EDamageOrigin damageOrigin) Parameters Type Name Description UnturnedVehicle vehicle CSteamID instigator System.Int32 tireIndex EDamageOrigin damageOrigin Properties | Improve this Doc View Source DamageOrigin Gets the damage origin. Declaration public EDamageOrigin DamageOrigin { get; } Property Value Type Description EDamageOrigin | Improve this Doc View Source Instigator Gets the Steam ID of the entity causing the damage. Declaration public CSteamID? Instigator { get; } Property Value Type Description System.Nullable < CSteamID > | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source TireIndex Gets the index of the tire that is getting damaged. Declaration public int TireIndex { get; } Property Value Type Description System.Int32 Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleEvent.html",
    "title": "Class UnturnedVehicleEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleEvent The base class for all Unturned vehicle related events. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleCarjackingEvent UnturnedVehicleDamagingEvent UnturnedVehicleDamagingTireEvent UnturnedVehicleExplodingEvent UnturnedVehicleLockpickingEvent UnturnedVehicleLockUpdatedEvent UnturnedVehicleLockUpdatingEvent UnturnedVehicleRepairingEvent UnturnedVehicleReplacingBatteryEvent UnturnedVehicleSiphoningEvent UnturnedVehicleSpawnedEvent UnturnedVehicleStealingBatteryEvent Implements IVehicleEvent IEvent Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedVehicleEvent : Event, IVehicleEvent, IEvent Constructors | Improve this Doc View Source UnturnedVehicleEvent(UnturnedVehicle) Declaration protected UnturnedVehicleEvent(UnturnedVehicle vehicle) Parameters Type Name Description UnturnedVehicle vehicle Properties | Improve this Doc View Source Vehicle Declaration public UnturnedVehicle Vehicle { get; } Property Value Type Description UnturnedVehicle Explicit Interface Implementations | Improve this Doc View Source IVehicleEvent.Vehicle Declaration IVehicle IVehicleEvent.Vehicle { get; } Returns Type Description IVehicle Implements IVehicleEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleExplodingEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleExplodingEvent.html",
    "title": "Class UnturnedVehicleExplodingEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleExplodingEvent The event that is triggered when a vehicle is going to explode. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleExplodingEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleExplodingEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleExplodingEvent(UnturnedVehicle) Declaration public UnturnedVehicleExplodingEvent(UnturnedVehicle vehicle) Parameters Type Name Description UnturnedVehicle vehicle Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleLockpickingEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleLockpickingEvent.html",
    "title": "Class UnturnedVehicleLockpickingEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleLockpickingEvent The event that is triggered when a player tries to lockpick a vehicle. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleLockpickingEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleLockpickingEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleLockpickingEvent(UnturnedVehicle, UnturnedPlayer) Declaration public UnturnedVehicleLockpickingEvent(UnturnedVehicle vehicle, UnturnedPlayer instigator) Parameters Type Name Description UnturnedVehicle vehicle UnturnedPlayer instigator Properties | Improve this Doc View Source Instigator Gets the player trying to lockpick the vehicle. Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleLockUpdatedEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleLockUpdatedEvent.html",
    "title": "Class UnturnedVehicleLockUpdatedEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleLockUpdatedEvent The event that is triggered when the vehicle lock has been updated. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleLockUpdatedEvent Implements IVehicleEvent IEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleLockUpdatedEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent Constructors | Improve this Doc View Source UnturnedVehicleLockUpdatedEvent(UnturnedPlayer, UnturnedVehicle, Nullable<CSteamID>, Boolean) Declaration public UnturnedVehicleLockUpdatedEvent(UnturnedPlayer instigator, UnturnedVehicle vehicle, CSteamID? group, bool isLocked) Parameters Type Name Description UnturnedPlayer instigator UnturnedVehicle vehicle System.Nullable < CSteamID > group System.Boolean isLocked Properties | Improve this Doc View Source Group Gets the new lock owner group. Declaration public CSteamID? Group { get; } Property Value Type Description System.Nullable < CSteamID > | Improve this Doc View Source Instigator Gets the player locking or unlocking the vehicle. Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source IsLocked Gets if the vehicle has been locked or unlocked. Declaration public bool IsLocked { get; } Property Value Type Description System.Boolean Implements IVehicleEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleLockUpdatingEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleLockUpdatingEvent.html",
    "title": "Class UnturnedVehicleLockUpdatingEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleLockUpdatingEvent The event that is triggered when a vehicle lock status is getting updated. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleLockUpdatingEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleLockUpdatingEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleLockUpdatingEvent(UnturnedPlayer, UnturnedVehicle, Nullable<CSteamID>, Boolean) Declaration public UnturnedVehicleLockUpdatingEvent(UnturnedPlayer instigator, UnturnedVehicle vehicle, CSteamID? group, bool isLocking) Parameters Type Name Description UnturnedPlayer instigator UnturnedVehicle vehicle System.Nullable < CSteamID > group System.Boolean isLocking Properties | Improve this Doc View Source Group Gets the new lock owner group. Declaration public CSteamID? Group { get; } Property Value Type Description System.Nullable < CSteamID > | Improve this Doc View Source Instigator Gets the player locking or unlocking the vehicle. Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsLocking Gets if the vehicle is to be locked or unlocked. Declaration public bool IsLocking { get; } Property Value Type Description System.Boolean Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleRepairingEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleRepairingEvent.html",
    "title": "Class UnturnedVehicleRepairingEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleRepairingEvent The event that is triggered when a player is repairing a vehicle. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleRepairingEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleRepairingEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleRepairingEvent(UnturnedVehicle, CSteamID, UInt16) Declaration public UnturnedVehicleRepairingEvent(UnturnedVehicle vehicle, CSteamID instigator, ushort pendingTotalHealing) Parameters Type Name Description UnturnedVehicle vehicle CSteamID instigator System.UInt16 pendingTotalHealing Properties | Improve this Doc View Source Instigator Gets the player repairing the vehicle. Declaration public CSteamID Instigator { get; } Property Value Type Description CSteamID | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PendingTotalHealing Gets or sets the amount of health to restore. Declaration public ushort PendingTotalHealing { get; set; } Property Value Type Description System.UInt16 Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleReplacingBatteryEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleReplacingBatteryEvent.html",
    "title": "Class UnturnedVehicleReplacingBatteryEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleReplacingBatteryEvent The event that is triggered when a player is replacing a vehicles battery. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleReplacingBatteryEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleReplacingBatteryEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleReplacingBatteryEvent(UnturnedPlayer, UnturnedVehicle, Byte, Guid) Declaration public UnturnedVehicleReplacingBatteryEvent(UnturnedPlayer instigator, UnturnedVehicle vehicle, byte batteryQuality, Guid batteryItemGuid) Parameters Type Name Description UnturnedPlayer instigator UnturnedVehicle vehicle System.Byte batteryQuality Guid batteryItemGuid Properties | Improve this Doc View Source BatteryItemGuid Gets the Guid of the new battery item. Declaration public Guid BatteryItemGuid { get; } Property Value Type Description Guid | Improve this Doc View Source BatteryQuality Gets the new battery quality value. Declaration public byte BatteryQuality { get; } Property Value Type Description System.Byte | Improve this Doc View Source Instigator Gets the player replacing the battery. Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleSiphoningEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleSiphoningEvent.html",
    "title": "Class UnturnedVehicleSiphoningEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleSiphoningEvent The event that is triggered when a player is siphoning a vehicle. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleSiphoningEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleSiphoningEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleSiphoningEvent(UnturnedVehicle, UnturnedPlayer, UInt16) Declaration public UnturnedVehicleSiphoningEvent(UnturnedVehicle vehicle, UnturnedPlayer instigator, ushort desiredAmount) Parameters Type Name Description UnturnedVehicle vehicle UnturnedPlayer instigator System.UInt16 desiredAmount Properties | Improve this Doc View Source DesiredAmount Gets or sets the amount to siphone. Declaration public ushort DesiredAmount { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Instigator Gets the player siphoning the vehicle. Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleSpawnedEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleSpawnedEvent.html",
    "title": "Class UnturnedVehicleSpawnedEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleSpawnedEvent The event that is triggered when a vehicle has spawned. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleSpawnedEvent Implements IVehicleEvent IEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleSpawnedEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent Constructors | Improve this Doc View Source UnturnedVehicleSpawnedEvent(UnturnedVehicle) Declaration public UnturnedVehicleSpawnedEvent(UnturnedVehicle vehicle) Parameters Type Name Description UnturnedVehicle vehicle Implements IVehicleEvent IEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleStealingBatteryEvent.html": {
    "href": "api/OpenMod.Unturned.Vehicles.Events.UnturnedVehicleStealingBatteryEvent.html",
    "title": "Class UnturnedVehicleStealingBatteryEvent | OpenMod Docs",
    "keywords": "Class UnturnedVehicleStealingBatteryEvent The event that is triggered when a player is removing a battery. Inheritance System.Object UnturnedVehicleEvent UnturnedVehicleStealingBatteryEvent Implements IVehicleEvent IEvent ICancellableEvent Inherited Members UnturnedVehicleEvent.Vehicle UnturnedVehicleEvent.IVehicleEvent.Vehicle Namespace : OpenMod.Unturned.Vehicles.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleStealingBatteryEvent : UnturnedVehicleEvent, IVehicleEvent, IEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedVehicleStealingBatteryEvent(UnturnedPlayer, UnturnedVehicle) Declaration public UnturnedVehicleStealingBatteryEvent(UnturnedPlayer instigator, UnturnedVehicle vehicle) Parameters Type Name Description UnturnedPlayer instigator UnturnedVehicle vehicle Properties | Improve this Doc View Source Instigator Gets the player removing the battery. Declaration public UnturnedPlayer Instigator { get; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements IVehicleEvent IEvent ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.html": {
    "href": "api/OpenMod.Unturned.Vehicles.html",
    "title": "Namespace OpenMod.Unturned.Vehicles | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Vehicles Classes UnturnedVehicle UnturnedVehicleAsset UnturnedVehicleAssetCommandParameterResolveProvider UnturnedVehicleDirectory UnturnedVehicleOwnership UnturnedVehicleSpawner UnturnedVehicleState"
  },
  "api/OpenMod.Unturned.Vehicles.UnturnedVehicle.html": {
    "href": "api/OpenMod.Unturned.Vehicles.UnturnedVehicle.html",
    "title": "Class UnturnedVehicle | OpenMod Docs",
    "keywords": "Class UnturnedVehicle Inheritance System.Object UnturnedVehicle Implements IVehicle IHasOwnership Namespace : OpenMod.Unturned.Vehicles Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicle : object, IVehicle, IHasOwnership Constructors | Improve this Doc View Source UnturnedVehicle(InteractableVehicle) Declaration public UnturnedVehicle(InteractableVehicle vehicle) Parameters Type Name Description InteractableVehicle vehicle Properties | Improve this Doc View Source Asset Declaration public IVehicleAsset Asset { get; } Property Value Type Description IVehicleAsset | Improve this Doc View Source Driver Declaration public IEntity Driver { get; } Property Value Type Description IEntity | Improve this Doc View Source Ownership Declaration public IOwnership Ownership { get; } Property Value Type Description IOwnership | Improve this Doc View Source Passengers Declaration public IReadOnlyCollection<IEntity> Passengers { get; } Property Value Type Description IReadOnlyCollection < IEntity > | Improve this Doc View Source State Declaration public IVehicleState State { get; } Property Value Type Description IVehicleState | Improve this Doc View Source Transform Declaration public IWorldTransform Transform { get; } Property Value Type Description IWorldTransform | Improve this Doc View Source Vehicle Declaration public InteractableVehicle Vehicle { get; } Property Value Type Description InteractableVehicle | Improve this Doc View Source VehicleInstanceId Declaration public string VehicleInstanceId { get; } Property Value Type Description System.String Methods | Improve this Doc View Source AddPassengerAsync(IEntity) Declaration public Task<bool> AddPassengerAsync(IEntity passenger) Parameters Type Name Description IEntity passenger Returns Type Description Task < System.Boolean > | Improve this Doc View Source DestroyAsync() Declaration public Task DestroyAsync() Returns Type Description Task | Improve this Doc View Source RemovePassengerAsync(IEntity) Declaration public Task<bool> RemovePassengerAsync(IEntity passenger) Parameters Type Name Description IEntity passenger Returns Type Description Task < System.Boolean > Implements IVehicle IHasOwnership Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.UnturnedVehicleAsset.html": {
    "href": "api/OpenMod.Unturned.Vehicles.UnturnedVehicleAsset.html",
    "title": "Class UnturnedVehicleAsset | OpenMod Docs",
    "keywords": "Class UnturnedVehicleAsset Inheritance System.Object UnturnedVehicleAsset Implements IVehicleAsset Namespace : OpenMod.Unturned.Vehicles Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleAsset : object, IVehicleAsset Constructors | Improve this Doc View Source UnturnedVehicleAsset(VehicleAsset) Declaration public UnturnedVehicleAsset(VehicleAsset vehicleAsset) Parameters Type Name Description VehicleAsset vehicleAsset Properties | Improve this Doc View Source VehicleAsset Declaration public VehicleAsset VehicleAsset { get; } Property Value Type Description VehicleAsset | Improve this Doc View Source VehicleAssetId Declaration public string VehicleAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source VehicleName Declaration public string VehicleName { get; } Property Value Type Description System.String | Improve this Doc View Source VehicleType Declaration public string VehicleType { get; } Property Value Type Description System.String Implements IVehicleAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.UnturnedVehicleAssetCommandParameterResolveProvider.html": {
    "href": "api/OpenMod.Unturned.Vehicles.UnturnedVehicleAssetCommandParameterResolveProvider.html",
    "title": "Class UnturnedVehicleAssetCommandParameterResolveProvider | OpenMod Docs",
    "keywords": "Class UnturnedVehicleAssetCommandParameterResolveProvider Inheritance System.Object UnturnedVehicleAssetCommandParameterResolveProvider Namespace : OpenMod.Unturned.Vehicles Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleAssetCommandParameterResolveProvider : ICommandParameterResolveProvider Constructors | Improve this Doc View Source UnturnedVehicleAssetCommandParameterResolveProvider(IVehicleDirectory) Declaration public UnturnedVehicleAssetCommandParameterResolveProvider(IVehicleDirectory vehicleDirectory) Parameters Type Name Description IVehicleDirectory vehicleDirectory Methods | Improve this Doc View Source ResolveAsync(Type, String) Declaration public Task<object?> ResolveAsync(Type type, string input) Parameters Type Name Description Type type System.String input Returns Type Description Task < System.Nullable < System.Object >> | Improve this Doc View Source Supports(Type) Declaration public bool Supports(Type type) Parameters Type Name Description Type type Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.UnturnedVehicleDirectory.html": {
    "href": "api/OpenMod.Unturned.Vehicles.UnturnedVehicleDirectory.html",
    "title": "Class UnturnedVehicleDirectory | OpenMod Docs",
    "keywords": "Class UnturnedVehicleDirectory Inheritance System.Object UnturnedVehicleDirectory Implements IVehicleDirectory Namespace : OpenMod.Unturned.Vehicles Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleDirectory : object, IVehicleDirectory Methods | Improve this Doc View Source GetVehicleAssetsAsync() Declaration public Task<IReadOnlyCollection<IVehicleAsset>> GetVehicleAssetsAsync() Returns Type Description Task < IReadOnlyCollection < IVehicleAsset >> | Improve this Doc View Source GetVehiclesAsync() Declaration public Task<IReadOnlyCollection<IVehicle>> GetVehiclesAsync() Returns Type Description Task < IReadOnlyCollection < IVehicle >> Implements IVehicleDirectory Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.UnturnedVehicleOwnership.html": {
    "href": "api/OpenMod.Unturned.Vehicles.UnturnedVehicleOwnership.html",
    "title": "Class UnturnedVehicleOwnership | OpenMod Docs",
    "keywords": "Class UnturnedVehicleOwnership Inheritance System.Object UnturnedVehicleOwnership Implements IOwnership Namespace : OpenMod.Unturned.Vehicles Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleOwnership : object, IOwnership Constructors | Improve this Doc View Source UnturnedVehicleOwnership(InteractableVehicle) Declaration public UnturnedVehicleOwnership(InteractableVehicle vehicle) Parameters Type Name Description InteractableVehicle vehicle Properties | Improve this Doc View Source HasOwner Declaration public bool HasOwner { get; } Property Value Type Description System.Boolean | Improve this Doc View Source OwnerGroupId Declaration public string OwnerGroupId { get; } Property Value Type Description System.String | Improve this Doc View Source OwnerPlayerId Declaration public string OwnerPlayerId { get; } Property Value Type Description System.String Methods | Improve this Doc View Source HasAccessAsync(IPlayer) Declaration public Task<bool> HasAccessAsync(IPlayer player) Parameters Type Name Description IPlayer player Returns Type Description Task < System.Boolean > Implements IOwnership Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.UnturnedVehicleSpawner.html": {
    "href": "api/OpenMod.Unturned.Vehicles.UnturnedVehicleSpawner.html",
    "title": "Class UnturnedVehicleSpawner | OpenMod Docs",
    "keywords": "Class UnturnedVehicleSpawner Inheritance System.Object UnturnedVehicleSpawner Implements IVehicleSpawner Namespace : OpenMod.Unturned.Vehicles Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleSpawner : object, IVehicleSpawner Methods | Improve this Doc View Source SpawnVehicleAsync(System.Numerics.Vector3, System.Numerics.Quaternion, String, IVehicleState) Declaration public Task<IVehicle> SpawnVehicleAsync(System.Numerics.Vector3 position, System.Numerics.Quaternion rotation, string vehicleAssetId, IVehicleState state = null) Parameters Type Name Description System.Numerics.Vector3 position System.Numerics.Quaternion rotation System.String vehicleAssetId IVehicleState state Returns Type Description Task < IVehicle > Implements IVehicleSpawner Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Vehicles.UnturnedVehicleState.html": {
    "href": "api/OpenMod.Unturned.Vehicles.UnturnedVehicleState.html",
    "title": "Class UnturnedVehicleState | OpenMod Docs",
    "keywords": "Class UnturnedVehicleState Inheritance System.Object UnturnedVehicleState Implements IVehicleState Namespace : OpenMod.Unturned.Vehicles Assembly : OpenMod.Unturned.dll Syntax public class UnturnedVehicleState : object, IVehicleState Constructors | Improve this Doc View Source UnturnedVehicleState(InteractableVehicle) Declaration public UnturnedVehicleState(InteractableVehicle vehicle) Parameters Type Name Description InteractableVehicle vehicle Properties | Improve this Doc View Source StateData Declaration public byte[] StateData { get; } Property Value Type Description System.Byte [] Implements IVehicleState Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Workshop.Events.html": {
    "href": "api/OpenMod.Unturned.Workshop.Events.html",
    "title": "Namespace OpenMod.Unturned.Workshop.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Workshop.Events Classes UnturnedWorkshopLoadedEvent The event that is triggered when all workshop items have been loaded"
  },
  "api/OpenMod.Unturned.Workshop.Events.UnturnedWorkshopLoadedEvent.html": {
    "href": "api/OpenMod.Unturned.Workshop.Events.UnturnedWorkshopLoadedEvent.html",
    "title": "Class UnturnedWorkshopLoadedEvent | OpenMod Docs",
    "keywords": "Class UnturnedWorkshopLoadedEvent The event that is triggered when all workshop items have been loaded Inheritance System.Object UnturnedWorkshopLoadedEvent Namespace : OpenMod.Unturned.Workshop.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedWorkshopLoadedEvent : Event Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.html",
    "title": "Namespace OpenMod.Unturned.Zombies.Events | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Zombies.Events Classes UnturnedZombieAddedEvent The event that is triggered when a new zombie is addded. UnturnedZombieAlertingEvent The base class for all zombie alert related events. UnturnedZombieAlertingPlayerEvent The event that is triggered when a zombie has been alerted to a player. UnturnedZombieAlertingPositionEvent The event that is triggered when a zombie has been alerted to a position. UnturnedZombieDamagingEvent The event that is triggered when damage is dealt to a zombie. UnturnedZombieDeadEvent The event that is triggered when a zombie has died. UnturnedZombieDyingEvent The event that is triggered when a zombie is dying. UnturnedZombieEvent The base class for all zombie related events. UnturnedZombieRevivedEvent The event that is triggered when a zombie has been revived. UnturnedZombieSpawnedEvent"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieAddedEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieAddedEvent.html",
    "title": "Class UnturnedZombieAddedEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieAddedEvent The event that is triggered when a new zombie is addded. Inheritance System.Object UnturnedZombieEvent UnturnedZombieSpawnedEvent UnturnedZombieAddedEvent Inherited Members UnturnedZombieEvent.Zombie Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedZombieAddedEvent : UnturnedZombieSpawnedEvent Constructors | Improve this Doc View Source UnturnedZombieAddedEvent(UnturnedZombie) Declaration public UnturnedZombieAddedEvent(UnturnedZombie zombie) Parameters Type Name Description UnturnedZombie zombie Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieAlertingEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieAlertingEvent.html",
    "title": "Class UnturnedZombieAlertingEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieAlertingEvent The base class for all zombie alert related events. Inheritance System.Object UnturnedZombieEvent UnturnedZombieAlertingEvent UnturnedZombieAlertingPlayerEvent UnturnedZombieAlertingPositionEvent Implements ICancellableEvent Inherited Members UnturnedZombieEvent.Zombie Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedZombieAlertingEvent : UnturnedZombieEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedZombieAlertingEvent(UnturnedZombie) Declaration protected UnturnedZombieAlertingEvent(UnturnedZombie zombie) Parameters Type Name Description UnturnedZombie zombie Properties | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieAlertingPlayerEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieAlertingPlayerEvent.html",
    "title": "Class UnturnedZombieAlertingPlayerEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieAlertingPlayerEvent The event that is triggered when a zombie has been alerted to a player. Inheritance System.Object UnturnedZombieEvent UnturnedZombieAlertingEvent UnturnedZombieAlertingPlayerEvent Implements ICancellableEvent Inherited Members UnturnedZombieAlertingEvent.IsCancelled UnturnedZombieEvent.Zombie Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedZombieAlertingPlayerEvent : UnturnedZombieAlertingEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedZombieAlertingPlayerEvent(UnturnedZombie, UnturnedPlayer) Declaration public UnturnedZombieAlertingPlayerEvent(UnturnedZombie zombie, UnturnedPlayer player) Parameters Type Name Description UnturnedZombie zombie UnturnedPlayer player Properties | Improve this Doc View Source Player The player alerting the zombie. Declaration public UnturnedPlayer Player { get; } Property Value Type Description UnturnedPlayer Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieAlertingPositionEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieAlertingPositionEvent.html",
    "title": "Class UnturnedZombieAlertingPositionEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieAlertingPositionEvent The event that is triggered when a zombie has been alerted to a position. Inheritance System.Object UnturnedZombieEvent UnturnedZombieAlertingEvent UnturnedZombieAlertingPositionEvent Implements ICancellableEvent Inherited Members UnturnedZombieAlertingEvent.IsCancelled UnturnedZombieEvent.Zombie Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedZombieAlertingPositionEvent : UnturnedZombieAlertingEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedZombieAlertingPositionEvent(UnturnedZombie, Vector3, Boolean) Declaration public UnturnedZombieAlertingPositionEvent(UnturnedZombie zombie, Vector3 position, bool isStartling) Parameters Type Name Description UnturnedZombie zombie Vector3 position System.Boolean isStartling Properties | Improve this Doc View Source IsStartling True if startling. Declaration public bool IsStartling { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Position The alert position. Declaration public Vector3 Position { get; set; } Property Value Type Description Vector3 Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieDamagingEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieDamagingEvent.html",
    "title": "Class UnturnedZombieDamagingEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieDamagingEvent The event that is triggered when damage is dealt to a zombie. Inheritance System.Object UnturnedZombieEvent UnturnedZombieDamagingEvent UnturnedZombieDyingEvent Implements ICancellableEvent Inherited Members UnturnedZombieEvent.Zombie Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedZombieDamagingEvent : UnturnedZombieEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedZombieDamagingEvent(UnturnedZombie, UnturnedPlayer, UInt16, Vector3, ERagdollEffect, EZombieStunOverride, ELimb) Declaration public UnturnedZombieDamagingEvent(UnturnedZombie zombie, UnturnedPlayer user, ushort damageAmount, Vector3 ragdoll, ERagdollEffect ragdollEffect, EZombieStunOverride stunOverride, ELimb limb) Parameters Type Name Description UnturnedZombie zombie UnturnedPlayer user System.UInt16 damageAmount Vector3 ragdoll ERagdollEffect ragdollEffect EZombieStunOverride stunOverride ELimb limb Properties | Improve this Doc View Source DamageAmount Gets or sets the amount of damage to deal. Declaration public ushort DamageAmount { get; set; } Property Value Type Description System.UInt16 | Improve this Doc View Source Instigator Gets or sets the player dealing the damage. Declaration public UnturnedPlayer Instigator { get; set; } Property Value Type Description UnturnedPlayer | Improve this Doc View Source IsCancelled Declaration public bool IsCancelled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Limb Gets or sets the ELimb. Declaration public ELimb Limb { get; set; } Property Value Type Description ELimb | Improve this Doc View Source Ragdoll Gets or sets the ragdoll position. Declaration public Vector3 Ragdoll { get; set; } Property Value Type Description Vector3 | Improve this Doc View Source RagdollEffect Gets or sets the ragdoll effect. Declaration public ERagdollEffect RagdollEffect { get; set; } Property Value Type Description ERagdollEffect | Improve this Doc View Source StunOverride Gets or sets the stun override. Declaration public EZombieStunOverride StunOverride { get; set; } Property Value Type Description EZombieStunOverride Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieDeadEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieDeadEvent.html",
    "title": "Class UnturnedZombieDeadEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieDeadEvent The event that is triggered when a zombie has died. Inheritance System.Object UnturnedZombieEvent UnturnedZombieDeadEvent Inherited Members UnturnedZombieEvent.Zombie Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedZombieDeadEvent : UnturnedZombieEvent Constructors | Improve this Doc View Source UnturnedZombieDeadEvent(UnturnedZombie, Vector3, ERagdollEffect) Declaration public UnturnedZombieDeadEvent(UnturnedZombie zombie, Vector3 ragdoll, ERagdollEffect ragdollEffect) Parameters Type Name Description UnturnedZombie zombie Vector3 ragdoll ERagdollEffect ragdollEffect Properties | Improve this Doc View Source Ragdoll Gets the ragdoll position. Declaration public Vector3 Ragdoll { get; } Property Value Type Description Vector3 | Improve this Doc View Source RagdollEffect Gets the ragdoll effect. Declaration public ERagdollEffect RagdollEffect { get; } Property Value Type Description ERagdollEffect Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieDyingEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieDyingEvent.html",
    "title": "Class UnturnedZombieDyingEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieDyingEvent The event that is triggered when a zombie is dying. Inheritance System.Object UnturnedZombieEvent UnturnedZombieDamagingEvent UnturnedZombieDyingEvent Implements ICancellableEvent Inherited Members UnturnedZombieDamagingEvent.DamageAmount UnturnedZombieDamagingEvent.Ragdoll UnturnedZombieDamagingEvent.Instigator UnturnedZombieDamagingEvent.RagdollEffect UnturnedZombieDamagingEvent.StunOverride UnturnedZombieDamagingEvent.Limb UnturnedZombieDamagingEvent.IsCancelled UnturnedZombieEvent.Zombie Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedZombieDyingEvent : UnturnedZombieDamagingEvent, ICancellableEvent Constructors | Improve this Doc View Source UnturnedZombieDyingEvent(UnturnedZombie, UnturnedPlayer, UInt16, Vector3, ERagdollEffect, EZombieStunOverride, ELimb) Declaration public UnturnedZombieDyingEvent(UnturnedZombie zombie, UnturnedPlayer player, ushort damageAmount, Vector3 ragdoll, ERagdollEffect ragdollEffect, EZombieStunOverride stunOverride, ELimb limb) Parameters Type Name Description UnturnedZombie zombie UnturnedPlayer player System.UInt16 damageAmount Vector3 ragdoll ERagdollEffect ragdollEffect EZombieStunOverride stunOverride ELimb limb Implements ICancellableEvent Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieEvent.html",
    "title": "Class UnturnedZombieEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieEvent The base class for all zombie related events. Inheritance System.Object UnturnedZombieEvent UnturnedZombieAlertingEvent UnturnedZombieDamagingEvent UnturnedZombieDeadEvent UnturnedZombieSpawnedEvent Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedZombieEvent : Event Constructors | Improve this Doc View Source UnturnedZombieEvent(UnturnedZombie) Declaration protected UnturnedZombieEvent(UnturnedZombie zombie) Parameters Type Name Description UnturnedZombie zombie Properties | Improve this Doc View Source Zombie Declaration public UnturnedZombie Zombie { get; } Property Value Type Description UnturnedZombie Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieRevivedEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieRevivedEvent.html",
    "title": "Class UnturnedZombieRevivedEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieRevivedEvent The event that is triggered when a zombie has been revived. Inheritance System.Object UnturnedZombieEvent UnturnedZombieSpawnedEvent UnturnedZombieRevivedEvent Inherited Members UnturnedZombieEvent.Zombie Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public class UnturnedZombieRevivedEvent : UnturnedZombieSpawnedEvent Constructors | Improve this Doc View Source UnturnedZombieRevivedEvent(UnturnedZombie) Declaration public UnturnedZombieRevivedEvent(UnturnedZombie zombie) Parameters Type Name Description UnturnedZombie zombie Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieSpawnedEvent.html": {
    "href": "api/OpenMod.Unturned.Zombies.Events.UnturnedZombieSpawnedEvent.html",
    "title": "Class UnturnedZombieSpawnedEvent | OpenMod Docs",
    "keywords": "Class UnturnedZombieSpawnedEvent Inheritance System.Object UnturnedZombieEvent UnturnedZombieSpawnedEvent UnturnedZombieAddedEvent UnturnedZombieRevivedEvent Inherited Members UnturnedZombieEvent.Zombie Namespace : OpenMod.Unturned.Zombies.Events Assembly : OpenMod.Unturned.dll Syntax public abstract class UnturnedZombieSpawnedEvent : UnturnedZombieEvent Constructors | Improve this Doc View Source UnturnedZombieSpawnedEvent(UnturnedZombie) Declaration protected UnturnedZombieSpawnedEvent(UnturnedZombie zombie) Parameters Type Name Description UnturnedZombie zombie Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.html": {
    "href": "api/OpenMod.Unturned.Zombies.html",
    "title": "Namespace OpenMod.Unturned.Zombies | OpenMod Docs",
    "keywords": "Namespace OpenMod.Unturned.Zombies Classes UnturnedZombie UnturnedZombieAsset"
  },
  "api/OpenMod.Unturned.Zombies.UnturnedZombie.html": {
    "href": "api/OpenMod.Unturned.Zombies.UnturnedZombie.html",
    "title": "Class UnturnedZombie | OpenMod Docs",
    "keywords": "Class UnturnedZombie Inheritance System.Object UnturnedZombie Implements IEntity IGameObject IHasHealth IDamageSource Namespace : OpenMod.Unturned.Zombies Assembly : OpenMod.Unturned.dll Syntax public class UnturnedZombie : object, IEntity, IGameObject, IHasHealth, IDamageSource Constructors | Improve this Doc View Source UnturnedZombie(Zombie) Declaration public UnturnedZombie(Zombie zombie) Parameters Type Name Description Zombie zombie Properties | Improve this Doc View Source Asset Declaration public IEntityAsset Asset { get; } Property Value Type Description IEntityAsset | Improve this Doc View Source DamageSourceName Declaration public string DamageSourceName { get; } Property Value Type Description System.String | Improve this Doc View Source EntityInstanceId Declaration public string EntityInstanceId { get; } Property Value Type Description System.String | Improve this Doc View Source Health Declaration public double Health { get; } Property Value Type Description System.Double | Improve this Doc View Source IsAlive Declaration public bool IsAlive { get; } Property Value Type Description System.Boolean | Improve this Doc View Source MaxHealth Declaration public double MaxHealth { get; } Property Value Type Description System.Double | Improve this Doc View Source State Declaration public IEntityState State { get; } Property Value Type Description IEntityState | Improve this Doc View Source Transform Declaration public IWorldTransform Transform { get; } Property Value Type Description IWorldTransform | Improve this Doc View Source Zombie Declaration public Zombie Zombie { get; } Property Value Type Description Zombie Methods | Improve this Doc View Source DamageAsync(Double) Declaration public Task DamageAsync(double amount) Parameters Type Name Description System.Double amount Returns Type Description Task | Improve this Doc View Source KillAsync() Declaration public Task KillAsync() Returns Type Description Task | Improve this Doc View Source SetFullHealthAsync() Declaration public Task SetFullHealthAsync() Returns Type Description Task | Improve this Doc View Source SetHealthAsync(Double) Declaration public Task SetHealthAsync(double health) Parameters Type Name Description System.Double health Returns Type Description Task | Improve this Doc View Source SetPositionAsync(Vector3) Declaration public Task<bool> SetPositionAsync(Vector3 position) Parameters Type Name Description Vector3 position Returns Type Description Task < System.Boolean > | Improve this Doc View Source SetPositionAsync(Vector3, Quaternion) Declaration public Task<bool> SetPositionAsync(Vector3 position, Quaternion rotation) Parameters Type Name Description Vector3 position Quaternion rotation Returns Type Description Task < System.Boolean > Implements IEntity IGameObject IHasHealth IDamageSource Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/OpenMod.Unturned.Zombies.UnturnedZombieAsset.html": {
    "href": "api/OpenMod.Unturned.Zombies.UnturnedZombieAsset.html",
    "title": "Class UnturnedZombieAsset | OpenMod Docs",
    "keywords": "Class UnturnedZombieAsset Inheritance System.Object UnturnedZombieAsset Implements IEntityAsset Namespace : OpenMod.Unturned.Zombies Assembly : OpenMod.Unturned.dll Syntax public class UnturnedZombieAsset : object, IEntityAsset Properties | Improve this Doc View Source EntityAssetId Declaration public string EntityAssetId { get; } Property Value Type Description System.String | Improve this Doc View Source EntityType Declaration public string EntityType { get; } Property Value Type Description System.String | Improve this Doc View Source Instance Declaration public static UnturnedZombieAsset Instance { get; } Property Value Type Description UnturnedZombieAsset | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String Implements IEntityAsset Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/System.Drawing.Color.html": {
    "href": "api/System.Drawing.Color.html",
    "title": "Struct Color | OpenMod Docs",
    "keywords": "Struct Color Namespace : System.Drawing Assembly : OpenMod.Unturned.Module.Shared.dll Syntax public struct Color Fields | Improve this Doc View Source Empty Declaration public static readonly Color Empty Field Value Type Description Color Properties | Improve this Doc View Source A Declaration public byte A { get; } Property Value Type Description System.Byte | Improve this Doc View Source AliceBlue Declaration public static Color AliceBlue { get; } Property Value Type Description Color | Improve this Doc View Source AntiqueWhite Declaration public static Color AntiqueWhite { get; } Property Value Type Description Color | Improve this Doc View Source Aqua Declaration public static Color Aqua { get; } Property Value Type Description Color | Improve this Doc View Source Aquamarine Declaration public static Color Aquamarine { get; } Property Value Type Description Color | Improve this Doc View Source Azure Declaration public static Color Azure { get; } Property Value Type Description Color | Improve this Doc View Source B Declaration public byte B { get; } Property Value Type Description System.Byte | Improve this Doc View Source Beige Declaration public static Color Beige { get; } Property Value Type Description Color | Improve this Doc View Source Bisque Declaration public static Color Bisque { get; } Property Value Type Description Color | Improve this Doc View Source Black Declaration public static Color Black { get; } Property Value Type Description Color | Improve this Doc View Source BlanchedAlmond Declaration public static Color BlanchedAlmond { get; } Property Value Type Description Color | Improve this Doc View Source Blue Declaration public static Color Blue { get; } Property Value Type Description Color | Improve this Doc View Source BlueViolet Declaration public static Color BlueViolet { get; } Property Value Type Description Color | Improve this Doc View Source Brown Declaration public static Color Brown { get; } Property Value Type Description Color | Improve this Doc View Source BurlyWood Declaration public static Color BurlyWood { get; } Property Value Type Description Color | Improve this Doc View Source CadetBlue Declaration public static Color CadetBlue { get; } Property Value Type Description Color | Improve this Doc View Source Chartreuse Declaration public static Color Chartreuse { get; } Property Value Type Description Color | Improve this Doc View Source Chocolate Declaration public static Color Chocolate { get; } Property Value Type Description Color | Improve this Doc View Source Coral Declaration public static Color Coral { get; } Property Value Type Description Color | Improve this Doc View Source CornflowerBlue Declaration public static Color CornflowerBlue { get; } Property Value Type Description Color | Improve this Doc View Source Cornsilk Declaration public static Color Cornsilk { get; } Property Value Type Description Color | Improve this Doc View Source Crimson Declaration public static Color Crimson { get; } Property Value Type Description Color | Improve this Doc View Source Cyan Declaration public static Color Cyan { get; } Property Value Type Description Color | Improve this Doc View Source DarkBlue Declaration public static Color DarkBlue { get; } Property Value Type Description Color | Improve this Doc View Source DarkCyan Declaration public static Color DarkCyan { get; } Property Value Type Description Color | Improve this Doc View Source DarkGoldenrod Declaration public static Color DarkGoldenrod { get; } Property Value Type Description Color | Improve this Doc View Source DarkGray Declaration public static Color DarkGray { get; } Property Value Type Description Color | Improve this Doc View Source DarkGreen Declaration public static Color DarkGreen { get; } Property Value Type Description Color | Improve this Doc View Source DarkKhaki Declaration public static Color DarkKhaki { get; } Property Value Type Description Color | Improve this Doc View Source DarkMagenta Declaration public static Color DarkMagenta { get; } Property Value Type Description Color | Improve this Doc View Source DarkOliveGreen Declaration public static Color DarkOliveGreen { get; } Property Value Type Description Color | Improve this Doc View Source DarkOrange Declaration public static Color DarkOrange { get; } Property Value Type Description Color | Improve this Doc View Source DarkOrchid Declaration public static Color DarkOrchid { get; } Property Value Type Description Color | Improve this Doc View Source DarkRed Declaration public static Color DarkRed { get; } Property Value Type Description Color | Improve this Doc View Source DarkSalmon Declaration public static Color DarkSalmon { get; } Property Value Type Description Color | Improve this Doc View Source DarkSeaGreen Declaration public static Color DarkSeaGreen { get; } Property Value Type Description Color | Improve this Doc View Source DarkSlateBlue Declaration public static Color DarkSlateBlue { get; } Property Value Type Description Color | Improve this Doc View Source DarkSlateGray Declaration public static Color DarkSlateGray { get; } Property Value Type Description Color | Improve this Doc View Source DarkTurquoise Declaration public static Color DarkTurquoise { get; } Property Value Type Description Color | Improve this Doc View Source DarkViolet Declaration public static Color DarkViolet { get; } Property Value Type Description Color | Improve this Doc View Source DeepPink Declaration public static Color DeepPink { get; } Property Value Type Description Color | Improve this Doc View Source DeepSkyBlue Declaration public static Color DeepSkyBlue { get; } Property Value Type Description Color | Improve this Doc View Source DimGray Declaration public static Color DimGray { get; } Property Value Type Description Color | Improve this Doc View Source DodgerBlue Declaration public static Color DodgerBlue { get; } Property Value Type Description Color | Improve this Doc View Source Firebrick Declaration public static Color Firebrick { get; } Property Value Type Description Color | Improve this Doc View Source FloralWhite Declaration public static Color FloralWhite { get; } Property Value Type Description Color | Improve this Doc View Source ForestGreen Declaration public static Color ForestGreen { get; } Property Value Type Description Color | Improve this Doc View Source Fuchsia Declaration public static Color Fuchsia { get; } Property Value Type Description Color | Improve this Doc View Source G Declaration public byte G { get; } Property Value Type Description System.Byte | Improve this Doc View Source Gainsboro Declaration public static Color Gainsboro { get; } Property Value Type Description Color | Improve this Doc View Source GhostWhite Declaration public static Color GhostWhite { get; } Property Value Type Description Color | Improve this Doc View Source Gold Declaration public static Color Gold { get; } Property Value Type Description Color | Improve this Doc View Source Goldenrod Declaration public static Color Goldenrod { get; } Property Value Type Description Color | Improve this Doc View Source Gray Declaration public static Color Gray { get; } Property Value Type Description Color | Improve this Doc View Source Green Declaration public static Color Green { get; } Property Value Type Description Color | Improve this Doc View Source GreenYellow Declaration public static Color GreenYellow { get; } Property Value Type Description Color | Improve this Doc View Source Honeydew Declaration public static Color Honeydew { get; } Property Value Type Description Color | Improve this Doc View Source HotPink Declaration public static Color HotPink { get; } Property Value Type Description Color | Improve this Doc View Source IndianRed Declaration public static Color IndianRed { get; } Property Value Type Description Color | Improve this Doc View Source Indigo Declaration public static Color Indigo { get; } Property Value Type Description Color | Improve this Doc View Source IsEmpty Declaration public bool IsEmpty { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsKnownColor Declaration public bool IsKnownColor { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsNamedColor Declaration public bool IsNamedColor { get; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSystemColor Declaration public bool IsSystemColor { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Ivory Declaration public static Color Ivory { get; } Property Value Type Description Color | Improve this Doc View Source Khaki Declaration public static Color Khaki { get; } Property Value Type Description Color | Improve this Doc View Source Lavender Declaration public static Color Lavender { get; } Property Value Type Description Color | Improve this Doc View Source LavenderBlush Declaration public static Color LavenderBlush { get; } Property Value Type Description Color | Improve this Doc View Source LawnGreen Declaration public static Color LawnGreen { get; } Property Value Type Description Color | Improve this Doc View Source LemonChiffon Declaration public static Color LemonChiffon { get; } Property Value Type Description Color | Improve this Doc View Source LightBlue Declaration public static Color LightBlue { get; } Property Value Type Description Color | Improve this Doc View Source LightCoral Declaration public static Color LightCoral { get; } Property Value Type Description Color | Improve this Doc View Source LightCyan Declaration public static Color LightCyan { get; } Property Value Type Description Color | Improve this Doc View Source LightGoldenrodYellow Declaration public static Color LightGoldenrodYellow { get; } Property Value Type Description Color | Improve this Doc View Source LightGray Declaration public static Color LightGray { get; } Property Value Type Description Color | Improve this Doc View Source LightGreen Declaration public static Color LightGreen { get; } Property Value Type Description Color | Improve this Doc View Source LightPink Declaration public static Color LightPink { get; } Property Value Type Description Color | Improve this Doc View Source LightSalmon Declaration public static Color LightSalmon { get; } Property Value Type Description Color | Improve this Doc View Source LightSeaGreen Declaration public static Color LightSeaGreen { get; } Property Value Type Description Color | Improve this Doc View Source LightSkyBlue Declaration public static Color LightSkyBlue { get; } Property Value Type Description Color | Improve this Doc View Source LightSlateGray Declaration public static Color LightSlateGray { get; } Property Value Type Description Color | Improve this Doc View Source LightSteelBlue Declaration public static Color LightSteelBlue { get; } Property Value Type Description Color | Improve this Doc View Source LightYellow Declaration public static Color LightYellow { get; } Property Value Type Description Color | Improve this Doc View Source Lime Declaration public static Color Lime { get; } Property Value Type Description Color | Improve this Doc View Source LimeGreen Declaration public static Color LimeGreen { get; } Property Value Type Description Color | Improve this Doc View Source Linen Declaration public static Color Linen { get; } Property Value Type Description Color | Improve this Doc View Source Magenta Declaration public static Color Magenta { get; } Property Value Type Description Color | Improve this Doc View Source Maroon Declaration public static Color Maroon { get; } Property Value Type Description Color | Improve this Doc View Source MediumAquamarine Declaration public static Color MediumAquamarine { get; } Property Value Type Description Color | Improve this Doc View Source MediumBlue Declaration public static Color MediumBlue { get; } Property Value Type Description Color | Improve this Doc View Source MediumOrchid Declaration public static Color MediumOrchid { get; } Property Value Type Description Color | Improve this Doc View Source MediumPurple Declaration public static Color MediumPurple { get; } Property Value Type Description Color | Improve this Doc View Source MediumSeaGreen Declaration public static Color MediumSeaGreen { get; } Property Value Type Description Color | Improve this Doc View Source MediumSlateBlue Declaration public static Color MediumSlateBlue { get; } Property Value Type Description Color | Improve this Doc View Source MediumSpringGreen Declaration public static Color MediumSpringGreen { get; } Property Value Type Description Color | Improve this Doc View Source MediumTurquoise Declaration public static Color MediumTurquoise { get; } Property Value Type Description Color | Improve this Doc View Source MediumVioletRed Declaration public static Color MediumVioletRed { get; } Property Value Type Description Color | Improve this Doc View Source MidnightBlue Declaration public static Color MidnightBlue { get; } Property Value Type Description Color | Improve this Doc View Source MintCream Declaration public static Color MintCream { get; } Property Value Type Description Color | Improve this Doc View Source MistyRose Declaration public static Color MistyRose { get; } Property Value Type Description Color | Improve this Doc View Source Moccasin Declaration public static Color Moccasin { get; } Property Value Type Description Color | Improve this Doc View Source Name Declaration public string Name { get; } Property Value Type Description System.String | Improve this Doc View Source NavajoWhite Declaration public static Color NavajoWhite { get; } Property Value Type Description Color | Improve this Doc View Source Navy Declaration public static Color Navy { get; } Property Value Type Description Color | Improve this Doc View Source OldLace Declaration public static Color OldLace { get; } Property Value Type Description Color | Improve this Doc View Source Olive Declaration public static Color Olive { get; } Property Value Type Description Color | Improve this Doc View Source OliveDrab Declaration public static Color OliveDrab { get; } Property Value Type Description Color | Improve this Doc View Source Orange Declaration public static Color Orange { get; } Property Value Type Description Color | Improve this Doc View Source OrangeRed Declaration public static Color OrangeRed { get; } Property Value Type Description Color | Improve this Doc View Source Orchid Declaration public static Color Orchid { get; } Property Value Type Description Color | Improve this Doc View Source PaleGoldenrod Declaration public static Color PaleGoldenrod { get; } Property Value Type Description Color | Improve this Doc View Source PaleGreen Declaration public static Color PaleGreen { get; } Property Value Type Description Color | Improve this Doc View Source PaleTurquoise Declaration public static Color PaleTurquoise { get; } Property Value Type Description Color | Improve this Doc View Source PaleVioletRed Declaration public static Color PaleVioletRed { get; } Property Value Type Description Color | Improve this Doc View Source PapayaWhip Declaration public static Color PapayaWhip { get; } Property Value Type Description Color | Improve this Doc View Source PeachPuff Declaration public static Color PeachPuff { get; } Property Value Type Description Color | Improve this Doc View Source Peru Declaration public static Color Peru { get; } Property Value Type Description Color | Improve this Doc View Source Pink Declaration public static Color Pink { get; } Property Value Type Description Color | Improve this Doc View Source Plum Declaration public static Color Plum { get; } Property Value Type Description Color | Improve this Doc View Source PowderBlue Declaration public static Color PowderBlue { get; } Property Value Type Description Color | Improve this Doc View Source Purple Declaration public static Color Purple { get; } Property Value Type Description Color | Improve this Doc View Source R Declaration public byte R { get; } Property Value Type Description System.Byte | Improve this Doc View Source Red Declaration public static Color Red { get; } Property Value Type Description Color | Improve this Doc View Source RosyBrown Declaration public static Color RosyBrown { get; } Property Value Type Description Color | Improve this Doc View Source RoyalBlue Declaration public static Color RoyalBlue { get; } Property Value Type Description Color | Improve this Doc View Source SaddleBrown Declaration public static Color SaddleBrown { get; } Property Value Type Description Color | Improve this Doc View Source Salmon Declaration public static Color Salmon { get; } Property Value Type Description Color | Improve this Doc View Source SandyBrown Declaration public static Color SandyBrown { get; } Property Value Type Description Color | Improve this Doc View Source SeaGreen Declaration public static Color SeaGreen { get; } Property Value Type Description Color | Improve this Doc View Source SeaShell Declaration public static Color SeaShell { get; } Property Value Type Description Color | Improve this Doc View Source Sienna Declaration public static Color Sienna { get; } Property Value Type Description Color | Improve this Doc View Source Silver Declaration public static Color Silver { get; } Property Value Type Description Color | Improve this Doc View Source SkyBlue Declaration public static Color SkyBlue { get; } Property Value Type Description Color | Improve this Doc View Source SlateBlue Declaration public static Color SlateBlue { get; } Property Value Type Description Color | Improve this Doc View Source SlateGray Declaration public static Color SlateGray { get; } Property Value Type Description Color | Improve this Doc View Source Snow Declaration public static Color Snow { get; } Property Value Type Description Color | Improve this Doc View Source SpringGreen Declaration public static Color SpringGreen { get; } Property Value Type Description Color | Improve this Doc View Source SteelBlue Declaration public static Color SteelBlue { get; } Property Value Type Description Color | Improve this Doc View Source Tan Declaration public static Color Tan { get; } Property Value Type Description Color | Improve this Doc View Source Teal Declaration public static Color Teal { get; } Property Value Type Description Color | Improve this Doc View Source Thistle Declaration public static Color Thistle { get; } Property Value Type Description Color | Improve this Doc View Source Tomato Declaration public static Color Tomato { get; } Property Value Type Description Color | Improve this Doc View Source Transparent Declaration public static Color Transparent { get; } Property Value Type Description Color | Improve this Doc View Source Turquoise Declaration public static Color Turquoise { get; } Property Value Type Description Color | Improve this Doc View Source Violet Declaration public static Color Violet { get; } Property Value Type Description Color | Improve this Doc View Source Wheat Declaration public static Color Wheat { get; } Property Value Type Description Color | Improve this Doc View Source White Declaration public static Color White { get; } Property Value Type Description Color | Improve this Doc View Source WhiteSmoke Declaration public static Color WhiteSmoke { get; } Property Value Type Description Color | Improve this Doc View Source Yellow Declaration public static Color Yellow { get; } Property Value Type Description Color | Improve this Doc View Source YellowGreen Declaration public static Color YellowGreen { get; } Property Value Type Description Color Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean | Improve this Doc View Source FromArgb(Int32) Declaration public static Color FromArgb(int argb) Parameters Type Name Description System.Int32 argb Returns Type Description Color | Improve this Doc View Source FromArgb(Int32, Color) Declaration public static Color FromArgb(int alpha, Color baseColor) Parameters Type Name Description System.Int32 alpha Color baseColor Returns Type Description Color | Improve this Doc View Source FromArgb(Int32, Int32, Int32) Declaration public static Color FromArgb(int red, int green, int blue) Parameters Type Name Description System.Int32 red System.Int32 green System.Int32 blue Returns Type Description Color | Improve this Doc View Source FromArgb(Int32, Int32, Int32, Int32) Declaration public static Color FromArgb(int alpha, int red, int green, int blue) Parameters Type Name Description System.Int32 alpha System.Int32 red System.Int32 green System.Int32 blue Returns Type Description Color | Improve this Doc View Source FromKnownColor(KnownColor) Declaration public static Color FromKnownColor(KnownColor color) Parameters Type Name Description KnownColor color Returns Type Description Color | Improve this Doc View Source FromName(String) Declaration public static Color FromName(string name) Parameters Type Name Description System.String name Returns Type Description Color | Improve this Doc View Source GetBrightness() Declaration public float GetBrightness() Returns Type Description System.Single | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 | Improve this Doc View Source GetHue() Declaration public float GetHue() Returns Type Description System.Single | Improve this Doc View Source GetSaturation() Declaration public float GetSaturation() Returns Type Description System.Single | Improve this Doc View Source ToArgb() Declaration public int ToArgb() Returns Type Description System.Int32 | Improve this Doc View Source ToKnownColor() Declaration public KnownColor ToKnownColor() Returns Type Description KnownColor | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Operators | Improve this Doc View Source Equality(Color, Color) Declaration public static bool operator ==(Color left, Color right) Parameters Type Name Description Color left Color right Returns Type Description System.Boolean | Improve this Doc View Source Inequality(Color, Color) Declaration public static bool operator !=(Color left, Color right) Parameters Type Name Description Color left Color right Returns Type Description System.Boolean"
  },
  "api/System.Drawing.ColorConverter.html": {
    "href": "api/System.Drawing.ColorConverter.html",
    "title": "Class ColorConverter | OpenMod Docs",
    "keywords": "Class ColorConverter Inheritance System.Object ColorConverter Namespace : System.Drawing Assembly : OpenMod.Unturned.Module.Shared.dll Syntax public class ColorConverter : TypeConverter Constructors | Improve this Doc View Source ColorConverter() Declaration public ColorConverter() Methods | Improve this Doc View Source CanConvertFrom(ITypeDescriptorContext, Type) Declaration public override bool CanConvertFrom(ITypeDescriptorContext context, Type sourceType) Parameters Type Name Description ITypeDescriptorContext context Type sourceType Returns Type Description System.Boolean | Improve this Doc View Source CanConvertTo(ITypeDescriptorContext, Type) Declaration public override bool CanConvertTo(ITypeDescriptorContext context, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context Type destinationType Returns Type Description System.Boolean | Improve this Doc View Source ConvertFrom(ITypeDescriptorContext, CultureInfo, Object) Declaration public override object ConvertFrom(ITypeDescriptorContext context, CultureInfo culture, object value) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture System.Object value Returns Type Description System.Object | Improve this Doc View Source ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type) Declaration public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType) Parameters Type Name Description ITypeDescriptorContext context CultureInfo culture System.Object value Type destinationType Returns Type Description System.Object | Improve this Doc View Source GetStandardValues(ITypeDescriptorContext) Declaration public override StandardValuesCollection GetStandardValues(ITypeDescriptorContext context) Parameters Type Name Description ITypeDescriptorContext context Returns Type Description StandardValuesCollection | Improve this Doc View Source GetStandardValuesSupported(ITypeDescriptorContext) Declaration public override bool GetStandardValuesSupported(ITypeDescriptorContext context) Parameters Type Name Description ITypeDescriptorContext context Returns Type Description System.Boolean Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/System.Drawing.ColorTranslator.html": {
    "href": "api/System.Drawing.ColorTranslator.html",
    "title": "Class ColorTranslator | OpenMod Docs",
    "keywords": "Class ColorTranslator Inheritance System.Object ColorTranslator Namespace : System.Drawing Assembly : OpenMod.Unturned.Module.Shared.dll Syntax public sealed class ColorTranslator : object Methods | Improve this Doc View Source FromHtml(String) Declaration public static Color FromHtml(string htmlColor) Parameters Type Name Description System.String htmlColor Returns Type Description Color | Improve this Doc View Source FromOle(Int32) Declaration public static Color FromOle(int oleColor) Parameters Type Name Description System.Int32 oleColor Returns Type Description Color | Improve this Doc View Source FromWin32(Int32) Declaration public static Color FromWin32(int win32Color) Parameters Type Name Description System.Int32 win32Color Returns Type Description Color | Improve this Doc View Source ToHtml(Color) Declaration public static string ToHtml(Color c) Parameters Type Name Description Color c Returns Type Description System.String | Improve this Doc View Source ToOle(Color) Declaration public static int ToOle(Color c) Parameters Type Name Description Color c Returns Type Description System.Int32 | Improve this Doc View Source ToWin32(Color) Declaration public static int ToWin32(Color c) Parameters Type Name Description Color c Returns Type Description System.Int32 Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/System.Drawing.html": {
    "href": "api/System.Drawing.html",
    "title": "Namespace System.Drawing | OpenMod Docs",
    "keywords": "Namespace System.Drawing Classes ColorConverter ColorTranslator SystemColors Structs Color Enums KnownColor"
  },
  "api/System.Drawing.KnownColor.html": {
    "href": "api/System.Drawing.KnownColor.html",
    "title": "Enum KnownColor | OpenMod Docs",
    "keywords": "Enum KnownColor Namespace : System.Drawing Assembly : OpenMod.Unturned.Module.Shared.dll Syntax public enum KnownColor : int Fields Name Description ActiveBorder ActiveCaption ActiveCaptionText AliceBlue AntiqueWhite AppWorkspace Aqua Aquamarine Azure Beige Bisque Black BlanchedAlmond Blue BlueViolet Brown BurlyWood ButtonFace ButtonHighlight ButtonShadow CadetBlue Chartreuse Chocolate Control ControlDark ControlDarkDark ControlLight ControlLightLight ControlText Coral CornflowerBlue Cornsilk Crimson Cyan DarkBlue DarkCyan DarkGoldenrod DarkGray DarkGreen DarkKhaki DarkMagenta DarkOliveGreen DarkOrange DarkOrchid DarkRed DarkSalmon DarkSeaGreen DarkSlateBlue DarkSlateGray DarkTurquoise DarkViolet DeepPink DeepSkyBlue Desktop DimGray DodgerBlue Firebrick FloralWhite ForestGreen Fuchsia Gainsboro GhostWhite Gold Goldenrod GradientActiveCaption GradientInactiveCaption Gray GrayText Green GreenYellow Highlight HighlightText Honeydew HotPink HotTrack InactiveBorder InactiveCaption InactiveCaptionText IndianRed Indigo Info InfoText Ivory Khaki Lavender LavenderBlush LawnGreen LemonChiffon LightBlue LightCoral LightCyan LightGoldenrodYellow LightGray LightGreen LightPink LightSalmon LightSeaGreen LightSkyBlue LightSlateGray LightSteelBlue LightYellow Lime LimeGreen Linen Magenta Maroon MediumAquamarine MediumBlue MediumOrchid MediumPurple MediumSeaGreen MediumSlateBlue MediumSpringGreen MediumTurquoise MediumVioletRed Menu MenuBar MenuHighlight MenuText MidnightBlue MintCream MistyRose Moccasin NavajoWhite Navy OldLace Olive OliveDrab Orange OrangeRed Orchid PaleGoldenrod PaleGreen PaleTurquoise PaleVioletRed PapayaWhip PeachPuff Peru Pink Plum PowderBlue Purple Red RosyBrown RoyalBlue SaddleBrown Salmon SandyBrown ScrollBar SeaGreen SeaShell Sienna Silver SkyBlue SlateBlue SlateGray Snow SpringGreen SteelBlue Tan Teal Thistle Tomato Transparent Turquoise Violet Wheat White WhiteSmoke Window WindowFrame WindowText Yellow YellowGreen"
  },
  "api/System.Drawing.SystemColors.html": {
    "href": "api/System.Drawing.SystemColors.html",
    "title": "Class SystemColors | OpenMod Docs",
    "keywords": "Class SystemColors Inheritance System.Object SystemColors Namespace : System.Drawing Assembly : OpenMod.Unturned.Module.Shared.dll Syntax public sealed class SystemColors : object Properties | Improve this Doc View Source ActiveBorder Declaration public static Color ActiveBorder { get; } Property Value Type Description Color | Improve this Doc View Source ActiveCaption Declaration public static Color ActiveCaption { get; } Property Value Type Description Color | Improve this Doc View Source ActiveCaptionText Declaration public static Color ActiveCaptionText { get; } Property Value Type Description Color | Improve this Doc View Source AppWorkspace Declaration public static Color AppWorkspace { get; } Property Value Type Description Color | Improve this Doc View Source ButtonFace Declaration public static Color ButtonFace { get; } Property Value Type Description Color | Improve this Doc View Source ButtonHighlight Declaration public static Color ButtonHighlight { get; } Property Value Type Description Color | Improve this Doc View Source ButtonShadow Declaration public static Color ButtonShadow { get; } Property Value Type Description Color | Improve this Doc View Source Control Declaration public static Color Control { get; } Property Value Type Description Color | Improve this Doc View Source ControlDark Declaration public static Color ControlDark { get; } Property Value Type Description Color | Improve this Doc View Source ControlDarkDark Declaration public static Color ControlDarkDark { get; } Property Value Type Description Color | Improve this Doc View Source ControlLight Declaration public static Color ControlLight { get; } Property Value Type Description Color | Improve this Doc View Source ControlLightLight Declaration public static Color ControlLightLight { get; } Property Value Type Description Color | Improve this Doc View Source ControlText Declaration public static Color ControlText { get; } Property Value Type Description Color | Improve this Doc View Source Desktop Declaration public static Color Desktop { get; } Property Value Type Description Color | Improve this Doc View Source GradientActiveCaption Declaration public static Color GradientActiveCaption { get; } Property Value Type Description Color | Improve this Doc View Source GradientInactiveCaption Declaration public static Color GradientInactiveCaption { get; } Property Value Type Description Color | Improve this Doc View Source GrayText Declaration public static Color GrayText { get; } Property Value Type Description Color | Improve this Doc View Source Highlight Declaration public static Color Highlight { get; } Property Value Type Description Color | Improve this Doc View Source HighlightText Declaration public static Color HighlightText { get; } Property Value Type Description Color | Improve this Doc View Source HotTrack Declaration public static Color HotTrack { get; } Property Value Type Description Color | Improve this Doc View Source InactiveBorder Declaration public static Color InactiveBorder { get; } Property Value Type Description Color | Improve this Doc View Source InactiveCaption Declaration public static Color InactiveCaption { get; } Property Value Type Description Color | Improve this Doc View Source InactiveCaptionText Declaration public static Color InactiveCaptionText { get; } Property Value Type Description Color | Improve this Doc View Source Info Declaration public static Color Info { get; } Property Value Type Description Color | Improve this Doc View Source InfoText Declaration public static Color InfoText { get; } Property Value Type Description Color | Improve this Doc View Source Menu Declaration public static Color Menu { get; } Property Value Type Description Color | Improve this Doc View Source MenuBar Declaration public static Color MenuBar { get; } Property Value Type Description Color | Improve this Doc View Source MenuHighlight Declaration public static Color MenuHighlight { get; } Property Value Type Description Color | Improve this Doc View Source MenuText Declaration public static Color MenuText { get; } Property Value Type Description Color | Improve this Doc View Source ScrollBar Declaration public static Color ScrollBar { get; } Property Value Type Description Color | Improve this Doc View Source Window Declaration public static Color Window { get; } Property Value Type Description Color | Improve this Doc View Source WindowFrame Declaration public static Color WindowFrame { get; } Property Value Type Description Color | Improve this Doc View Source WindowText Declaration public static Color WindowText { get; } Property Value Type Description Color Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/UserDatabasePlugin.Commands.CommandLookup.html": {
    "href": "api/UserDatabasePlugin.Commands.CommandLookup.html",
    "title": "Class CommandLookup | OpenMod Docs",
    "keywords": "Class CommandLookup Inheritance System.Object CommandBase Command CommandLookup Implements ICommand Inherited Members Command.ExecuteAsync() CommandBase.Context CommandBase.PrintAsync(String) OpenMod.Core.Commands.CommandBase.PrintAsync(System.String, System.Drawing.Color) CommandBase.CheckPermissionAsync(String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UserDatabasePlugin.Commands Assembly : UserDatabasePlugin.dll Syntax [CommandDescription(\"Looks up a player\")] [CommandSyntax(\"<player name or id>\")] [RegisterCommandPermission(\"offline\", Description = \"Allows to look up offline players\")] public class CommandLookup : Command, ICommand Constructors | Improve this Doc View Source CommandLookup(IServiceProvider, IUserManager, IStringLocalizer, UserDatabaseDbContext) Declaration public CommandLookup(IServiceProvider serviceProvider, IUserManager userManager, IStringLocalizer stringLocalizer, UserDatabaseDbContext dbContext) Parameters Type Name Description System.IServiceProvider serviceProvider IUserManager userManager IStringLocalizer stringLocalizer UserDatabaseDbContext dbContext Fields | Improve this Doc View Source OfflineLookupPermission Declaration public const string OfflineLookupPermission = \"offline\" Field Value Type Description System.String Methods | Improve this Doc View Source OnExecuteAsync() Declaration protected override Task OnExecuteAsync() Returns Type Description System.Threading.Tasks.Task Overrides Command.OnExecuteAsync() Implements ICommand Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/UserDatabasePlugin.Commands.html": {
    "href": "api/UserDatabasePlugin.Commands.html",
    "title": "Namespace UserDatabasePlugin.Commands | OpenMod Docs",
    "keywords": "Namespace UserDatabasePlugin.Commands Classes CommandLookup"
  },
  "api/UserDatabasePlugin.ContainerConfigurator.html": {
    "href": "api/UserDatabasePlugin.ContainerConfigurator.html",
    "title": "Class ContainerConfigurator | OpenMod Docs",
    "keywords": "Class ContainerConfigurator Inheritance System.Object ContainerConfigurator Namespace : UserDatabasePlugin Assembly : UserDatabasePlugin.dll Syntax public class ContainerConfigurator : IPluginContainerConfigurator Methods | Improve this Doc View Source ConfigureContainer(IPluginServiceConfigurationContext) Declaration public void ConfigureContainer(IPluginServiceConfigurationContext context) Parameters Type Name Description IPluginServiceConfigurationContext context Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/UserDatabasePlugin.Database.html": {
    "href": "api/UserDatabasePlugin.Database.html",
    "title": "Namespace UserDatabasePlugin.Database | OpenMod Docs",
    "keywords": "Namespace UserDatabasePlugin.Database Classes User UserActivity UserDatabaseDbContext UserDatabaseDbContextFactory"
  },
  "api/UserDatabasePlugin.Database.User.html": {
    "href": "api/UserDatabasePlugin.Database.User.html",
    "title": "Class User | OpenMod Docs",
    "keywords": "Class User Inheritance System.Object User Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UserDatabasePlugin.Database Assembly : UserDatabasePlugin.dll Syntax public class User Properties | Improve this Doc View Source Id Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source Type Declaration public string Type { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserActivities Declaration public virtual List<UserActivity> UserActivities { get; set; } Property Value Type Description System.Collections.Generic.List < UserActivity > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/UserDatabasePlugin.Database.UserActivity.html": {
    "href": "api/UserDatabasePlugin.Database.UserActivity.html",
    "title": "Class UserActivity | OpenMod Docs",
    "keywords": "Class UserActivity Inheritance System.Object UserActivity Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UserDatabasePlugin.Database Assembly : UserDatabasePlugin.dll Syntax public class UserActivity Properties | Improve this Doc View Source Date Declaration public DateTime Date { get; set; } Property Value Type Description System.DateTime | Improve this Doc View Source Id Declaration public int Id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Type Declaration public string Type { get; set; } Property Value Type Description System.String | Improve this Doc View Source User Declaration public virtual User User { get; set; } Property Value Type Description User | Improve this Doc View Source UserId Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserName Declaration public string UserName { get; set; } Property Value Type Description System.String Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/UserDatabasePlugin.Database.UserDatabaseDbContext.html": {
    "href": "api/UserDatabasePlugin.Database.UserDatabaseDbContext.html",
    "title": "Class UserDatabaseDbContext | OpenMod Docs",
    "keywords": "Class UserDatabaseDbContext Inheritance System.Object UserDatabaseDbContext Namespace : UserDatabasePlugin.Database Assembly : UserDatabasePlugin.dll Syntax public class UserDatabaseDbContext : OpenModDbContext<UserDatabaseDbContext> Constructors | Improve this Doc View Source UserDatabaseDbContext(IDbContextConfigurator, IServiceProvider) Declaration public UserDatabaseDbContext(IDbContextConfigurator configurator, IServiceProvider serviceProvider) Parameters Type Name Description IDbContextConfigurator configurator System.IServiceProvider serviceProvider | Improve this Doc View Source UserDatabaseDbContext(IServiceProvider) Declaration public UserDatabaseDbContext(IServiceProvider serviceProvider) Parameters Type Name Description System.IServiceProvider serviceProvider Properties | Improve this Doc View Source UserActivities Declaration public DbSet<UserActivity> UserActivities { get; set; } Property Value Type Description DbSet < UserActivity > | Improve this Doc View Source Users Declaration public DbSet<User> Users { get; set; } Property Value Type Description DbSet < User > Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/UserDatabasePlugin.Database.UserDatabaseDbContextFactory.html": {
    "href": "api/UserDatabasePlugin.Database.UserDatabaseDbContextFactory.html",
    "title": "Class UserDatabaseDbContextFactory | OpenMod Docs",
    "keywords": "Class UserDatabaseDbContextFactory Inheritance System.Object OpenModMySqlDbContextFactory < UserDatabaseDbContext > UserDatabaseDbContextFactory Inherited Members OpenModMySqlDbContextFactory<UserDatabaseDbContext>.CreateDbContext(String[]) Namespace : UserDatabasePlugin.Database Assembly : UserDatabasePlugin.dll Syntax public class UserDatabaseDbContextFactory : OpenModMySqlDbContextFactory<UserDatabaseDbContext> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/UserDatabasePlugin.html": {
    "href": "api/UserDatabasePlugin.html",
    "title": "Namespace UserDatabasePlugin | OpenMod Docs",
    "keywords": "Namespace UserDatabasePlugin Classes ContainerConfigurator UserDatabasePlugin UserEventsListener"
  },
  "api/UserDatabasePlugin.Migrations.html": {
    "href": "api/UserDatabasePlugin.Migrations.html",
    "title": "Namespace UserDatabasePlugin.Migrations | OpenMod Docs",
    "keywords": "Namespace UserDatabasePlugin.Migrations Classes MigrateToPomelo"
  },
  "api/UserDatabasePlugin.Migrations.MigrateToPomelo.html": {
    "href": "api/UserDatabasePlugin.Migrations.MigrateToPomelo.html",
    "title": "Class MigrateToPomelo | OpenMod Docs",
    "keywords": "Class MigrateToPomelo Inheritance System.Object MigrateToPomelo Namespace : UserDatabasePlugin.Migrations Assembly : UserDatabasePlugin.dll Syntax public class MigrateToPomelo : Migration Methods | Improve this Doc View Source BuildTargetModel(ModelBuilder) Declaration protected override void BuildTargetModel(ModelBuilder modelBuilder) Parameters Type Name Description ModelBuilder modelBuilder | Improve this Doc View Source Down(MigrationBuilder) Declaration protected override void Down(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder | Improve this Doc View Source Up(MigrationBuilder) Declaration protected override void Up(MigrationBuilder migrationBuilder) Parameters Type Name Description MigrationBuilder migrationBuilder Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/UserDatabasePlugin.UserDatabasePlugin.html": {
    "href": "api/UserDatabasePlugin.UserDatabasePlugin.html",
    "title": "Class UserDatabasePlugin | OpenMod Docs",
    "keywords": "Class UserDatabasePlugin Inheritance System.Object OpenModPluginBase OpenModUniversalPlugin UserDatabasePlugin Implements IOpenModPlugin IAsyncDisposable Inherited Members OpenModUniversalPlugin.LoadAsync() OpenModUniversalPlugin.UnloadAsync() OpenModUniversalPlugin.OnUnloadAsync() OpenModPluginBase.OpenModComponentId OpenModPluginBase.WorkingDirectory OpenModPluginBase.IsComponentAlive OpenModPluginBase.Status OpenModPluginBase.DisplayName OpenModPluginBase.Author OpenModPluginBase.Website OpenModPluginBase.Description OpenModPluginBase.Version OpenModPluginBase.DataStore OpenModPluginBase.LifetimeScope OpenModPluginBase.Configuration OpenModPluginBase.Runtime OpenModPluginBase.EventBus OpenModPluginBase.Logger OpenModPluginBase.Harmony OpenModPluginBase.GetPluginVersion() OpenModPluginBase.DisposeAsync() OpenModPluginBase.OnDispose() System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : UserDatabasePlugin Assembly : UserDatabasePlugin.dll Syntax public class UserDatabasePlugin : OpenModUniversalPlugin, IOpenModPlugin, IAsyncDisposable Constructors | Improve this Doc View Source UserDatabasePlugin(ILogger<UserDatabasePlugin>, IServiceProvider, IPermissionRegistry, UserDatabaseDbContext) Declaration public UserDatabasePlugin(ILogger<UserDatabasePlugin> logger, IServiceProvider serviceProvider, IPermissionRegistry permissionRegistry, UserDatabaseDbContext dbContext) Parameters Type Name Description ILogger < UserDatabasePlugin > logger System.IServiceProvider serviceProvider IPermissionRegistry permissionRegistry UserDatabaseDbContext dbContext Methods | Improve this Doc View Source OnLoadAsync() Declaration protected override Task OnLoadAsync() Returns Type Description System.Threading.Tasks.Task Overrides OpenModUniversalPlugin.OnLoadAsync() Implements IOpenModPlugin IAsyncDisposable Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "api/UserDatabasePlugin.UserEventsListener.html": {
    "href": "api/UserDatabasePlugin.UserEventsListener.html",
    "title": "Class UserEventsListener | OpenMod Docs",
    "keywords": "Class UserEventsListener Inheritance System.Object UserEventsListener Implements IEventListener < IUserDisconnectedEvent > Namespace : UserDatabasePlugin Assembly : UserDatabasePlugin.dll Syntax public class UserEventsListener : IEventListener<IUserConnectedEvent>, IEventListener<IUserDisconnectedEvent> Constructors | Improve this Doc View Source UserEventsListener(UserDatabaseDbContext) Declaration public UserEventsListener(UserDatabaseDbContext dbContext) Parameters Type Name Description UserDatabaseDbContext dbContext Methods | Improve this Doc View Source HandleEventAsync(Object, IUserConnectedEvent) Declaration public Task HandleEventAsync(object sender, IUserConnectedEvent event) Parameters Type Name Description System.Object sender IUserConnectedEvent event Returns Type Description System.Threading.Tasks.Task | Improve this Doc View Source HandleEventAsync(Object, IUserDisconnectedEvent) Declaration public Task HandleEventAsync(object sender, IUserDisconnectedEvent event) Parameters Type Name Description System.Object sender IUserDisconnectedEvent event Returns Type Description System.Threading.Tasks.Task Implements IEventListener<> Extension Methods DisposeHelper.DisposeSyncOrAsync(Object)"
  },
  "devdoc/concepts/commands.html": {
    "href": "devdoc/concepts/commands.html",
    "title": "Commands | OpenMod Docs",
    "keywords": "Commands To create a command, create a class that inherits from one of these: Command (for universal plugins) UnityEngineCommand (for UnityEngine plugins) UnturnedCommand (for Unturned plugins) In this example, we will make a universal command that works on any game or platform: public class CommandAwesome : Command { public CommandAwesome(IServiceProvider serviceProvider) : base(serviceProvider) { } } Add metadata to describe the command: [Command(\"awesome\")] // The primary name for the command. Usually, it is defined as lowercase. [CommandAlias(\"awsm\")] // Add \"awsm\" as alias. [CommandAlias(\"aw\")] // Add \"aw\" as alias. [CommandDescription(\"My awesome command\")] // Description. Try to keep it short and simple. public class CommandAwesome : Command { public CommandAwesome(IServiceProvider serviceProvider) : base(serviceProvider) { } } Implement OnExecuteAsync: [Command(\"awesome\")] [CommandAlias(\"awsm\")] [CommandAlias(\"aw\")] [CommandDescription(\"My awesome command\")] public class CommandAwesome : Command { public CommandAwesome(IServiceProvider serviceProvider) : base(serviceProvider) { } // use UniTask instead of Task if derivered from UnityEngineCommand or UnturnedCommand public async Task OnExecuteAsync() { await PrintAsync(\"OpenMod is awesome!\"); } } Warning Avoid hardcoding messages like in the example above. Instead, use localization so users can customize and translate the messages. Parameters Most commands usually require parameters. The command context provides a Parameter property for this: public async Task OnExecuteAsync() { // assume we want the command to be called like this: /awesome <player> <amount> // Parameters start from 0, so <player> index is 0, <amount> index is 1. var player = await Context.Parameters.GetAsync<string>(0); var amount = await Context.Parameters.GetAsync<int>(1); await PrintAsync($\"{player} is {amount}x awesome!\"); } After that, you need to describe how users can use the command. Add the syntax metadata to the command class: //... [CommandSyntax(\"<player> [amount]\")] // Describe the syntax/usage. Use <> for required arguments and [] for optional arguments. public class CommandAwesome : Command //... Restricting Command Actors If you are not developing universal plugins, you may want to limit who can execute commands. The [CommandActor(Type)] attribute allows you to specify such restrictions. For example, if you want to restrict a commands usage to UnturnedUser and ConsoleActor, you can add the following: //... [CommandActor(typeof(UnturnedUser))] [CommandActor(typeof(ConsoleActor))] public class CommandAwesome : Command //... Warning By default, any user type can execute your command. Plugins can dynamically add new users such as DiscordUser, PluginUser, RconUser etc. Write your commands in a way that works with all users. If that is not possible (e.g. a /god command that requires UnturnedUser), restrict the allowed actors like mentioned above. Caution Do not manually check if an actor is allowed to execute a command (e.g. if(!(actor is UnturnedUser)) ). Always use [CommandActor(Type)] for such restrictions. It will automatically hide the command from actors who cannot execute them and give a consistent error message. Exceptions Exceptions derived from UserFriendlyException are automatically caught by OpenMod and the message is displayed to the user in a user-friendly way. These built-in user-friendly exceptions available: NotEnoughPermissionException , can be thrown if the user does not have enough permission to execute an action. CommandWrongUsageException , can be thrown on wrong command usage. Displays correct usage based on command syntax. CommandIndexOutOfRangeException , thrown automatically by Parameters.Get if the given index is bigger than the arguments length. CommandParameterParseException , thrown automatically by Parameters.Get if the parameter could not be parsed to the expected type. CommandNotFoundException , thrown automatically if a command was not found. public async Task OnExecuteAsync() { var player = await Context.Parameters.GetAsync<string>(0); var amount = await Context.Parameters.GetAsync<int>(1); if(amount < 1) { throw new UserFriendlyException(\"Amount cannot be negative!\"); } await PrintAsync($\"{player} is {amount}x awesome!\"); } Command Permissions By design and for consistency reasons, you cannot define a command permission manually. OpenMod will automatically assign a permission to the command instead. You can use the help <yourcommand> command to figure out what the base permission for your command is. Assume you want to restrict the awesome command if the amount is more than 10. This is how you would do it: public async Task OnExecuteAsync() { var player = await Context.Parameters.GetAsync<string>(0); var amount = await Context.Parameters.GetAsync<int>(1); if(amount > 10 && await CheckPermissionAsync(\"MoreThan10\") != PermissionGrantResult.Grant) { throw new NotEnoughPermissionException(this, \"MoreThan10\"); // displays an error message to the user } await PrintAsync($\"{player} is {amount}x awesome!\"); } Caution Do not manually check for general command usage permissions. OpenMod automatically defines permissions for commands. A bad example would be: public async Task OnExecuteAsync() { if (!await CheckPermissionAsync(\"MyCommand\")) { //throw ... or even worse await PrintAsync(...) } } Caution Do not manually send missing permission messages. Always throw NotEnoughPermissionException instead. Adding child commands You can add child commands to a command by using the [CommandParent] attribute. This allows OpenMod to discover your child commands and provide additional help and tab autocompletion. The following command will execute when a user types \"/awesome more\". The CommandAwesome.OnExecuteAsync method will not execute in this case. [Command(\"more\")] [CommandDescription(\"My more awesome command\")] [CommandParent(typeof(CommandAwesome))] // set \"awesome\" as parent. public class CommandAwesomeMore : Command { public CommandAwesomeMore(IServiceProvider serviceProvider) : base(serviceProvider) { } public async Task OnExecuteAsync() { // Note: Parameters do not include \"more\". // If you type \"/awesome more a\", Context.Parameters[0] will be equal to \"a\". await PrintAsync(\"You are even more awesome!\"); } } Caution Do not handle child commands yourself (e.g. if(Context.Parameters[0] == \"add\") ). When manually handling child commands, OpenMod can't discover your child commands and provide additional help, permissions or tab autocompletion. Adding child permissions You can add child permissions for your commands, they need to be registered using [RegisterCommandPermission(\"child.permission\")] , to check if the user has the permission you will just need to call await CheckPermissionAsync(\"child.permission\") and check the result. Example: [Command(\"more\")] [RegisterCommandPermission(\"child.permission\", Description = \"My awesome permission description\", DefaultGrant = PermissionGrantResult.Default)] //Description and DefaultGrant are optional public class CommandAwesomeMore : Command { public CommandAwesomeMore(IServiceProvider serviceProvider) : base(serviceProvider) { } public async Task OnExecuteAsync() { //MyPlugin:AwesomeMore.child.permission if (await CheckPermissionAsync(\"child.permission\") == PermissionGrantResult.Grant) { //User have the child permission } else { //User do not have the child permission } } }"
  },
  "devdoc/concepts/configuration.html": {
    "href": "devdoc/concepts/configuration.html",
    "title": "Configurations | OpenMod Docs",
    "keywords": "Configurations Configurations allow users to configure and customize your plugins behavior. Assume your plugin gives XP when killing a player. By using configs, a user can dynamically set how much XP will be given. OpenMod configurations are based on Microsoft.Extensions.Configuration which is also used in ASP.NET Core. Warning The <RootNamespace> and <AssemblyName> properties in the plugins .csproj file must be equal, otherwise the IConfiguration service will not work. Adding the config.yaml Create a new file called \"config.yaml\" inside your project's root directory. After that, add the following to your .csproj file: <ItemGroup> <EmbeddedResource Include=\"config.yaml\" /> </ItemGroup> Note If you created your plugin project using one of the templates, the comfig.yaml file will be already set up. Reading from the configuration file You can use the IConfiguration service to read the config.yaml file. You can inject it like this: public class MyPlugin : OpenModUniversalPlugin { private readonly IConfiguration m_Configuration; public MyPlugin(IConfiguration configuration, IServiceProvider serviceProvider) : base(serviceProvider) { m_Configuration = configuration; } public async Task OnLoadAsync() { // ... } } Assume your configuration looks like this: plugin_load_delay: 500 Then this is how you would read the value: public async Task OnLoadAsync() { var delay = m_Configuration.GetSection(\"plugin_load_delay\").Get<int>(); await Task.Delay(delay); } You can also have nested values: plugin_load: actions: wait_delay: 500 public async Task OnLoadAsync() { // notice how \":\" is used to access nested values var delay = m_Configuration.GetSection(\"plugin_load:actions:wait_delay\").Get<int>(); await Task.Delay(delay); } If you want to access strings, you can also use the indexer: players: owner: \"Trojaner\" public async Task OnLoadAsync() { // reading strings is even easier string owner = m_Configuration[\"players:owner\"]; } Warning Configuration files are not meant store data, that's why there are no setter or save methods. See persistence if you need to store and load data. Caution Do not cache data read from configurations. This will break dynamic reloading of configuration files. Converting configurations to C# classes public async Task OnLoadAsync() { var config = new MyConfigClass(); m_Configuration.Bind(config); // or if you only want to bind a subset: // m_Configuration.GetSection(\"something\").Bind(config); } Note You can cache the config variable here, bind will automatically update the values if the config reloads. Listening to configuration changes To listen to changes, you can use change tokens . Get the reload token of the configuration: var changeToken = m_Configuration.GetReloadToken(); Add a new event listener: var listener = ChangeToken.OnChange(() => reloadToken, () => { m_Logger.LogInformation(\"Configuration file has been reloaded!\"); }) You can use listener.Dispose() to stop listening. Caution Do not use config change listeners to fetch latest configuration values. OpenMod does this automatically. IConfiguration.Get will always return the current configuration values. Adding your own configuration sources You can add additional configuration sources by implementing the IConfigurationConfigurator interface. This interface allows you to add additional sources to the IConfigurationBuilder used when building the OpenMod config. Warning Custom configuration sources for plugins are not supported yet . Best Practices Caution Do not hardcode important values. If you are making a plugin that gives players XP when killing other players, make sure the XP amount is configurable, as it is something many users may want to adjust. Caution Do not overcomplicate your configurations. Only add values that users are likely going to change. Having a simple configuration is preferred to a complex one. Caution Do not use configurations for customizable messages. Use localization instead. Unlike configurations, localization supports formatting and passing arguments."
  },
  "devdoc/concepts/databases.html": {
    "href": "devdoc/concepts/databases.html",
    "title": "Databases | OpenMod Docs",
    "keywords": "Databases The OpenMod.EntityFrameworkCore libraries provide functionality for using Microsoft's Entity Framework Core to load and save information from multiple types of databases. Currently supported providers: OpenMod.EntityFrameworkCore.MySql - MySQL/MariaDB databases. For more information on Entity Framework Core, read Microsoft's documentation . A basic overview of OpenMod's implementation is written here. Creating your first DbContext The DbContext houses all of your database sets which in turn hold all your information. In this example, we will create a database that will allow us to record every time a user connects and we will be using the MySql provider. To create your first DbContext, you must create a class which inherits OpenModDbContext and add constructors for both constructors of the base class: public class UserConnectionDbContext : OpenModDbContext<UserConnectionDbContext> { public UserConnectionDbContext(IServiceProvider serviceProvider) : base(serviceProvider) { } public UserConnectionDbContext(IDbContextConfigurator configurator, IServiceProvider serviceProvider) : base(configurator, serviceProvider) { } } After creating this class, you must register it as a database context within your plugin. To do this, add a plugin container configurator and register the database context in its configure method. This class can be placed anywhere but is usually in the root namespace. public class PluginContainerConfigurator : IPluginContainerConfigurator { public void ConfigureContainer(IPluginServiceConfigurationContext context) { // You can extend how your database context works by using the overloads of this method. context.ContainerBuilder.AddMySqlDbContext<UserConnectionDbContext>(); } } By default, OpenMod will get the connection string for your MySql database from your config.yaml file. Ensure this is in your config file: database: ConnectionStrings: default: \"Server=127.0.0.1; Database=openmod; Port=3306; User=root; Password=password\" Create your model For more detail on creating models, refer to Microsoft's EF Core Documentation on modeling . Simply begin by creating a class with all the fields you want to record. public class UserConnection { // The primary key used to identify each connection. public uint ConnectionId { get; set; } // The user's ID. public string UserId { get; set; } = \"\"; // The user's type. public string UserType { get; set; } = \"\"; // The date/time of this connection record. public DateTime ConnectionTime { get; set; } } This class needs a primary key to identify each model and this primary key (ConnectionId) should also be automatically generated. We can configure this in two ways: Data Annotations - Simply adding the [Key] attribute to our UserConnection class: public uint ConnectionId { get; set; } becomes [Key] [DatabaseGenerated(DatabaseGeneratedOption.Identity)] public uint ConnectionId { get; set; } Fluent API - Overriding the OnModelCreating method within our UserConnectionDbContext class and configuring the primary key there: protected override void OnModelCreating(ModelBuilder modelBuilder) { base.OnModelCreating(modelBuilder); modelBuilder.Entity<UserConnection>() .HasKey(x => x.ConnectionId); modelBuilder.Entity<UserConnection>() .Property(x => x.ConnectionId) .ValueGeneratedOnAdd(); } The purpose of Fluent API, although more complicated, allows greater control over how models are configured. Add your model to your DB context Now that you have your DB context ( UserConnectionDbContext ) and your model ( UserConnection ), linking the two is very easy. All that is needed is to define a new property in your DB context as follows: public DbSet<UserConnection> UserConnections => Set<UserConnection>(); We will use this property to manage our user connection records. For a recap, our classes now look like this (assuming Fluent API is being used): UserConnection.cs public class UserConnection { // The primary key used to identify each connection. public uint ConnectionId { get; set; } // The user's ID. public string UserId { get; set; } = \"\"; // The user's type. public string UserType { get; set; } = \"\"; // The date/time of this connection record. public DateTime ConnectionTime { get; set; } } UserConnectionDbContext.cs public class UserConnectionDbContext : OpenModDbContext<UserConnectionDbContext> { public UserConnectionDbContext(IServiceProvider serviceProvider) : base(serviceProvider) { } public UserConnectionDbContext(IDbContextConfigurator configurator, IServiceProvider serviceProvider) : base(configurator, serviceProvider) { } public DbSet<UserConnection> UserConnections => Set<UserConnection>(); protected override void OnModelCreating(ModelBuilder modelBuilder) { base.OnModelCreating(modelBuilder); modelBuilder.Entity<UserConnection>() .HasKey(x => x.ConnectionId); modelBuilder.Entity<UserConnection>() .Property(x => x.ConnectionId) .ValueGeneratedOnAdd(); } } Creating a migration For more detail on migrations, refer to Microsoft's EF Core Documentation on migrations . Migrations allow EF Core to manage the creation and modifications of the database automatically. An initial migration must be created to allow EF Core to create the database for us. Creating migrations is very simple: Add a NuGet reference to the Microsoft.EntityFrameworkCore.Tools package (latest 3.x version - 3.1.16 at the time of writing this). In Microsoft Visual Studio's Package Manager: Install-Package Microsoft.EntityFrameworkCore.Tools -Version 3.1.16 In Visual Studio Code's CLI (or command line): dotnet add package Microsoft.EntityFrameworkCore.Tools --version 3.1.16 Create a database context factory class (this allows EF core to create an instance of the database context without needing to run the entire OpenMod server): public class UserConnectionDbContextFactory : OpenModMySqlDbContextFactory<UserConnectionDbContext> { } Use the tools package to create the migration (replace MigrationName with your desired migration name, for this sample we'll use Initial ): In Microsoft Visual Studio's Package Manager: Add-Migration MigrationName In Visual Studio Code's CLI (or command line): dotnet ef migrations add MigrationName Migrate at plugin load by adding this to your plugin's load method (where m_DbContext is an instance of your database context): await m_DbContext.Database.MigrateAsync(); To add migrations in the future, you only need to run the Add-Migration (or dotnet ef migrations add ) command. Saving data For more detail on saving, refer to Microsoft's EF Core Documentation on saving data . Every time a user connects, we want to record this to a database. We can subscribe to IUserConnectionEvent for this. For more information on events, see the Events documentation . As we registered our DB context in our plugin container configurator, we can simply resolve our DB context from our constructor. The base code for our event listener is as follows: public class UserConnectedEventListener : IEventListener<IUserConnectedEvent> { private readonly UserConnectionDbContext m_DbContext; public UserConnectedEventListener(UserConnectionDbContext dbContext) { m_DbContext = dbContext; } public async Task HandleEventAsync(object? sender, IUserConnectedEvent @event) { // database logic } } To insert a record into our database: Create an instance of the record. UserConnection userConnection = new UserConnection { UserId = @event.User.Id, UserType = @event.User.Type, ConnectionTime = DateTime.UtcNow }; Note We do not set ConnectionId as we configured the database to automatically generate this value for us. Add this instance to the database set. await m_DbContext.UserConnections.AddAsync(userConnection); Save our changes: await m_DbContext.SaveChangesAsync(); Our entire UserConnectedEventListener class will now look like: public class UserConnectedEventListener : IEventListener<IUserConnectedEvent> { private readonly UserConnectionDbContext m_DbContext; public UserConnectedEventListener(UserConnectionDbContext dbContext) { m_DbContext = dbContext; } public async Task HandleEventAsync(object? sender, IUserConnectedEvent @event) { UserConnection userConnection = new UserConnection { UserId = @event.User.Id, UserType = @event.User.Type, ConnectionTime = DateTime.UtcNow }; await m_DbContext.UserConnections.AddAsync(userConnection); await m_DbContext.SaveChangesAsync(); } } Querying data For more detail on querying data, refer to Microsoft's EF Core Documentation on querying . For this sample, we'll create a /lastconnect command that responds with the last time a user connected. For more information on commands, see the Commands documentation . The base code for our command is as follows: [Command(\"lastconnect\")] public class LastConnectCommand : Command { private readonly UserConnectionDbContext m_DbContext; public LastConnectCommand(UserConnectionDbContext dbContext, IServiceProvider serviceProvider) : base(serviceProvider) { m_DbContext = dbContext; } protected override async Task OnExecuteAsync() { string userId = await Context.Parameters.GetAsync<string>(0); string userType = await Context.Parameters.GetAsync<string>(1); // database logic } } To get the latest connection, we can use the methods of m_DbContext.UserConnections to get the connection we're looking for. UserConnection? lastConnection = await m_DbContext.UserConnections .Where(x => x.UserId == userId && x.UserType == userType) // Filter by only the target user .OrderByDescending(x => x.ConnectionTime) // Order by descending connection time (latest to earliest connections) .FirstOrDefaultAsync(); // Execute the query If the user has never connected, lastConnection will be equal to null . We can then output the last connection to the command actor, resulting in the command class of: [Command(\"lastconnect\")] [CommandSyntax(\"<user id> <user type>\")] public class LastConnectCommand : Command { private readonly UserConnectionDbContext m_DbContext; public LastConnectCommand(UserConnectionDbContext dbContext, IServiceProvider serviceProvider) : base(serviceProvider) { m_DbContext = dbContext; } protected override async Task OnExecuteAsync() { var userId = await Context.Parameters.GetAsync<string>(0); var userType = await Context.Parameters.GetAsync<string>(1); UserConnection? userConnection = await m_DbContext.UserConnections .Where(x => x.UserId == userId && x.UserType == userType) .OrderByDescending(x => x.ConnectionTime) .FirstOrDefaultAsync(); if (userConnection == null) { await PrintAsync(\"This user has never connected.\"); } else { await PrintAsync($\"Last connection: {userConnection.ConnectionTime}\"); } } }"
  },
  "devdoc/concepts/events.html": {
    "href": "devdoc/concepts/events.html",
    "title": "Events and event listeners | OpenMod Docs",
    "keywords": "Events and event listeners Events are used to notify components that something is happening, like a user disconnecting. There are two types of events: OpenMod Events C# Events This guide will be about OpenMod events. Subscribing to events There are two ways to subscribe to events: Implement the IEventListener interface: public class UserConnectListener : IEventListener<UserConnectedEvent> { [EventListener(Priority = EventListenerPriority.Lowest)] public async Task HandleEventAsync(object sender, UserConnectEvent @event) { // do something } } Use the subscribe methods from the IEventBus service: public class MyPlugin : OpenModUniversalPlugin { private readonly IEventBus m_EventBus; public MyPlugin(IEventBus eventBus, IServiceProvider serviceProvider) : base(serviceProvider) { m_EventBus = eventBus; } public async Task OnLoadAsync() { m_EventBus.Subscribe(this, (sender, @event) => { // do something }); } } Note All OpenMod event listeners are automatically unsubscribed when your plugin unloads. You do not have to unsubscribe them manually on unload. Event listener priority and execution order OpenMod allows you to control in which order your event listeners are executed. Execution order is based on priority. You can set an event listeners priority by using the [EventListener] attribute. Execution order is from lowest priority to highest. In other words, lowest priority is called first. public class UserConnectListener1 : IEventListener<UserConnectedEvent> { [EventListener(Priority = EventListenerPriority.Lowest)] public async Task HandleEventAsync(object sender, UserConnectEvent @event) { } } public class UserConnectListener2 : IEventListener<UserConnectedEvent> { [EventListener(Priority = EventListenerPriority.Low)] public async Task HandleEventAsync(object sender, UserConnectEvent @event) { } } public class UserConnectListener3 : IEventListener<UserConnectedEvent> { [EventListener(Priority = EventListenerPriority.High)] public async Task HandleEventAsync(object sender, UserConnectEvent @event) { } } In the example above, UserConnectListener1 is called first, then UserConnectListener2 and finally UserConnectListener3 . Cancelling events and ignoring cancelled events An event has to implement the ICancellableEvent interface to be cancellable. If an event gets cancelled, event listeners which do not have the IgnoreCancelled property in the [EventListener] attribute set to true will not be notified. UserConnectingEvent is such a cancellable event. It will disconnect the connecting user if the event gets cancelled. public class UserConnectingListener1 : IEventListener<UserConnectingEvent> { [EventListener(Priority = EventListenerPriority.Lowest)] public async Task HandleEventAsync(object sender, UserConnectingEvent @event) { if(user.DisplayName.Equals(\"Trojaner\")) { @event.IsCancelled = true; } } } public class UserConnectingListener2 : IEventListener<UserConnectingEvent> { [EventListener(Priority = EventListenerPriority.Low)] public async Task HandleEventAsync(object sender, UserConnectingEvent @event) { // this event listener will not be called because it does not ignore cancellation } } public class UserConnectingListener3 : IEventListener<UserConnectingEvent> { [EventListener(Priority = EventListenerPriority.High, IgnoreCancelled = true)] public async Task HandleEventAsync(object sender, UserConnectingEvent @event) { // this event listener will be called even if the event gets cancelled } } In the example above, if a user named \"Trojaner\" connects, UserConnectingListener1 will cancel the event. UserConnectingListener2 will not be called in this case because it does not ignore cancelled events like UserConnectingListener3 does. Event listener lifetime Event listeners can have three types of lifetime: Transient - The event listener is always be recreated on every event. If you have multiple IEventListeners, all of them will have their own instances. This is the default lifetime. Scoped - If you implement multiple IEventListeners in one class, all of them will share the same instance. Otherwise same as transient. Singleton - The event listener will have only one shared lifetime that lives until the plugin gets unloaded. You can set the event listener lifetime by adding the [EventListenerLifetime(ServiceLifetime)] attribute: [EventListenerLifetime(ServiceLifetime.Transient)] public class UserConnectBroadcaster : IEventListener<UserConnectedEvent> // ... Custom events Creating a custom event is simple: just create a new class that inherits from Event . Here is an example: public class SampleEvent : Event { public int MyValue { get; set; } // you can also add other properties } You can then emit it by using the event bus: MyPlugin myPlugin = ...; IEventBus eventBus = ...; ILogger<xxx> logger = ...; var @event = new SampleEvent { MyValue = 20 }; await m_EventBus.EmitAsync(myPlugin, this /* sender */, @event); logger.LogInformation($\"Event value: {@event.MyValue}\"); If you want your event to be cancellable, you must implement the ICancellableEvent interface: public class SampleEvent : Event, ICancellableEvent { public int MyValue { get; set; } public bool IsCancelled { get; set; } } MyPlugin myPlugin = ...; IEventBus eventBus = ...; ILogger<xxx> logger = ...; var @event = new SampleEvent { MyValue = 20 }; await m_EventBus.EmitAsync(myPlugin, this /* sender */, @event); if(@event.IsCancelled) { logger.LogInformation($\"Event has been cancelled!\"); return; } logger.LogInformation($\"Event value: {@event.MyValue}\"); Caution Do not forget to unsubscribe from C# events and delegates when your plugin unloads or a service gets disposed. For example, if you want to subscribe to the onEnemyConnected event from Unturned when your plugin loads, you must also unsubscribe from it like this: public async UniTask OnLoadAsync() { Provider.onEnemyConnected += OnPlayerConnected; } public async UniTask OnUnloadAsync() { // this is very important, otherwise your plugin will not properly support reloads and unloads. Provider.onEnemyConnected -= OnPlayerConnected; } Warning Avoid writing singleton event listeners. This may cause problems if the event listener has transient or scoped dependencies."
  },
  "devdoc/concepts/localization.html": {
    "href": "devdoc/concepts/localization.html",
    "title": "Localization | OpenMod Docs",
    "keywords": "Localization Localization allows users to customize and translate your plugins messages. This is achieved through the translations.yaml file and the IStringLocalizer service. Warning The <RootNamespace> and <AssemblyName> properties in the plugins .csproj file must be equal, otherwise the IStringLocalizer service will not work. Adding the translations.yaml Create a new file called \"translations.yaml\" inside your project's root directory. After that, add the following to your .csproj file: <ItemGroup> <EmbeddedResource Include=\"translations.yaml\" /> </ItemGroup> Note If you created your plugin project using one of the templates, the translations.yaml file will be already set up. Using IStringLocalizer for localization Assume you want to localize the following command: [Command(\"awesome\")] public class AwesomeCommand : Command { public AwesomeCommand(IServiceProvider serviceProvider) : base(serviceProvider) { } public async Task OnExecuteAsync() { var amount = Context.Parameters.Get<int>(0); await PrintAsync($\"{Actor.DisplayName} is {amount}x awesome!\"); } } Adjust the command to use the IStringLocalizer service: [Command(\"awesome\")] public class AwesomeCommand : Command { private readonly IStringLocalizer m_StringLocalizer; public AwesomeCommand( IStringLocalizer stringLocalizer, // Injects the IStringLocalizer service IServiceProvider serviceProvider) : base(serviceProvider) { m_StringLocalizer = stringLocalizer; } public async Task OnExecuteAsync() { var count = Context.Parameters.Get<int>(0); // Prints the localized messages. await PrintAsync(m_StringLocalizer[\"commands:awesome\", new { Actor = Actor, Amount = amount }]); } } commands:awesome defines the key for the translation. The IStringLocalizer services uses the key as the path to the value in the yaml file. You can use any valid path as key, such as messages:awesome , just awesome . new { Actor = Actor, Amount = amount } sets the arguments for the message. Add the translation to the translations.yaml : commands: awesome: \"{Actor.DisplayName} is {Amount}x awesome!\" Notice how we can access the properties of the Actor parameter by calling Actor.DisplayName . The IStringLocalizer uses SmartFormat.NET for parsing arguments. See the SmartFormat.NET wiki for more information."
  },
  "devdoc/concepts/logging.html": {
    "href": "devdoc/concepts/logging.html",
    "title": "Logging | OpenMod Docs",
    "keywords": "Logging OpenMod uses the Microsoft.Extensions.Logging package for logging abstractions and Serilog as the logging implementation for it. For more, check out the ILogger Interface documentation on docs.microsoft.com . You can get a logger instance by injecting it: public class MyPlugin : OpenModUniversalPlugin { private readonly ILogger<MyPlugin> m_Logger; public MyPlugin(ILogger<MyPlugin> logger, IServiceProvider serviceProvider) : base(serviceProvider) { m_Logger = logger; m_Logger.LogInformation(\"Hello world!\"); } } The generic part ( T in ILogger<T> ) must be the class that is using the logger. Implementing your own logger To implement your own logger, you must implement the ILoggerFactory and ILogger<> services. After that you must register them via a ServiceConfigurator : public class ServiceConfigurator : IServiceConfigurator { public void ConfigureServices(IOpenModStartupContext openModStartupContext, IServiceCollection serviceCollection) { serviceCollection.AddSingleton<ILoggerFactory, MyLoggerFactory>(); serviceCollection.AddTransient(typeof(ILogger<>), typeof(MyLogger<>)(); // must be transient } } Warning Custom logger are used after OpenMod has built the IoC container. Early boot messages will not show on custom loggers."
  },
  "devdoc/concepts/permissions.html": {
    "href": "devdoc/concepts/permissions.html",
    "title": "Permissions | OpenMod Docs",
    "keywords": "Permissions Permissions allow defining which actions a user is permitted to execute and which they are not. You can use the IPermissionChecker service to check if a user has specific permissions: // read the event documentation for more information about event listeners public class UserConnectBroadcaster : IEventListener<UserConnectedEvent> { private readonly IPermissionChecker m_PermissionChecker; private readonly IUserManager m_UserManager; public UserConnectEventListener( IPermissionChecker permissionChecker, IUserManager userManager) { m_PermissionChecker = permissionChecker; m_UserManager = userManager; } public async Task HandleEventAsync(object sender, UserConnectedEvent @event) { var user = @event.User; if(await m_PermissionChecker.CheckPermissionAsync(user, \"announce.join\") == PermissionGrantResult.Grant) { await m_UserManager.BroadcastAsync(user.Type, $\"{user.DisplayName} has joined.\"); } } } Let's have a closer look at CheckPermissionAsync . CheckPermissionAsync returns PermissionGrantResult , which is an enum with the following members: Default - The permission is neither explicitly granted nor explicitly denied Grant - The permission was explicitly granted Deny - The permission was explicitly denied Usually you want to check if the result equals to PermissionGrantResult.Grant to permit an action. This means that if no explicit permission is set, the action will be denied by default. If you want to execute an action unless it is explicitly denied, use CheckPermissionAsync(..) != PermissionGrantResult.Deny instead. Register your own permissions Plugins that use custom permissions need to be registered before being checked, if they are not registered when you check them you will get an exception. To register your permission you need to use IPermissionRegistry service and follow the example: public class MyPlugin : OpenModUniversalPlugin { private readonly IPermissionRegistry m_PermissionRegistry; public MyPlugin(IPermissionRegistry permissionRegistry) { m_PermissionRegistry = permissionRegistry; } public async Task OnLoadAsync() { m_PermissionRegistry.RegisterPermission(this, \"example.permission\", \"This is a example description for my example permission\"); return Task.CompletedTask; } } In the example we registered the permission as example.permission but it will be MyPlugin:example.permission to check. Note You should always register your permissions at plugin load. In case of command related permission there is a better way to register them, please check commands . Adding your own permission store You can add your own permissions store (e.g. to store permissions in MySQL): Implement the IPermissionStore interface and register it via a ServiceConfigurator : public class ServiceConfigurator : IServiceConfigurator { public void ConfigureServices(IOpenModStartupContext openModStartupContext, IServiceCollection serviceCollection) { serviceCollection.Configure<PermissionCheckerOptions>(options => { options.AddPermissionSource<YourPermissionStore>(); }); } } Override permission checks Sometimes you may want to check yourself if an actor has a permission. Implement your IPermissionCheckSource register it via a ServiceConfigurator : public class ServiceConfigurator : IServiceConfigurator { public void ConfigureServices(IOpenModStartupContext openModStartupContext, IServiceCollection serviceCollection) { serviceCollection.Configure<PermissionCheckerOptions>(options => { options.AddPermissionCheckSource<YourPermissionCheckSource>(); }); } } The following example will grant all permissions to Unturned admins: public class UnturnedAdminPermissionCheckProvider : IPermissionCheckProvider { public bool SupportsActor(IPermissionActor actor) { /* only apply to unturned admins */ return actor is UnturnedUser user && user.SteamPlayer.isAdmin; } public Task<PermissionGrantResult> CheckPermissionAsync(IPermissionActor actor, string permission) { /* grant any permission */ return Task.FromResult(PermissionGrantResult.Grant); } }"
  },
  "devdoc/concepts/persistence.html": {
    "href": "devdoc/concepts/persistence.html",
    "title": "Persistence | OpenMod Docs",
    "keywords": "Persistence The IDataStore service provides a way of saving and loading persistent data. The default data store uses yaml files for serialization. Reading and writing data Assume you want to save and load the following class: [Serializable] public class PlayersData { public List<string> OwnerNames { get; set; } } public class MyPlugin : OpenModUniversalPlugin { // Defines the key for the data. The default data store uses the key as the file name for the yaml file. // In this case, the file will be named owners.data.yaml public const string OwnersKey = \"owners\"; private readonly IDataStore m_DataStore; public MyPlugin(IDataStore dataStore, IServiceProvider serviceProvider) : base(serviceProvider) { m_DataStore = dataStore; } public async Task OnLoadAsync() { // first check if the data exists and create it if it does not exist if(!await m_DataStore.ExistsAsync(OwnersKey)) { await SeedData(); } var data = await m_DataStore.LoadAsync<PlayersData>(OwnersKey); // do something with data await m_DataStore.SaveAsync<PlayersData>(OwnersKey, data); } private async Task SeedData() { // create default data await m_DataStore.SaveAsync(OwnersKey, new PlayersData { OwnerNames = new List<string> { \"Trojaner\" } }); } } Change watchers You can use change watchers to automatically reload data when data for a key has changed (e.g. if a user has edited the file manually): var fileChangeWatcher = m_DataStore.AddChangeWatcher(OwnersKey, this, OnOwnersChanged); public void OnOwnersChanged() { // Do something, e.g. read data with LoadAsync again. } You can use fileChangeWatcher.Dispose() to stop listening. Note Calls to IDataStore.SaveAsync will not trigger change watchers."
  },
  "devdoc/concepts/scheduling.html": {
    "href": "devdoc/concepts/scheduling.html",
    "title": "Scheduling Tasks | OpenMod Docs",
    "keywords": "Scheduling Tasks OpenMod provides the AsyncHelper.Schedule method for fire-and-forget tasks. It will enqueue the given task on a thread pool. This can be used to run tasks delayed or periodically. Universal The following examples work on all OpenMod platforms. Running a delayed Task You can delay a Task like this: public async Task MyTask() { m_Logger.LogInformation(\"Waiting 5 seconds...\"); await Task.Delay(TimeSpan.FromSeconds(5)); m_Logger.LogInformation(\"Done!\"); } Then call AsyncHelper.Schedule like this: AsyncHelper.Schedule(\"My Task\", () => MyTask()); Running a Task periodically If you want to run a Task periodically, all you have to do is to surround your task with a while loop: public async Task MyPeriodicTask(IOpenModPlugin myPlugin) { while(myPlugin.IsComponentAlive) // ensure this task runs only as long as the plugin is loaded { m_Logger.LogInformation(\"Waiting 5 seconds...\"); await Task.Delay(TimeSpan.FromSeconds(5)); m_Logger.LogInformation(\"Done!\"); } } Then call AsyncHelper.Schedule like earlier, but passing the plugin instance: AsyncHelper.Schedule(\"My Task\", () => MyPeriodicTask(myPlugin)); Caution Do not keep your tasks running after your plugin gets unloaded. Make sure your tasks stop running when your plugin unloads. You can use your plugins IsComponentAlive property or cancellation tokens to do this. Caution Do not use Thread.Sleep or similar blocking methods like non-async I/O methods in Tasks. Such methods will block the worker thread and prevent other tasks from running. Always use the async alternatives instead, such as Task.Delay instead of Thread.Sleep or Stream.ReadAsync instead of Stream.Read. UnityEngine The following examples only work with games using the UnityEngine such as Unturned. Running a Task on every Update Like in the Running a Task Periodically example, we will use a while loop again. Notice how the return type has changed to UniTask and how the call to the AsyncHelper.Schedule method has changed. public async UniTask MyUpdateTask(IOpenModPlugin myPlugin) { await UniTask.SwitchToMainThread(); // ensure this runs on main thread first. int i = 0; while(myPlugin.IsComponentAlive) // ensure this task runs only as long as the plugin is loaded { await UniTask.DelayFrame(1, PlayerLoopTiming.Update); m_Logger.LogInformation($\"Frame update: {++i}\"); } } Let's break this down. Inspect the following line: await UniTask.DelayFrame(1, PlayerLoopTiming.Update) The first parameter, the 1, defines how many frames to wait. So this example will always wait for one frame and hence runs on every frame update. The second parameter, PlayerLoopTiming.Update, sets which type of update it should wait for. In this example, it is a normal frame update. You can use other update types such as FixedUpdate too. The following update types are available: EarlyUpdate LastEarlyUpdate FixedUpdate LastFixedUpdate PreUpdate LastPreUpdate Update LastUpdate PreLateUpdate LastPreLateUpdate PostLateUpdate LastPostLateUpdate To schedule your task, call the AsyncHelper like this: AsyncHelper.Schedule(\"My Task\", () => MyUpdateTask(myPlugin).AsTask() /* for UniTask, you will have to use .AsTask() */);"
  },
  "devdoc/concepts/services.html": {
    "href": "devdoc/concepts/services.html",
    "title": "Services and dependency injection | OpenMod Docs",
    "keywords": "Services and dependency injection OpenMod, like other modern .NET based frameworks, uses the dependency injection pattern . This guide aims to simplify it and explain what it means for plugin developers using OpenMod. Plugins, commands, event listeners, and services can automatically get references to plugins or any other services provided by OpenMod just by adding their interfaces to the constructor. See the example below. Dependency injection example Let's see this in action: This is how your plugin looks like normally: public class MyPlugin(IServiceProvider serviceProvider) : base(serviceProvider) { } If you wanted to access the IStringLocalizer service, you could it like this: public class MyPlugin(IStringLocalizer stringLocalizer, IServiceProvider serviceProvider) : base(serviceProvider) { // do something with stringLocalizer } Assume you want to access your plugins instance and configuration from a command. Here is how you could do it: private readonly IConfiguration m_Configuration; private readonly MyPlugin m_MyPlugin; public EchoCommand( IServiceProvider serviceProvider, MyPlugin myPlugin, IConfiguration configuration) : base(serviceProvider) m_MyPlugin = myPlugin; m_Configuration = configuration; } Registering your own services There are two ways to register a service: Registering by using the [Service] attribute for the interface and [PluginServiceImplementation] for the concrete class. Registering manually by implementing the IServiceConfigurator or IContainerConfigurator interfaces. Classes which implement these interfaces are automatically instantiated when the IoC container is configured and can be used to configure the container directly. You can implement the IDisposable or the IAsyncDisposable interface for cleaning up resources when OpenMod or your plugin unloads. Here is an example service to clear vehicles: [Service] public interface IVehicleClearingService { Task ClearVehiclesAsync(); } [PluginServiceImplementation(Lifetime = ServiceLifetime.Transient)] public class VehicleClearingService : IVehicleClearingService, IAsyncDisposable { private readonly IStringLocalizer m_StringLocalizer; private readonly ILogger<VehicleClearingService> m_Logger; public VehicleClearingService( ILogger<VehicleClearingService> logger, IPluginAccessor<VehicleClearerPlugin> pluginAccessor) { VehicleClearerPlugin plugin = pluginAccessor.Instance; // Services live in the global OpenMod scope, which does not provide an IStringLocalizer. // Since IStringLocalizer does not exist in this scope, we have to use the plugins scope. m_StringLocalizer = plugin.Lifetime.Resolve<IStringLocalizer>(); m_Logger = logger; } public async Task ClearVehiclesAsync() { m_Logger.LogInformation(m_StringLocalizer[\"messages:clearing_vehicles\"]); // translation is read from the plugins translation // call game apis to clear vehicles... } // Service dispose methods are called on OpenMod reload or server shutdown public async ValueTask DisposeAsync() { await ClearVehiclesAsync(); // ensure vehicles get cleared on reload or shutdown } } You can now access this service by injecting IVehicleClearingService in e.g. commands, event listeners, your plugin class, or other services. Service lifetime You might have noticed that the VehicleClearingService's Lifetime was set to Lifetime = ServiceLifetime.Transient . The following lifetimes are available: Transient - The service gets recreated every time it gets resolved. Every resolution and injection of this service will have a unique instance. This is the default lifetime. Scoped - The service will share the same instance across the same command or event. Singleton - The service will only have one instance that lives as long as the OpenMod IoC container does (until OpenMod gets reloaded or the server shuts down). Warning Avoid making singleton services. This may cause problems if your service has transient or scoped dependencies. Service scope Services can have to scopes: plugin scope and global scope. Plugin scope services only used within the defining plugin itself and can not be accessed by other plugins. They can also not override global scope services for OpenMod itself or for other plugins. Plugin scope services are implemented using the [PluginServiceImplementation] attribute. Plugin scope services are constructed when your plugin loads and are disposed when your plugin shuts down. Global scope services are used for all plugins and OpenMod itself. Global scope services are implemented using the [ServiceImplementation] attribute. If you want to replace e.g. the IStringLocalizer for everyone, you need to implement it in the global scope. Global scope services are disposed when OpenMod reloads or the server shuts down. Global scope services are constructed when your OpenMod loads and are disposed your OpenMod shuts down. Warning Avoid depending on your plugin when implementing global scope services. Only create dependencies to other global scope services. As global scope services have a different lifecycle than plugins, you can not inject your plugin instance. A workaround is to inject Lazy<IPluginAccessor<YourPlugin>> and resolve at a later time. Keep in mind that even if your plugin fails to load or unloads, your global scope service will still stay alive. Built-in OpenMod services Service Description IConfiguration Provides values from configuration files ICommandContextBuilder Builds command contexts ICommandExecutor Execute command ICommandStore Provides command registrations ICommandPermissionBuilder Defines a command's permission ICommandParameterResolver Parses command parameters from strings ICurrentCommandContextAccessor Accesses the current command context IDataStore Serializes and deserializes persistent data IDataStoreFactory Creates data stores IEventBus Subscribes to events and emits them IJobScheduler Schedules and manages jobs ILogger<T> Provides logging for the T class ILoggerFactory Creaters loggers IOpenModStringLocalizer Localizes messages from OpenMod's own translation file IOpenModDataStoreAccessor Accesses OpenMod's own data store IOpenModHost OpenMod host platform abstractions IPermissionChecker Checks permissions IPermissionRoleStore Stores permission roles IPermissionRegistry Registers and stores permissions IPluginAccessor<TPlugin> Accesses a plugins instance IPluginActivator Loads and activates plugins IRuntime Creates and hosts the OpenMod runtime IStringLocalizer Localizes messages from plugin translation files IUserDataSeeder Seeds user data on first connect IUserDataStore Stores and manages user data IUserManager Manages users"
  },
  "devdoc/events/economy.html": {
    "href": "devdoc/events/economy.html",
    "title": "OpenMod.Extensions.Economy.Abstractions events | OpenMod Docs",
    "keywords": "OpenMod.Extensions.Economy.Abstractions events Event Fired when BalanceUpdatedEvent Balance was added to or removed from a players account"
  },
  "devdoc/events/openmod-core.html": {
    "href": "devdoc/events/openmod-core.html",
    "title": "OpenMod.Core events | OpenMod Docs",
    "keywords": "OpenMod.Core events Event Fired when UserConnectingEvent A user attempts to connect to the server UserConnectedEvent A user has connected to the server UserDisconnectedEvent A user has disconnected from the server CommandExecutingEvent A command is going to be executed CommandExecutedEvent A command has been executed OpenModInitializedEvent OpenMod has been initialized OpenModShutdownEvent OpenMod is shutting down PluginActivatingEvent A plugin is being activated PluginContainerConfiguringEvent A plugins IoC container is getting created PluginConfigurationChangedEvent A plugins configuration has changed PluginLoadEvent A plugin is loading PluginLoadedEvent A plugin has been loaded PluginUnloadEvent A plugin is unloading PluginUnloadedEvent A plugin has been unloaded"
  },
  "devdoc/events/universal-game.html": {
    "href": "devdoc/events/universal-game.html",
    "title": "Game events | OpenMod Docs",
    "keywords": "Game events These events are provided by the OpenMod.Extensions.Games.Abstractions package and are not part of the core OpenMod API. They may not be available on all supported OpenMod platforms. Event Fired when Cancellable Namespace IPlayerChattingEvent Before a player chats Yes OpenMod.Extensions.Games.Abstractions.Players IPlayerSpawnedEvent After a player spawns No OpenMod.Extensions.Games.Abstractions.Players IPlayerDamagingEvent Before a player is damaged Yes OpenMod.Extensions.Games.Abstractions.Players IPlayerDamagedEvent After a player is damaged No OpenMod.Extensions.Games.Abstractions.Players IPlayerDyingEvent Before a player takes a fatal amount of damage Yes OpenMod.Extensions.Games.Abstractions.Players IPlayerDeadEvent After a player dies No OpenMod.Extensions.Games.Abstractions.Players IPlayerEnteringVehicleEvent Before a player enters a vehicle Yes OpenMod.Extensions.Games.Abstractions.Players IPlayerEnteredVehicleEvent After a player enter a vehicle No OpenMod.Extensions.Games.Abstractions.Players IPlayerExitingVehicleEvent Before a player exits a vehicle Yes OpenMod.Extensions.Games.Abstractions.Players IPlayerExitedVehicleEvent After a player exit a vehicle No OpenMod.Extensions.Games.Abstractions.Players IPlayerItemEquippingEvent Before a player equips an item Yes OpenMod.Extensions.Games.Abstractions.Players IPlayerItemEquippedEvent After a player equips an item No OpenMod.Extensions.Games.Abstractions.Players IPlayerUnequippingEvent Before a player unequips an item Yes OpenMod.Extensions.Games.Abstractions.Players IPlayerUnequippedEvent After a player unequips an item No OpenMod.Extensions.Games.Abstractions.Players"
  },
  "devdoc/events/unturned.html": {
    "href": "devdoc/events/unturned.html",
    "title": "Unturned events | OpenMod Docs",
    "keywords": "Unturned events Animal events These events are stored within the OpenMod.Unturned.Animals.Events namespace. Event Fired when Cancellable UnturnedAnimalSpawnedEvent After an animal spawns (is revived or new instance added) No UnturnedAnimalAddedEvent After a new animal instance is added (triggers spawned event) No UnturnedAnimalRevivedEvent After an animal is revived (triggers spawned event) No UnturnedAnimalAlertingEvent Before an animal is alerted Yes UnturnedAnimalAttackingEvent Before an animal targets a player/point for attack (triggers alerting event) Yes UnturnedAnimalAttackingPlayerEvent Before an animal targets a player for attack (triggers attacking event) Yes UnturnedAnimalAttackingPointEvent Before an animal targets a point for attack (triggers attacking event) Yes UnturnedAnimalFleeingEvent Before an animal flees Yes UnturnedAnimalDamagingEvent Before an animal is damaged Yes UnturnedAnimalDyingEvent Before an animal takes a fatal amount of damage Yes UnturnedAnimalDeadEvent After an animal dies No Building events These events are stored within the OpenMod.Unturned.Building.Events namespace. Barricade and structure events derive from their buildable counterparts. Whenever a barricade or structure event is emitted, the buildable version will be emitted as well. Event Fired when Cancellable UnturnedBuildableDeployedEvent After a buildable is deployed No UnturnedBuildableSalvagingEvent Before a buildable is salvaged Yes UnturnedBuildableDamagingEvent Before a buildable is damaged Yes UnturnedBuildableDestroyingEvent Before a buildable takes enough damage to be destroyed Yes UnturnedBuildableDestroyedEvent After a buildable is destroyed No IUnturnedBarricadeEvent Any barricade event is fired UnturnedBarricadeDeployedEvent After a barricade is deployed No UnturnedBarricadeSalvagingEvent Before a barricade is salvaged Yes UnturnedBarricadeDamagingEvent Before a barricade is damaged Yes UnturnedBarricadeDestroyingEvent Before a barricade takes enough damage to be destroyed Yes UnturnedBarricadeDestroyedEvent After a barricade is destroyed No IUnturnedStructureEvent Any structure event is fired UnturnedStructureDeployedEvent After a structure is deployed No UnturnedStructureSalvagingEvent Before a structure is salvaged Yes UnturnedStructureDamagingEvent Before a structure is damaged Yes UnturnedStructureDestroyingEvent Before a structure takes enough damage to be destroyed Yes Environment events These events are stored within the OpenMod.Unturned.Environment.Events namespace. Event Fired when Cancellable UnturnedDayNightUpdatedEvent After the day/night cycle updates No UnturnedWeatherUpdatedEvent After the weather updates No Player events Bans These events are stored within the OpenMod.Unturned.Players.Bans.Events namespace. Event Fired when Cancellable UnturnedPlayerBanningEvent Before a player is banned Yes UnturnedPlayerBannedEvent After a player is banned No UnturnedPlayerUnbanningEvent Before a player is unbanned Yes UnturnedPlayerUnbannedEvent After a player is unbanned No UnturnedPlayerCheckingBanEvent Before a player's ban status is checked Yes Chat These events are stored within the OpenMod.Unturned.Players.Chat.Events namespace. Event Fired when Cancellable UnturnedPlayerChattingEvent Before a player chats Yes UnturnedServerSendingMessageEvent Before the server displays a chat message to a player No, but there modifiable fields Clothing These events are stored within the OpenMod.Unturned.Players.Clothing.Events namespace. Event Fired when Cancellable UnturnedPlayerClothingEquippingEvent Before any piece of clothing is equipped Yes UnturnedPlayerClothingEquippedEvent After any piece of clothing is equipped No UnturnedPlayerClothingUnequippingEvent Before any piece of clothing is unequipped Yes UnturnedPlayerClothingUnequippedEvent After any piece of clothing is unequipped No Connections These events are stored within the OpenMod.Unturned.Players.Connections.Events namespace. Event Fired when Cancellable UnturnedPlayerConnectedEvent After a player connects No UnturnedPlayerDisconnectedEvent After a player disconnects No Crafting These events are stored within the OpenMod.Unturned.Players.Crafting.Events namespace. Event Fired when Cancellable UnturnedPlayerCraftingEvent Before a player crafts Yes Equipment These events are stored within the OpenMod.Unturned.Players.Equipment.Events namespace. Event Fired when Cancellable UnturnedPlayerItemEquippingEvent Before a player equips anything Yes UnturnedPlayerItemEquippedEvent After a player equips anything No UnturnedPlayerItemUnequippingEvent Before a player unequips anything Yes UnturnedPlayerItemUnequippedEvent After a player unequips anything No Inventory These events are stored within the OpenMod.Unturned.Players.Inventory.Events namespace. Event Fired when Cancellable UnturnedPlayerOpenedStorageEvent After a player opens a storage No UnturnedPlayerClosedStorageEvent After a player closes a storage No UnturnedPlayerTakingItemEvent Before a player takes an item from the ground Yes UnturnedPlayerDroppedItemEvent After a player drops an item No UnturnedPlayerInventoryResizedEvent After a player's inventory is resized No UnturnedPlayerInventoryUpdatedEvent After a player's inventory updates No UnturnedPlayerItemAddedEvent After an item is added to a player's inventory No UnturnedPlayerItemRemovedEvent After an item is removed from a player's inventory No UnturnedPlayerItemUpdatedEvent After an item is updated in a player's inventory No Life These events are stored within the OpenMod.Unturned.Players.Life.Events namespace. Event Fired when Cancellable UnturnedPlayerDamagingEvent Before a player is damaged Yes UnturnedPlayerDamagedEvent After a player is damaged No UnturnedPlayerDyingEvent Before a player takes a fatal amount of damage Yes UnturnedPlayerDeadEvent After a player dies No UnturnedPlayerSpawnedEvent After a player spawns (connects or is revived) No UnturnedPlayerRevivedEvent After a player is revived No Movement These events are stored within the OpenMod.Unturned.Players.Movement.Events namespace. Event Fired when Cancellable UnturnedPlayerGestureUpdatedEvent After a player's gesture updates No UnturnedPlayerStanceUpdatedEvent After a player's stance updates No UnturnedPlayerTeleportingEvent Before a player teleports Yes UnturnedPlayerSafetyUpdatedEvent After a player safezone updated No Skills These events are stored within the OpenMod.Unturned.Players.Skills.Events namespace. Event Fired when Cancellable UnturnedPlayerExperienceUpdatedEvent After a player's experience updates No UnturnedPlayerReputationUpdatedEvent After a player's reputation updates No Stats These events are stored within the OpenMod.Unturned.Players.Stats.Events namespace. Event Fired when Cancellable UnturnedPlayerStatUpdatedEvent After any of a player's stat is updated No UnturnedPlayerBleedingUpdatedEvent After a player's bleeding stat is updated No UnturnedPlayerBrokenUpdatedEvent After a player's broken stat is updated No UnturnedPlayerFoodUpdatedEvent After a player's food stat is updated No UnturnedPlayerHealthUpdatedEvent After a player's health stat is updated No UnturnedPlayerLifeUpdatedEvent After a player's living state is updated No UnturnedPlayerOxygenUpdatedEvent After a player's oxygen stat is updated No UnturnedPlayerStaminaUpdatedEvent After a player's stamina is updated No UnturnedPlayerTemperatureUpdatedEvent After a player's temperature stat is updated No UnturnedPlayerVirusUpdatedEvent After a player's virus stat is updated No UnturnedPlayerVisionUpdatedEvent After a player's vision is updated No UnturnedPlayerWaterUpdatedEvent After a player's water stat is updated No Useables These events are stored within the OpenMod.Unturned.Players.Useables.Events namespace. Event Fired when Cancellable UnturnedPlayerPerformingAidEvent Before a player performs aid on another player Yes UI These events are stored within the OpenMod.Unturned.Players.UI.Events namespace. Event Fired when Cancellable UnturnedPlayerButtonClickedEvent After a player has clicked a UI button No UnturnedPlayerTextInputtedEvent After a player has inputted a text into a textbox No Voice These events are stored within the OpenMod.Unturned.Players.Voice.Events namespace. Event Fired when Cancellable UnturnedPlayerTalkingUpdatedEvent After a player has started or stoped talking No UnturnedPlayerRelayingVoiceEvent Before a player has started talking Yes"
  },
  "devdoc/guides/getting-started.html": {
    "href": "devdoc/guides/getting-started.html",
    "title": "Making your first plugin | OpenMod Docs",
    "keywords": "Making your first plugin In this guide we will cover: Setting up the development environment. Creating a plugin project. Writing a basic plugin. Installing the .NET 5 SDK Install the latest .NET 5 SDK from here (you should get a dotnet-sdk-xxxxx.exe ). Installing the IDE After setting up the .NET Core SDK, you will need an IDE. The IDE provides you with the environment and tools for coding plugins. Visual Studio Code (recommended) You can use Visual Studio Code for developing OpenMod plugins. It supports Linux, macOS, and Windows. Visual Studio Code is the recommended solution for small to mid-sized projects. Visual Studio If you want a full IDE experience, download and install Visual Studio Community Edition . Visual Studio is only supported on the Windows platform. When the installer starts, select \"Visual Studio 2019 Community Edition\" (or newer, if available). After that select the \".NET Core cross-platform development\" and the \".NET Desktop Development\" options as shown below. Rider If you are using Linux and do not want to use Visual Studio Code, you can install Rider . Although it is a commercial product, it can be obtained for free when applying for a Jetbrains Student License. Like Visual Studio, it provides a full IDE experience and has similar capabilities. Generating the Plugin Project Start cmd or Powershell and navigate to the folder where you want to create the plugin project. E.g. ([optional]) mkdir C:\\Users\\<Username>\\source\\repos\\MyPlugin\\ cd C:\\Users\\<Username>\\source\\repos\\MyPlugin\\ After that, install the OpenMod Plugin Templates for the .NET Core SDK: dotnet new install OpenMod.Templates::* Finally, you can generate the plugin project with this command: dotnet new openmod-universal-plugin --PluginId <PluginId> [--FullPluginName <FullPluginName>] or, if you want to develop a plugin for Unturned: dotnet new openmod-unturned-plugin --PluginId <PluginId> [--FullPluginName <FullPluginName>] PluginId must be a unique identifier for your plugin. By convention, it is the same as the NuGet package ID. FullPluginName is optional and will set how your plugin should be displayed to the user. To get the full help for the command, you can use the --help switch like this: dotnet new openmod-universal-plugin --help or, for Unturned: dotnet new openmod-unturned-plugin --help Example If you want to create an Unturned plugin project, you can use the following command: dotnet new openmod-unturned-plugin --FullPluginName \"My Unturned Plugin\" --PluginId \"MyName.MyUnturnedPlugin\" Adding a basic command Now that you've set up your plugin, open the .cs file with the IDE you have installed earlier. In this example we are creating an echo command. Create a new class (how you do this depends on your IDE). By convention command classes are prefixed with \"Command\" so call it CommandEcho. Since this will be an universal command that works on all platforms, we will make it inherit from Command . If this command would be only for Unturned, we would inherit from UnturnedCommand instead. This is what your class should look like: public class CommandEcho : Command { } Let's go ahead and fix the error by implementing the method ExecuteAsync() and a constructor. For now, do not worry about what async is. This is going to be the method that executes what you want your command to perform. So now, you will be wanting to know how you can access the in-game data and methods. You can access the command context without the parameters, by simply using Context (this comes from using the Command abstract class). This will allow you to access the Player, from now it is quite easy, let's see a finished product of this command. [Command(\"echo\")] [CommandDescription(\"Echo a message\")] [CommandSyntax(\"<message>\")] public class CommandEcho : Command { public CommandEcho(IServiceProvider serviceProvider) : base(serviceProvider) { } protected override async Task OnExecuteAsync() { // This gets us the text that the user wants to echo. string text = string.Join(\" \", Context.Parameters); await Context.Actor.PrintMessageAsync(text); } } OnExecuteAsync is getting called by the command executor and provides you with the commands \"context\". At the top of the class, you will see we are setting our command metadata using attributes. For more, visit the commands documentation . Best Practices Caution Do not use static plugin instances, instead always pass instances by reference. OpenMod dynamically creates and destroys your plugin instances, which would result in wrong instances being used after reloads. Here is a bad example: public static MyPlugin Instance { get; set; } public class MyCommand : Command { public MyCommand(IServiceProvider serviceProvider) : base(serviceProvider) { } public async Task OnExecuteAsync() { MyPlugin.Instance.DoSomething(); } } Use this instead: public class MyCommand : Command { private readonly MyPlugin m_MyPlugin; public MyCommand( MyPlugin myPlugin, IServiceProvider serviceProvider) : base(serviceProvider) { m_MyPlugin = myPlugin; } public async Task OnExecuteAsync() { m_MyPlugin.DoSomething(); } }"
  },
  "devdoc/guides/publishing.html": {
    "href": "devdoc/guides/publishing.html",
    "title": "Publishing to nuget.org | OpenMod Docs",
    "keywords": "Publishing to nuget.org If you want your plugin to be installable from openmod install , you will need to publish it to nuget.org. You will need a Microsoft account for nuget.org . Preparing your plugin for NuGet Step 1: Add the following to your plugins .csproj: <PropertyGroup> <PackageId>Your PackageId</PackageId> <!-- must be unique, should be same as your plugin ID --> <PackageDescription>Your plugin description</PackageDescription> <PackageLicenseExpression>Your License</PackageLicenseExpression> <!-- see https://spdx.org/licenses/ --> <PackageAuthor>Your name</PackageAuthor> <PackageTags>openmod openmod-plugin XXX</PackageTags> <!-- XXX can be unturned, unityengine or universal depending on your plugin --> <Version>x.x.x</Version> <!-- Your plugins version. Must be semversion, see https://semver.org/ --> <GeneratePackageOnBuild>true</GeneratePackageOnBuild> <GenerateNugetPackage>true</GenerateNugetPackage> </PropertyGroup> Step 2: Sign in to nuget.org . Step 3: Click on your username, select API Keys. Step 4: Select \"Create\". Add a name, select the Push scope and add * as Glob pattern, then select create. Step 5: Copy your newly created key. Save your key securely as you cannot retrieve it again. Uploading the plugin Step 1: Navigate to your plugins folder. Execute the following command: dotnet build --configuration Release . Step 2: Go to bin/Release/ and push to NuGet: dotnet push <yourpackageid.x.x.x.nupkg> -n -k <your nuget.org key> -s https://api.nuget.org/v3/index.json You can now install your plugin with openmod install <YourPackageId> . Note You may get the \"PackageOrVersionNotFound\" error after trying to install your plugin. This means your upload has not been verified or indexed yet. It may take up to an hour until uploads to nuget.org are verified and indexed. For more, read the Publishing packages and Create and publish a NuGet package (dotnet CLI) pages on docs.microsoft.com. Plugin versioning Like OpenMod, NuGet also uses Semantic Versioning 2.0.0. Here is a short summary on how versioning works: Semantic Versioning follow the following template: Major.Minor.Patch . First Major is compared, then Minor and finally Patch. So 3.0.1 > 2.1.5 > 1.45.8 > 0.999.0 > 0.99.0 . Your plugin starts with version 0.1.0 and increments the \"Minor\" version as it progresses towards release (e.g. 0.2.0 ). When your plugin is ready for release, version 1.0.0 is used. For bug fixes, increase the \"Patch\" version (e.g. 1.0.1 ). For new feature additions, increase the \"Minor\" version (e.g. 1.1.0 ). For breaking changes (e.g. public API changes or breaking configs, etc.), increment the Major version (e.g. 2.0.0 ). You can also use -rc1, -beta, -alpha, -beta2 etc. suffixes to indicate a pre release version (e.g. 2.0.0-rc1 ) In this case version comparison is done alphabetically, e.g. 1.0.0-rc2 is newer than 1.0.0-rc1 and 1.0.0-beta , but 1.0.0 is the newest because it is not a pre release version. You can attach any arbitary information, such as the commit hash, by using the + suffix (e.g. 1.0.0+525ffaa or 1.0.0-rc1+525ffaa ). Everything after the + is ignored and not used for version comparison. The following are valid semantic version examples: 0.0.1 1.0.9 1.45.6 1.0.0-alpha 1.0.0-beta1 1.3.5-rc1 1.3.5-rc2+somearbitaryinformation The following are not valid : 1.0.0.0 v1.0.0 For more information, check out the semantic versioning website . Publishing with GitHub workflows You can use GitHub workflows to publish to NuGet with one click. The following assumes that your plugins source code is in the YOURPLUGIN folder under your repositories root directory. Create the following file in your repository's .github/workflows folder. name: Deployment on: workflow_dispatch: inputs: version: description: 'Plugin Version (SemVer: https://semver.org)' required: true jobs: deploy: name: \"NuGet Deployment\" runs-on: ubuntu-latest steps: - uses: actions/checkout@v2 name: Checkout Repository with: fetch-depth: 0 - name: Setup .NET uses: actions/setup-dotnet@v1 with: dotnet-version: 5.0.x - name: Install dependencies run: dotnet restore - name: Update version run: \"sed -i \\\"s#<Version>0.0.0</Version>#<Version>${{ github.event.inputs.version }}</Version>#\\\" YOURPLUGIN/YOURPLUGIN.csproj\" - name: Update package version run: \"sed -i \\\"s#<PackageVersion>0.0.0</PackageVersion>#<PackageVersion>${{ github.event.inputs.version }}</PackageVersion>#\\\" YOURPLUGIN/YOURPLUGIN.csproj\" - name: Update informational version run: \"sed -i \\\"s#<InformationalVersion>0.0.0</InformationalVersion>#<InformationalVersion>${{ github.event.inputs.version }}</InformationalVersion>#\\\" YOURPLUGIN/YOURPLUGIN.csproj\" - name: Build run: dotnet build YOURPLUGIN/YOURPLUGIN.csproj --configuration Release --no-restore - name: Push to NuGet run: dotnet nuget push YOURPLUGIN/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_DEPLOY_KEY }} --source https://api.nuget.org/v3/index.json After that you must edit the <Version>x.x.x</Version> in your .csproj and set it to <Version>0.0.0</Version> . Also add <PackageVersion>0.0.0</PackageVersion> and <InformationalVersion>0.0.0</InformationalVersion> . Finally, to finish setting up the workflow, you must add your NuGet secret: Go to https://github.com/YOURNAME/YOURPLUGIN/settings/secrets Create a new secret Name it \"NUGET_DEPLOY_KEY\" and add your NuGet API Key to it To publish a new version of your plugin, all you have to do is to: Go to your repository on GitHub Click on \"Actions\" Select \"NuGet Deployment\" on the left Click on \"Run workflow\" on the right Enter plugin version and be sure to follow the versioning rules from above, then click \"Run workflow\". Check the workflow log if any error occured. Done, your plugin has been built and uploaded to nuget.org. Here is an example from the NewEssentials plugin made by Kr4ken: It takes about 10-30 minutes for your plugin to be published to nuget.org. After waiting you can use openmod install <YourPluginsPackageId> to install your plugin."
  },
  "devdoc/intro.html": {
    "href": "devdoc/intro.html",
    "title": "OpenMod Developer Documentation | OpenMod Docs",
    "keywords": "OpenMod Developer Documentation Here you can find information about developing OpenMod plugins."
  },
  "index.html": {
    "href": "index.html",
    "title": "OpenMod Documentation | OpenMod Docs",
    "keywords": "OpenMod Documentation Welcome to the OpenMod Documentation. What is OpenMod? OpenMod is a .NET plugin framework. Installing OpenMod If you want to install OpenMod, installation guides for the following platforms are available: Unturned Using OpenMod Visit the user page for information on how OpenMod works and how to use it. Developing Plugins If you want to make plugins for OpenMod, you can get started by reading the Making your first plugin page . Links GitHub Discord .NET Foundation This project is supported by the .NET Foundation ."
  },
  "README.html": {
    "href": "README.html",
    "title": "OpenMod Documentation | OpenMod Docs",
    "keywords": "OpenMod Documentation This directory contains the documentation source files for OpenMod. OpenMod uses docfx for documentation. The compiled documentation is hosted at https://openmod.github.io/openmod-docs/ . License The OpenMod documentation is licensed under the terms of the Creative Commons Attribution 4.0 International (CC BY 4.0) license. See here for more information."
  },
  "userdoc/concepts/configurations.html": {
    "href": "userdoc/concepts/configurations.html",
    "title": "Configuration files | OpenMod Docs",
    "keywords": "Configuration files OpenMod uses YAML for configurations. You can find a quick YAML guide here . Plugin specific configurations are stored in the plugins/<plugin id> directory. Warning Configuration files are currently not updated automatically. If OpenMod or a plugin adds a new field, you will have to add it manually to the yaml file or delete the file so it gets recreated."
  },
  "userdoc/concepts/cooldowns.html": {
    "href": "userdoc/concepts/cooldowns.html",
    "title": "OpenMod cooldowns | OpenMod Docs",
    "keywords": "OpenMod cooldowns Cooldowns add the ability for commands to only be permitted to successfully execute again after a given time span. You can manage cooldowns by editing the data portion of a role in the openmod.roles.yaml file inside the OpenMod directory. Note Changes to the openmod.roles.yaml file are applied instantly. Reloading is not necessary. Configuration The openmod.yaml config file contains one setting regarding cooldowns, cooldowns:reloadPersistence which is set to true . This will enable cooldowns to persist throughout server restarts and OpenMod reloads by writing command execution times to a file for the user. Command cooldowns are configured through the data config of OpenMod roles. The structure of the config is as follows: cooldowns: - command: CommandId cooldown: cooldown time span Note If you're configuring cooldowns for Rocket commands, the command id will be the name found in Commands.config.xml prefixed by Rocket. . For the /heal command, the id would be Rocket.heal . The following example is a modified version of the default openmod.roles.yaml file to apply a cooldown of 30 seconds to the help command. roles: - id: default priority: 0 parents: [] permissions: - OpenMod.Core:commands.help displayName: Default data: cooldowns: - command: OpenMod.Core.Commands.OpenModCommands.CommandHelp cooldown: 30 seconds isAutoAssigned: true - id: vip priority: 1 parents: - default permissions: - SomeKitsPlugin:kits.vip displayName: data: {} isAutoAssigned: false If multiple cooldowns for the same command apply to a user, the cooldown originating from the role with the highest priority will be applied. The cooldown time span follows a format of multiple portions each defining a decimal number and its value. A list of these possible values are: Days - days, day, and d Hours - hours, hour, hrs, hr, h Minutes - minutes, minute, mins, min, m Seconds - seconds, second, secs, sec, s Milliseconds - milliseconds, millisecond, millis, milli, ms All of the following are valid cooldown time spans: 10 days 20 hours 30 minutes 10 days, 20 hours, and 30 minutes 10d 20h 30m 10d20h30m 10.8 days 30 seconds 500 milliseconds Permissions This plugin only contains one permission - OpenMod.Core:cooldowns.immune . This permission makes the inheritor immune to all cooldowns."
  },
  "userdoc/concepts/jobs.html": {
    "href": "userdoc/concepts/jobs.html",
    "title": "OpenMod Jobs | OpenMod Docs",
    "keywords": "OpenMod Jobs Jobs are periodic tasks that execute OpenMod or system commands. The jobs are defined in the autoexec.yaml file. Let's have a look at a job: jobs: # Updates OpenMod every Sunday at 0:00 AM and then restarts. - name: OpenMod Auto Update schedule: '0 0 * * 0' task: openmod_command args: commands: - openmod upgrade - restart enabled: true Let's break this down. Name Sets the name of the job. Must be unique. Schedule Schedule defines when a job will run. There are several ways to do it. One-time schedule A one-time scheduling allows to define the conditions under which a job will be executed. Below are the schedule types that define required conditions. Type Description @startup Executes a job after OpenMod and all plugins have loaded, including reloads. @reboot Executes a job after OpenMod and all plugins have loaded, excluding reloads. @single_exec Executes a job a single time after OpenMod loaded and then removes it from the file. You can also delay execution of one-time scheduled job. Delayed job schedule template should look as further: <schedule type>:<delay> . Here are some examples of delayed job schedule . Example schedule template Description @startup:20 seconds Executes a job 20 seconds after OpenMod and all plugins have loaded, including reloads. @reboot:30 days, 40 minutes, and 50 seconds Executes a job 30 days, 40 minutes and 50 seconds after OpenMod and all plugins have loaded, excluding reloads. @single_exec:10h20m30s Executes a job a single time 10 hours, 20 minutes and 30 seconds after OpenMod has loaded and then removes it from the file. @startup:3.5 days Executes a job 3 days and 12 hours after OpenMod and all plugins have loaded, including reloads. @single_exec:1234.123 milliseconds Executes a job a single time 1234.123 milliseconds after OpenMod has loaded and then removes it from the file. Periodical schedule For periodical scheduling OpenMod uses crontab expressions . It allows to execute a job at fixed intervals, like every minute, every Sunday, every third Monday, etc. Visit https://crontab.guru/ for more information. Here are some example crontab expressions. Expression Description 0 0 * * 0 Every Sunday at 0:00 AM. 0 3 * * * Everyday at 3 AM. */5 * * * * Every 5 minutes. 0 0 1 * * At the first day of every month at 0:00 AM. Task The task to execute. There are 2 built-in tasks. Task type Description openmod_command Executes one or more OpenMod commands. Needs args.commands to be defined. system_command Executes one or more system commands. Needs args.commands to be defined. Plugins can add more task types. Enabled Sets if the job is enabled. Examples Restart everyday at 3 AM: - name: Auto Restart schedule: '0 3 * * *' task: openmod_command args: commands: - restart enabled: true Save every 5 minutes: - name: Save schedule: '*/5 * * * *' task: openmod_command args: commands: - save enabled: true Run wipe.sh on every first day of the month. It works like terminal (Linux) or cmd (Windows), so you can use scripts like .sh or .bat or run programs directly. - name: Wipe schedule: '0 0 1 * *' task: system_command args: commands: - ./wipe.sh enabled: true Migrate economy on startup (will only execute a single time) - name: Economy Migration schedule: '@single_exec' task: openmod_command args: commands: - economy migrate enabled: true Purge packages on every startup (this is not recommended and just an example). - name: Package purge schedule: '@startup' task: openmod_command args: commands: - openmod purge enabled: true Shut the application down 5 minutes and 2 seconds after OpenMod loaded (will only execute a single time) - name: Initial shutdown schedule: '@single_exec:5m2s' task: openmod_command args: commands: - shutdown enabled: true"
  },
  "userdoc/concepts/logging.html": {
    "href": "userdoc/concepts/logging.html",
    "title": "Logging | OpenMod Docs",
    "keywords": "Logging OpenMod uses Serilog as the default logger implementation. Serilog is configured through the logging.yaml in the OpenMod folder. You can find the documentation for the Serilog configuration here (you will have to convert it from JSON to YAML). Serilog supports many sinks as logging target. You can install new sinks via the openmod install <package id> command and configure them in the logging.yaml. For example, this is how you would configure logging to MySQL/MariaDB instead to file: Install the MariaDB Sink: openmod install Serilog.Sinks.MariaDB Add the MariaDB Sink to the logging.yaml: Serilog: Using: - Serilog - Serilog.Sinks.Console - Serilog.Sinks.File - Serilog.Sinks.Async - Serilog.Sinks.MariaDB # Do not forget to add your sink here WriteTo: - Name: Async # By default OpenMod logs async for performance reasons Args: configure: - Name: MariaDB Args: connectionString: \"server=...\" # See https://www.connectionstrings.com/mysql/ tableName: \"logs\" autoCreateTable: true - Name: Console Args: theme: \"Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme::Code, Serilog.Sinks.Console\" outputTemplate: \"[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}\" Enrich: - FromLogContext MinimumLevel: Default: Information # Only log Information or higher by default Override: # You can configure when specific events should be logged # In this example, the Microsoft.EntityFrameworkCore events below are only logged if Warning or higher Microsoft.EntityFrameworkCore.Database.Command: Warning Microsoft.EntityFrameworkCore.Infrastructure: Warning Microsoft.EntityFrameworkCore.Database.Connection: Warning Microsoft.EntityFrameworkCore.Query: Warning"
  },
  "userdoc/concepts/permissions.html": {
    "href": "userdoc/concepts/permissions.html",
    "title": "OpenMod permissions | OpenMod Docs",
    "keywords": "OpenMod permissions OpenMod has a simple role-based permission system. Permissions define which actions a user can execute and which they cannot. You can manage permissions by editing the openmod.roles.yaml file inside the OpenMod directory or by using the permission and permissionrole commands. You can use the help permission and help permissionrole commands for more information. Note Changes to the openmod.roles.yaml file are applied instantly. Reloading is not necessary. Permission roles Roles are basically a group of permissions and other attributes. If you assign a role to a user, they will automatically inherit all permissions of the role. You can also add parent roles to a role for inheriting permissions. A role has the following attributes: Parents : The parent roles, whose permissions are inherited. Permissions : List of permissions the role has. Display Name : Human-readable name of the role. Is Auto Assigned : Automatically assigns the role to new users. Does not assign to existing users . Data : Data that can be attached to the role by plugins. Priority : In case of conflicting permissions, this attribute will define which role gets preferred. Permission syntax Permissions are always made up of two components: PluginId and Permission. If the plugin ID is Kr4ken.NewEssentials and the permission is commands.home, the full form of the permission we would assign would be Kr4ken.NewEssentials:commands.home. Creating roles To create a new role, open the openmod.roles.yaml file. You will see something similar to this: roles: - id: default parents: [] permissions: - OpenMod.Core:help displayName: Default data: {} isAutoAssigned: true - id: vip priority: 1 parents: - default permissions: - Kr4ken.NewEssentials:commands.home - Kr4ken.NewEssentials:commands.tp - Kr4ken.NewEssentials:kits.vip data: {} This list contains 2 roles: default and vip. Notice how the - starts a new role. To add a new role, simply copy the default role and add it like this: roles: - id: default parents: [] permissions: - OpenMod.Core:help displayName: Default data: {} isAutoAssigned: true - id: vip displayName: VIP priority: 1 parents: - default permissions: - Kr4ken.NewEssentials:commands.home - Kr4ken.NewEssentials:commands.tp - Kr4ken.NewEssentials:kits.vip data: {} - id: megavip displayName: Mega VIP priority: 1 parents: - vip permissions: - Kr4ken.NewEssentials:kits.megavip data: {} Removing roles To remove a role, remove from the openmod.roles.yaml file or comment it out. Managing role permissions From the earlier example, the megavip role has the following permissions: OpenMod.Core:commands.help (inherited from default, which is a parent of vip) Kr4ken.NewEssentials:kits.vip (inherited from vip) Kr4ken.NewEssentials:kits.megavip What if we want it to have vip as parent, but we do not want it to inherit the Kr4ken.NewEssentials:kits.vip permission? In that case, we can negate the permission by adding it prefixed with a \"!\": - id: megavip displayName: Mega VIP priority: 1 parents: - default - vip permissions: - '!Kr4ken.NewEssentials:kits.vip' # Forcefully removes the permission, even if inherited - Kr4ken.NewEssentials:kits.megavip data: {} The ! prefix will forcefully remove any permission. Note You can also add and remove permissions with the om p command: om p add role megavip !Kr4ken.NewEssentials:kit.vip Note If you are managing RocketMod permissions from OpenMod, you must add RocketMod: to the beginning of the permission. For example, if the RocketMod permission is help , the equivalent in OpenMod is RocketMod:help . User permissions and assigning roles You can assign roles to users by using the om r add player <player> <role> command, e.g. om r add player Trojaner megavip . Similarly, you can remove users from a role by typing om r remove player <player> <role> Permissions can be directly attached to users: om p add player Trojaner Kr4ken.NewEssentials:kits.vip . User permissions always override any conflicting role permissions. You can use om p remove Trojaner Kr4ken.NewEssentials:kits.vip to remove the permission again. Wildcards Assume a teleport plugin has the following permissions: TeleportPlugin:teleport TeleportPlugin:teleport.bring TeleportPlugin:teleport.bring.request TeleportPlugin:teleport.request Instead of adding all of these one by one, you can use the * wildcard to add all of them: TeleportPlugin:teleport.* This will grant all permissions from above. You can also use TeleportPlugin:* to grant full access to the plugin. Note Just adding the TeleportPlugin:teleport permission will not grant the child permissions like TeleportPlugin:teleport.bring. Finding command permissions If you do not know what permission a command requires, you can use help <command> to find it. Permissions for child commands are not granted automatically and must be given either by using wildcards on the parent command permission or by specifying them directly. You can also look up permissions by checking out the help.md file generated in each plugins folder."
  },
  "userdoc/concepts/plugins.html": {
    "href": "userdoc/concepts/plugins.html",
    "title": "OpenMod plugins | OpenMod Docs",
    "keywords": "OpenMod plugins Plugins add new functionality to your server. OpenMod provides commands to download, install, update, and remove plugins at runtime. Finding plugins You can find a list of plugins at the openmod-plugins page or on nuget.org . Installing and updating plugins There are two ways to install plugins: Option 1: Installing plugins from NuGet . You can install plugins from NuGet using the openmod install <package id> command, e.g. openmod install Kr4ken.NewEssentials . To install specific versions, use openmod install <package id>@<version> . If you want to enable installation of pre-release versions, add the -Pre option: openmod install <package id> -Pre . To update plugins, run openmod install <package id> again. Option 2: Installing plugins manually . You can install plugins manually by moving the plugin dll file and all libraries of the plugin to the openmod/plugins folder. You can also install libraries with openmod install <package id> instead. To update plugins replace the .dll file with the newer one. Note You must reload OpenMod with openmod reload to apply changes after installing or updating plugins. Removing plugins To remove plugins which have been installed using openmod install , use openmod remove <package id> . If you installed the plugin manually instead, delete the .dll file. Note You must reload OpenMod with openmod reload to apply changes after removing plugins."
  },
  "userdoc/concepts/translations.html": {
    "href": "userdoc/concepts/translations.html",
    "title": "Translation files | OpenMod Docs",
    "keywords": "Translation files Translations files allow you to translate or customize OpenMod or plugin messages. OpenMod's translation file openmod.translations.yaml can be found inside the OpenMod directory: commands: openmod: restricted: \"This command is restricted.\" errors: out_of_range_error: \"Too few arguments: missing parameter at index {Index} of type {Type.Name}\" parse_error: \"Parse error: could not parse {Value} to {Type.Name}\" not_found: \"Command was not found: {CommandName}\" wrong_usage: \"Wrong command usage. Correct usage: {Command} {Syntax}\" OpenMod uses SmartFormat.NET for parsing translation arguments. See the SmartFormat.NET wiki for more information. Warning Translation files are currently not updated automatically. If OpenMod or a plugin adds a new translation, you will have to add it manually to the yaml file or delete the file so it gets recreated."
  },
  "userdoc/installation/auto-updates.html": {
    "href": "userdoc/installation/auto-updates.html",
    "title": "Enabling auto updates | OpenMod Docs",
    "keywords": "Enabling auto updates OpenMod can automatically update itself on each server start. You can enable it by Starting the server with -OpenModAutoUpdate argument, or Setting the OpenMod_EnableAutoUpdate environment variable to true . Auto updating is disabled by default."
  },
  "userdoc/installation/unturned.html": {
    "href": "userdoc/installation/unturned.html",
    "title": "Installing OpenMod for Unturned | OpenMod Docs",
    "keywords": "Installing OpenMod for Unturned Step 1. Download the latest OpenMod.Unturned.Module-vX.X.X.zip from here . Step 2. Copy the \"OpenMod.Unturned\" folder into the \"Modules\" folder inside the Unturned installation directory. Step 3. Start your server. The first start will take a while since OpenMod will download its core components. Step 4. Done! Now you can start installing plugins ."
  },
  "userdoc/integrations/unturned-rocketmod.html": {
    "href": "userdoc/integrations/unturned-rocketmod.html",
    "title": "RocketMod integration | OpenMod Docs",
    "keywords": "RocketMod integration OpenMod supports side by side installation with RocketMod. It will automatically detect RocketMod and apply patches on the fly. In other words, you do not have to chose which plugin framework you want, you can use both. Advanced RocketMod configuration You can adjust the openmod.unturned.yaml file for more advanced scenarios, like making RocketMod use OpenMod's permission system instead of RocketMod's Permissions.xml or OpenMod's economy system instead of Uconomy: # Configuration for RocketMod integration. Will have no effects if RocketMod is not installed. # RocketMod must be installed as a separate module for these to work. If using the legacy OpenMod RocketMod Bridge these will not work. rocketmodIntegration: # Sets the permission system to use # Available values: # - RocketMod: OpenMod will use RocketMod's permission system (default) # - OpenMod: RocketMod will use OpenMod's permission system # - Separate: OpenMod and RocketMod will not have synced permissions permissionSystem: RocketMod # Sets the economy system to use # Available values: # - RocketMod_Uconomy: OpenMod will use Uconomy for its economy system (default) # - OpenMod_Uconomy: RocketMod Uconomy will use OpenMod's economy system # - Separate: OpenMod and RocketMod will not have synced economy economySystem: RocketMod_Uconomy"
  },
  "userdoc/intro.html": {
    "href": "userdoc/intro.html",
    "title": "OpenMod User Documentation | OpenMod Docs",
    "keywords": "OpenMod User Documentation Here you can find information about installing and using OpenMod."
  }
}